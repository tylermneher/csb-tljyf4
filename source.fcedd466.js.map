{"version":3,"sources":["node_modules/global/window.js","node_modules/global/document.js","node_modules/@babel/runtime/helpers/extends.js","node_modules/keycode/index.js","node_modules/@babel/runtime/helpers/assertThisInitialized.js","node_modules/@babel/runtime/helpers/setPrototypeOf.js","node_modules/@babel/runtime/helpers/inheritsLoose.js","node_modules/safe-json-parse/tuple.js","node_modules/is-function/index.js","node_modules/@videojs/xhr/lib/http-handler.js","node_modules/@videojs/xhr/lib/index.js","node_modules/videojs-vtt.js/lib/vtt.js","node_modules/videojs-vtt.js/lib/vttcue.js","node_modules/videojs-vtt.js/lib/vttregion.js","node_modules/videojs-vtt.js/lib/browser-index.js","node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","node_modules/@babel/runtime/helpers/construct.js","node_modules/@babel/runtime/helpers/inherits.js","node_modules/url-toolkit/src/url-toolkit.js","node_modules/@videojs/vhs-utils/es/resolve-url.js","node_modules/@videojs/vhs-utils/es/stream.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","node_modules/m3u8-parser/dist/m3u8-parser.es.js","node_modules/@videojs/vhs-utils/es/codecs.js","node_modules/@videojs/vhs-utils/es/media-types.js","node_modules/@videojs/vhs-utils/es/byte-helpers.js","node_modules/@videojs/vhs-utils/es/media-groups.js","node_modules/@xmldom/xmldom/lib/conventions.js","node_modules/@xmldom/xmldom/lib/dom.js","node_modules/@xmldom/xmldom/lib/entities.js","node_modules/@xmldom/xmldom/lib/sax.js","node_modules/@xmldom/xmldom/lib/dom-parser.js","node_modules/@xmldom/xmldom/lib/index.js","node_modules/mpd-parser/dist/mpd-parser.es.js","node_modules/mux.js/lib/utils/numbers.js","node_modules/mux.js/lib/tools/parse-sidx.js","node_modules/@videojs/vhs-utils/es/id3-helpers.js","node_modules/@videojs/vhs-utils/es/codec-helpers.js","node_modules/@videojs/vhs-utils/es/opus-helpers.js","node_modules/@videojs/vhs-utils/es/mp4-helpers.js","node_modules/@videojs/vhs-utils/es/ebml-helpers.js","node_modules/@videojs/vhs-utils/es/nal-helpers.js","node_modules/@videojs/vhs-utils/es/containers.js","node_modules/mux.js/lib/utils/clock.js","node_modules/video.js/dist/video.es.js","node_modules/videojs-contrib-quality-levels/dist/videojs-contrib-quality-levels.es.js","node_modules/videojs-http-source-selector/dist/videojs-http-source-selector.es.js","index.js"],"names":["_extends","module","exports","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","__esModule","apply","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","require","_inheritsLoose","subClass","superClass","create","constructor","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","instance","Function","_inherits","TypeError","value","writable","configurable","defineProperty","resolveUrl","DEFAULT_LOCATION","baseUrl","relativeUrl","test","window","location","href","nativeURL","URL","protocolLess","removeLocation","URLToolkit","buildAbsoluteURL","newUrl","slice","protocol","Stream","listeners","_proto","on","type","listener","off","index","indexOf","splice","trigger","callbacks","Array","_length","_i","dispose","pipe","destination","data","atob","s","Buffer","from","toString","decodeB64ToUint8Array","b64Text","decodedString","array","Uint8Array","charCodeAt","LineStream","_Stream","_this","buffer","nextNewline","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","parseInt","offset","attributeSeparator","RegExp","parseAttributes","attributes","attr","attrs","split","replace","ParseStream","customParsers","tagMappers","line","event","_this2","trim","reduce","acc","mapper","mappedLine","concat","forEach","newLine","tagType","duration","parseFloat","title","version","number","playlistType","allowed","URI","uri","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","subkey","text","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","map","camelCase","str","toUpperCase","camelCaseKeys","keys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","currentMap","_key","uris","currentUri","hasParts","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","part","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","Number","translateLegacyCodecs","codecs","mapLegacyAvcCodecs","codecString","parseCodecs","codecType","name","details","mediaType","codecsFromDefault","master","audioGroupId","AUDIO","audioGroup","audioType","CODECS","isVideoCodec","isAudioCodec","isTextCodec","getMimeForCodec","c","container","every","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","repeat","len","countBits","x","countBytes","Math","ceil","padStart","b","isArrayBufferView","obj","ArrayBuffer","isView","isTypedArray","toUint8","bytes","isArray","byteOffset","byteLength","toHexString","toBinaryString","BigInt","BYTE_TABLE","ENDIANNESS","Uint16Array","IS_BIG_ENDIAN","IS_LITTLE_ENDIAN","bytesToNumber","_temp","_ref$signed","signed","_ref$le","le","fn","total","byte","exponent","abs","max","numberToBytes","_temp2","_ref2$le","byteCount","byteIndex","bytesToString","string","decodeURIComponent","escape","stringToBytes","stringIsBytes","unescape","encodeURIComponent","view","concatTypedArrays","_len","buffers","filter","totalLen","buf","tempBuffer","set","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","sliceBytes","src","reverseBytes","reverse","forEachMediaGroup","groups","callback","groupKey","labelKey","mediaProperties","freeze","object","oc","undefined","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","conventions","notEmptyString","input","splitOnASCIIWhitespace","orderedSetReducer","current","element","toOrderedSet","list","arrayIncludes","copy","dest","Super","pt","t","console","error","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","code","Error","captureStackTrace","NodeList","LiveNodeList","node","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","ownerElement","doc","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","tagName","lastIndex","DOMImplementation","Node","_xmlEncoder","_visitNode","firstChild","nextSibling","Document","namespaceURI","_nsMap","prefix","localName","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","parentNode","previous","previousSibling","next","lastChild","_insertBefore","nextChild","cp","removeChild","nodeType","newFirst","newLast","pre","_appendSingleChild","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","nodeName","prefixedNodeName","defaultNS","ai","item","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","importNode","deep","node2","cloneNode","appendChild","n","v","attrs2","_ownerElement","setAttributeNode","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","createDocument","doctype","implementation","root","createElementNS","createDocumentType","nodeValue","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","normalize","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","createElement","createDocumentFragment","createTextNode","createComment","createCDATASection","createProcessingInstruction","createAttribute","specified","createEntityReference","pl","createAttributeNS","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","count","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","get","$$length","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","entityMap","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError","locator","XMLReader","parse","defaultNSMapCopy","domBuilder","errorHandler","entityReplacer","k","charAt","surrogate1","surrogate2","fixedFromCharCode","substr","appendText","xt","position","characters","m","lineEnd","linePattern","lineStart","lineNumber","columnNumber","parseStack","currentNSMap","closeMap","tagStart","currentElement","config","pop","localNSMap","endMatch","endElement","endPrefixMapping","fatalError","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","warning","locator2","copyLocator","appendElement","parseHtmlSpecialContent","f","addAttribute","qname","startIndex","attributeNames","addValue","attrName","setTagName","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","elStartEnd","elEndStart","pos","lastIndexOf","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","processingInstruction","defaultNSMap","startDocument","endDocument","getLocalName","getLocator","getQName","getURI","getValue","dom","entities","sax","DOMParser","buildErrorHandler","errorImpl","DOMHandler","isCallback","build","msg","_locator","cdata","l","_toString","chars","java","lang","hander","parseFromString","mimeType","xmlns","setDocumentLocator","xml","documentURI","ins","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","warn","__DOMHandler","isObject","merge","objects","values","range","flatten","lists","y","findIndexes","findIndex","matchingFunction","union","keyFunction","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","resolvedUri","ranges","startRange","endRange","MAX_SAFE_INTEGER","byteRangeToString","parseEndNumber","endNumber","segmentRange","static","_attributes$timescale","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$periodSta","periodStart","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","min","toSegments","_attributes$timescale3","_attributes$startNumb","startNumber","time","parseByDuration","_attributes$timescale4","_segmentRange$type","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","presentationTime","_attributes$number","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","reference","size","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","sort","findPlaylistWithName","getMediaGroupPlaylists","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","_ref4","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","positionManifestOnTimeline","_ref5","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","_acc$name$segments","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","_attributes","bandwidth","SUBTITLES","formatVttPlaylist","_m3u8Attributes","m3u8Attributes","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","aspectRatio","easyReader","formatVideoPlaylist","_attributes2","videoOnly","contentType","audioOnly","vttOnly","_ref6","addMediaSequenceValues","_ref7","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","_ref8","_mediaGroups","dashPlaylists","locations","_ref8$sidxMapping","previousManifest","_dashPlaylists$0$attr","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","_ref9","subs","cc","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","d","segmentTime","nextS","identifierPattern","identifierReplacement","format","constructTemplateUrl","url","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","toPlaylists","representations","findChildren","getContent","textContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parseDate","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","psshNode","parseCaptionServiceMetadata","_value$split","flags","_value$split2","_value$split2$","opts","opt","_opt$split","val","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","accessibility","labelVal","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","adaptationSets","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periodNodes","periods","priorPeriod","representationInfo","stringToMpdXml","manifestString","parser","parseUTCTimingScheme","UTCTimingNode","VERSION","parsedManifestInfo","parseUTCTiming","MAX_UINT32","pow","getUint64","uint8","dv","DataView","getBigUint64","getUint32","parseSidx","subarray","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","ID3","getId3Size","returnSize","getId3Offset","getAv1Codec","bitDepth","level","tier","highBitDepth","twelveBit","monochrome","chromaSubsamplingX","chromaSubsamplingY","chromaSamplePosition","getAvcCodec","getHvcCodec","profileSpace","profileId","tierFlag","profileCompat","constraintIds","levelId","profileCompatVal","constraints","OPUS_HEAD","parseOpusHead","getUint8","littleEndian","channels","preSkip","sampleRate","outputGain","channelMappingFamily","streamCount","twoChannelStreamCount","channelMapping","setOpusHead","setUint8","setUint16","setUint32","foreach","cm","DESCRIPTORS","normalizePath","path","normalizePaths","paths","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","desc","dependsOnEsId","ocrEsId","descriptors","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","complete","findNamedBox","parseSamples","entrySize","parseEntry","entries","entryCount","buildFrameTable","stbl","keySamples","chunkOffsets","timeToSamples","sampleCount","sampleDelta","samplesToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsz","sampleSizes","frames","chunkIndex","samplesInChunk","sampleToChunk","chunkOffset","frameEnd","keyframe","frame","_timeToSamples$k","lastTimestamp","timestamp","addSampleDescription","track","info","avcC","esds","esDescriptor","decoderConfig","vpcC","chromaSubsampling","videoFullRangeFlag","colourPrimaries","transferCharacteristics","matrixCoefficients","dOps","opus","codecDelay","parseTracks","frameTable","traks","tracks","trak","mdia","hdlr","trakType","tkhd","tkhdVersion","mdhd","stsd","descriptionCount","sampleDescriptor","parseMediaInfo","mvhd","timestampScale","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","decodeBlock","block","clusterTimestamp","trackNumber","getInt16","ptsdts","parsed","invisible","lacing","discardable","pts","dts","numberOfFrames","frameSizes","sizeOfFrame","_size","_i2","vint","parseVp9Private","params","decodedTracks","trackType","decodedTrack","rawCodec","codecPrivate","defaultDuration","rawData","_parseVp9Private","parseData","allBlocks","clusters","cluster","ci","simpleBlocks","blockGroups","bi","decoded","blocks","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","findH264Nal","findH265Nal","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","isLikelyTypes","isLikelyFn","isLikely","detectContainerForBytes","isLikelyFmp4MediaSegment","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","timelineStartPts","keepOriginalTimestamps","videojs","browserApi","version$5","hooks_","hooks","hook","removeHook","hookOnce","original","wrapper","FullscreenApi","prefixed","apiMap","specApi","document","history","LogByTypeFactory","log","lvl","levels","lvlRegExp","window$1","createLogger$1","logByType","createLogger","subname","all","debug","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","each","initial","accum","sources","isPlain","computedStyle","getComputedStyle","computedStyleValue","getPropertyValue","USER_AGENT","navigator","userAgent","webkitVersionMap","appleWebkitVersion","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","throwIfWhitespace","classRegExp","className","isEl","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","createEl","content","getOwnPropertyNames","propName","appendContent","innerText","prependTo","hasClass","classToCheck","classList","contains","addClass","classToAdd","add","removeClass","classToRemove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","rect","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","transform","_values","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_initialGuid","_guid","newGUID","WeakMap","vdata","performance","access","_supportsPassive","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","supportsPassive","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","uid","bound","throttle","last","debounce","immediate","timeout","debounced","_later","clearTimeout","cancel","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","objName","name_","isEvented","eventBusEl_","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","largs","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","el_","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set$1","Set","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","isDisposed","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","keycode","isEventKey","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","requestNamedAnimationFrame","_this5","cancelNamedAnimationFrame","cancelAnimationFrame","_this6","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","timeRangesObj","Symbol","iterator","createTimeRanges","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","trackEl","json","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","previouslyActiveEl_","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","activeElement","playerEl","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","labelchange_","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","trackProps","_loop","newLabel","parseUrl","props","host","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","WebVTT","vttjs","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","cors","withCredentials","tech_","XHR","err","response","responseBody","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","newEnabled","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","vtt","script","onload","onerror","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","_this8","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","_middleware","mwrest","_src","MimetypesKind","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","j","techOrder","techName","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","selectedLanguage","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","h","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","formattedTime_","oldNode","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","div","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","bottom","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newIndex","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","innerHTML","createElFont_","createElControls_","defaultsDescription","setValues","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","setter","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","fullscreen","msMatchesSelector","_this9","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","_this10","resolve","play_","_this11","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","_this12","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this13","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this14","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","handleSrc_","isRetry","_this15","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","retryOnError","retry","stopListeningForErrors","_this16","sourceTech","_this17","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","techAutoplay","newPoster","usingNativeControls_","_this18","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","_this19","playerChildren","controlBarHeight","disableAudioOnlyUI_","_this20","exitPromises","enablePosterModeUI_","disablePosterModeUI_","_this21","toJSON","createModal","_this22","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this23","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","safeParseTuple","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","hasPlugin","extend","subClassMethods","methods","super_","normalizeId","getPlayer","defaultView","PlayerComponent","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","mergeOptions","addLanguage","_mergeOptions","createTimeRange","EventTarget","xhr","_resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","experimentalExactManifestTimings","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","_ret","Playlist","createPlaylistID","parseManifest","onwarn","oninfo","_ref$customTagParsers","customTagParsers","_ref$customTagMappers","customTagMappers","experimentalLLHLS","customParser","setupMediaPlaylist","playlistErrors_","setupMediaPlaylists","resolveMediaGroupUris","masterForMedia","addPropertiesToMaster","phonyUri","audioOnlyMaster","groupId","mergeOptions$2","EventTarget$1","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","updateSegment","skipped","updateSegments","oldSegments","newSegments","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","handleMediaupdatetimeout_","playlistRequestError","haveMetadata","playlistString","responseText","startingState","parseManifest_","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","onreadystatechange","abort","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseType","responseTime","roundTripTime","requestTime","headers","responseHeaders","timedout","aborted","statusCode","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","byterangeStr","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","offsetFromSegmentStart","transmuxedPresentationStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","lastSegmentStart","lastSegmentDuration","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","verifyProgramDateTimeTags","getProgramTime","_ref$time","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","mediaOffset","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","beforeSend","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","parseMasterXml","masterXml","srcUrl","updateMaster","oldMaster","newMaster","noChanges","playlistUpdate","_playlistUpdate","equivalentSidx","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","filterChangedSidxMappings","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","fin","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","mpl","mup","createMUPTimeout_","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","stringToArrayBuffer","browserWorkerPolyFill","workerObj","createObjectURL","Blob","blob","BlobBuilder","getBlob","factory","objectUrl","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","init","flushSource","partialFlush","endTimeline","dinf","ftyp","mfhd","minf","mvex","sdtp","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","stream","MAX_UINT32$1","numbers","avc1","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stts","styp","tfdt","tfhd","trun","vmhd","payload","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","sampleForFrame","dataOffset","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","metaTable","arr","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","emulationPreventionBytesPositions","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","isEmpty","addText","backspace","row","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","win","setCurrentWindow","TextDecoder","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","_char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","decode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover$1","direction","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","privateData","tagSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","fragment","trackId","pes","ptsDtsFlags","startPrefix","packetLength","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","subresults","toUnsigned$1","getUint64$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","commonjsGlobal","globalThis","global","window_1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","allSamples","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","lowestTime","baseTime","scale","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover","probe","parseAudioPes_","pesType","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","handleData_","transmuxedData","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","waitForEndedTimelineEvent","currentTransmux","dequeue","transmuxQueue","processAction","enqueueAction","transmux","createTransmuxer","term","segmentTransmuxer","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","_callback","handleInitSegmentResponse","encryptedBytes","parseError","handleSegmentResponse","newBytes","lastReachedChar","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","decryptSegment","requestId","decryptedBytes","waitForCompletion","didError","segmentFinish","endOfAllRequests","handleLoadEnd","_ref10","loadendState","abortFn","calledAbortFn","handleProgress","_ref11","progressFn","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","keyXhr","mapKeyXhr","initSegmentXhr","segmentRequestOptions","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","experimentalLeastPixelDiffSelector","leastPixelDiffList","pixelDiff","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","masterPlaylistController_","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","syncController","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","getSyncPoint","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","concatSegments","segmentObj","createCaptionsTrackIfNotExists","inbandTextTracks","def","captionService","addCaptionData","captionArray","Cue","WebKitDataCue","deprecateOldCue","addMetadata","metadataArray","videoDuration","metadataTrack","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","removeDuplicateCuesFromTrack","duplicates","occurrences","dupe","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","QUOTA_EXCEEDED_ERR","getSyncSegmentCandidate","targetTime","timelineSegments","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","timestampOffsetForSegment","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","_error","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","_Playlist$getMediaInf","_partIndex","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","handleAppendError_","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","addSourceBuffer","mime","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char3","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","_segment$cueOutCont$s","adOffset","adTotal","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","createCommonjsModule","basedir","commonjsRequire","createClass","_defineProperties","Constructor","protoProps","staticProps","inheritsLoose","precompute","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","aesTables","AES","tmp","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","activeTrack","activeGroup","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","isMasterPlaylist","onGroupChanging","onTrackChanged","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","blacklistCurrentPlaylist","defaultTrack","setupListeners","requestOptions","initialize","_settings$mediaTypes$","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","newProps","groupMatch","variants","groupKeys","groupPropertyList","activeTrack_","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","experimentalBufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","shouldSwitchToMedia_","switchMedia_","cause","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","smoothQualityChange","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","currentRange","livePoint","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","version$3","version$2","version$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY","handleVhsMediaChange","qualityLevels","selectedIndex_","handleVhsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","dataUri","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","option","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","qualityLevels_","dash","convertToProgramTime","VhsSourceHandler","_videojs$mergeOptions","_videojs$mergeOptions2","_videojs$mergeOptions3","_videojs$mergeOptions4","_videojs$mergeOptions5","legacyOverrideNative","supportedType","supportsNativeMediaSources","QualityLevel","IS_IE8","bitrate","QualityLevelList","levels_","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","originalPluginFn","qualityLevelList","disposeHandler","httpSourceSelector","SourceMenuItem","SourceMenuButton","menuItems","labels","sortVal","onPlayerReady","videojs_http_source_selector_initialized","fullscreenToggle","nativeAudioTracks","nativeVideoTracks","pictureInPictureToggle"],"mappings":"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","file":"source.fcedd466.js","sourceRoot":"..","sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","'use strict'\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\n\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tdest[p] = src[p];\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0, \n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long \n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t}\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities \n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t\t\n\t\t\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises \n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises \n\t\tthis.insertBefore(newChild,oldChild);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n    \t\t\t\tif(map[n] == namespaceURI){\n    \t\t\t\t\treturn n;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n * \n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n/**\n * preformance key(refChild == null)\n */\nfunction _insertBefore(parentNode,newChild,nextChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tcp.removeChild(newChild);//remove and update\n\t}\n\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = newChild.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn newChild;\n\t\t}\n\t\tvar newLast = newChild.lastChild;\n\t}else{\n\t\tnewFirst = newLast = newChild;\n\t}\n\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = nextChild;\n\t\n\t\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparentNode.firstChild = newFirst;\n\t}\n\tif(nextChild == null){\n\t\tparentNode.lastChild = newLast;\n\t}else{\n\t\tnextChild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parentNode;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t//console.log(parentNode.lastChild.nextSibling == null)\n\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnewChild.firstChild = newChild.lastChild = null;\n\t}\n\treturn newChild;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tvar pre = parentNode.lastChild;\n\t\tcp.removeChild(newChild);//remove and update\n\t\tvar pre = parentNode.lastChild;\n\t}\n\tvar pre = parentNode.lastChild;\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = pre;\n\tnewChild.nextSibling = null;\n\tif(pre){\n\t\tpre.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n\t//console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n}\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\tif(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\t\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\t\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\t\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t\t\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\t\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\t\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\t\n\tvar i = visibleNamespaces.length \n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml/#CleanAttrVals\n * @see https://www.w3.org/TR/xml/#NT-AttValue\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g,_xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\t\t\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\t\t\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\t\t\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&]/g,_xmlEncoder)\n\t\t\t.replace(/]]>/g, ']]&gt;')\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor(var n in node){\n\t\tvar v = node[n];\n\t\tif(typeof v != 'object' ){\n\t\t\tif(v != node2[n]){\n\t\t\t\tnode2[n] = v;\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","var freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({amp:'&', apos:\"'\", gt:'>', lt:'<', quot:'\"'})\n\n/**\n * A map of currently 241 entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       Aring: \"Å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring \nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\t\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif(k in entityMap){\n\t\t\treturn entityMap[k]; \n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\t\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\t\t\t\t\t\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor(var prefix in localNSMap){\n\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\t\t\t\t\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(qname, value, startIndex)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t//console.log(attrName,value,start,p)\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\t//console.dir(el)\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value.replace(/&#?\\w+;/g,entityReplacer), start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute \n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\t\t\t\t\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor(prefix in localNSMap){\n\t\t\t\tdomBuilder.endPrefixMapping(prefix) \n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\t\t\t\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//} \n}\nfunction _copy(source,target){\n\tfor(var n in source){target[n] = source[n]}\n}\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA() \n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\t\t\t\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\t\t\t\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tif(source && typeof source === 'string'){\n\t\tsax.parse(source,defaultNSMap,entityMap);\n\t}else{\n\t\tsax.errorHandler.error(\"invalid doc source\");\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.DOMParser = DOMParser;\n\n/**\n * @deprecated Import/require from main entry point instead\n */\nexports.DOMImplementation = dom.DOMImplementation;\n\n/**\n * @deprecated Import/require from main entry point instead\n */\nexports.XMLSerializer = dom.XMLSerializer;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","/*! @name mpd-parser @version 0.21.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"0.21.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n/**\n * Returns the first index that satisfies the matching function, or -1 if not found.\n *\n * Only necessary because of IE11 support.\n *\n * @param {Array} list - the list to search through\n * @param {Function} matchingFunction - the matching function\n *\n * @return {number} the matching index or -1 if not found\n */\n\nvar findIndex = function findIndex(list, matchingFunction) {\n  for (var i = 0; i < list.length; i++) {\n    if (matchingFunction(list[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nvar union = function union(lists, keyFunction) {\n  return values(lists.reduce(function (acc, list) {\n    list.forEach(function (el) {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    var startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    var endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    var length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length: length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nvar parseEndNumber = function parseEndNumber(endNumber) {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration,\n        periodDuration = attributes.periodDuration;\n    var endNumber = parseEndNumber(attributes.endNumber);\n    var segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$periodSta = attributes.periodStart,\n        periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    var now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    var periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodStart = attributes.periodStart,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodStart,\n      time: number * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var type = attributes.type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      periodDuration = attributes.periodDuration,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // section is either a period or the full source\n\n    var sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      periodStart = attributes.periodStart,\n      presentationTime = attributes.presentationTime,\n      _attributes$number = attributes.number,\n      number = _attributes$number === void 0 ? 0 : _attributes$number,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSidxSegmentsToPlaylist$1 = function addSidxSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = [];\n  var type = playlist.endList ? 'static' : 'dynamic';\n  var periodStart = playlist.sidx.timeline;\n  var presentationTime = periodStart;\n  var number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = void 0; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      periodStart: periodStart,\n      presentationTime: presentationTime,\n      number: number,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange,\n      type: type\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nvar TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nvar getUniqueTimelineStarts = function getUniqueTimelineStarts(timelineStarts) {\n  return union(timelineStarts, function (_ref) {\n    var timeline = _ref.timeline;\n    return timeline;\n  }).sort(function (a, b) {\n    return a.timeline > b.timeline ? 1 : -1;\n  });\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nvar findPlaylistWithName = function findPlaylistWithName(playlists, name) {\n  for (var i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nvar getMediaGroupPlaylists = function getMediaGroupPlaylists(manifest) {\n  var mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, function (properties, type, group, label) {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nvar updateMediaSequenceForPlaylist = function updateMediaSequenceForPlaylist(_ref2) {\n  var playlist = _ref2.playlist,\n      mediaSequence = _ref2.mediaSequence;\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach(function (segment, index) {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nvar updateSequenceNumbers = function updateSequenceNumbers(_ref3) {\n  var oldPlaylists = _ref3.oldPlaylists,\n      newPlaylists = _ref3.newPlaylists,\n      timelineStarts = _ref3.timelineStarts;\n  newPlaylists.forEach(function (playlist) {\n    playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref4) {\n      var timeline = _ref4.timeline;\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    var oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    var firstNewSegment = playlist.segments[0];\n    var oldMatchingSegmentIndex = findIndex(oldPlaylist.segments, function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist: playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    var oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist: playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nvar positionManifestOnTimeline = function positionManifestOnTimeline(_ref5) {\n  var oldManifest = _ref5.oldManifest,\n      newManifest = _ref5.newManifest;\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  var oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  var newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists: oldPlaylists,\n    newPlaylists: newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nvar generateSidxKey = function generateSidxKey(sidx) {\n  return sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n    if (!acc[name]) {\n      // First Period\n      acc[name] = playlist;\n      acc[name].attributes.timelineStarts = [];\n    } else {\n      // Subsequent Periods\n      if (playlist.segments) {\n        var _acc$name$segments;\n\n        // first segment of subsequent periods signal a discontinuity\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments);\n      } // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    }\n\n    acc[name].attributes.timelineStarts.push({\n      // Although they represent the same number, it's important to have both to make it\n      // compatible with HLS potentially having a similar attribute.\n      start: playlist.attributes.periodStart,\n      timeline: playlist.attributes.periodStart\n    });\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSidxSegmentsToPlaylist = function addSidxSegmentsToPlaylist(playlist, sidxMapping) {\n  var sidxKey = generateSidxKey(playlist.sidx);\n  var sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nvar addSidxSegmentsToPlaylists = function addSidxSegmentsToPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref, isAudioOnly) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx,\n      mediaSequence = _ref.mediaSequence,\n      discontinuitySequence = _ref.discontinuitySequence,\n      discontinuityStarts = _ref.discontinuityStarts;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuitySequence: discontinuitySequence,\n    discontinuityStarts: discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence: mediaSequence,\n    segments: segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _m3u8Attributes;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments,\n      mediaSequence = _ref2.mediaSequence,\n      discontinuityStarts = _ref2.discontinuityStarts,\n      discontinuitySequence = _ref2.discontinuitySequence;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  var m3u8Attributes = (_m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth\n  }, _m3u8Attributes['PROGRAM-ID'] = 1, _m3u8Attributes);\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  return {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts: discontinuityStarts,\n    discontinuitySequence: discontinuitySequence,\n    mediaSequence: mediaSequence,\n    segments: segments\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping, isAudioOnly) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (isAudioOnly === void 0) {\n    isAudioOnly = false;\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language: language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    var formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nvar organizeCaptionServices = function organizeCaptionServices(captionServices) {\n  return captionServices.reduce(function (svcObj, svc) {\n    if (!svc) {\n      return svcObj;\n    }\n\n    svc.forEach(function (service) {\n      var channel = service.channel,\n          language = service.language;\n      svcObj[language] = {\n        autoselect: false,\n        default: false,\n        instreamId: channel,\n        language: language\n      };\n\n      if (service.hasOwnProperty('aspectRatio')) {\n        svcObj[language].aspectRatio = service.aspectRatio;\n      }\n\n      if (service.hasOwnProperty('easyReader')) {\n        svcObj[language].easyReader = service.easyReader;\n      }\n\n      if (service.hasOwnProperty('3D')) {\n        svcObj[language]['3D'] = service['3D'];\n      }\n    });\n    return svcObj;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes2;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx,\n      discontinuityStarts = _ref3.discontinuityStarts;\n  var playlist = {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuityStarts: discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments: segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nvar videoOnly = function videoOnly(_ref4) {\n  var attributes = _ref4.attributes;\n  return attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n};\n\nvar audioOnly = function audioOnly(_ref5) {\n  var attributes = _ref5.attributes;\n  return attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n};\n\nvar vttOnly = function vttOnly(_ref6) {\n  var attributes = _ref6.attributes;\n  return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n};\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nvar addMediaSequenceValues = function addMediaSequenceValues(playlists, timelineStarts) {\n  // increment all segments sequentially\n  playlists.forEach(function (playlist) {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref7) {\n      var timeline = _ref7.timeline;\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach(function (segment, index) {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nvar flattenMediaGroupPlaylists = function flattenMediaGroupPlaylists(mediaGroupObject) {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce(function (acc, label) {\n    var labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nvar toM3u8 = function toM3u8(_ref8) {\n  var _mediaGroups;\n\n  var dashPlaylists = _ref8.dashPlaylists,\n      locations = _ref8.locations,\n      _ref8$sidxMapping = _ref8.sidxMapping,\n      sidxMapping = _ref8$sidxMapping === void 0 ? {} : _ref8$sidxMapping,\n      previousManifest = _ref8.previousManifest;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      type = _dashPlaylists$0$attr.type,\n      suggestedPresentationDelay = _dashPlaylists$0$attr.suggestedPresentationDelay,\n      minimumUpdatePeriod = _dashPlaylists$0$attr.minimumUpdatePeriod;\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  var captions = dashPlaylists.map(function (playlist) {\n    return playlist.attributes.captionServices;\n  }).filter(Boolean);\n  var manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  var isAudioOnly = manifest.playlists.length === 0;\n  var organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  var organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  var formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  var playlistTimelineStarts = formattedPlaylists.map(function (_ref9) {\n    var timelineStarts = _ref9.timelineStarts;\n    return timelineStarts;\n  });\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$periodSta = attributes.periodStart,\n      periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + periodStart;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var type = attributes.type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodStart;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    var presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    var map = {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime: presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr,\n      periodStart = attributes.periodStart; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay: function suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type: function type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset: function presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nvar parseCaptionServiceMetadata = function parseCaptionServiceMetadata(service) {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    var values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(function (value) {\n      var channel;\n      var language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        var _value$split = value.split('=');\n\n        channel = _value$split[0];\n        language = _value$split[1];\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel: channel,\n        language: language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    var _values = typeof service.value !== 'string' ? [] : service.value.split(';');\n\n    return _values.map(function (value) {\n      var flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        var _value$split2 = value.split('='),\n            channel = _value$split2[0],\n            _value$split2$ = _value$split2[1],\n            opts = _value$split2$ === void 0 ? '' : _value$split2$;\n\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(function (opt) {\n          var _opt$split = opt.split(':'),\n              name = _opt$split[0],\n              val = _opt$split[1];\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n    var captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n    if (captionServices) {\n      attrs = merge(attrs, {\n        captionServices: captionServices\n      });\n    }\n\n    var label = findChildren(adaptationSet, 'Label')[0];\n\n    if (label && label.childNodes.length) {\n      var labelVal = label.childNodes[0].nodeValue.trim();\n      attrs = merge(attrs, {\n        label: labelVal\n      });\n    }\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n    var periodAttributes = merge(mpdAttributes, {\n      periodStart: period.attributes.start\n    });\n\n    if (typeof period.attributes.duration === 'number') {\n      periodAttributes.periodDuration = period.attributes.duration;\n    }\n\n    var adaptationSets = findChildren(period.node, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period.node);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nvar getPeriodStart = function getPeriodStart(_ref) {\n  var attributes = _ref.attributes,\n      priorPeriodAttributes = _ref.priorPeriodAttributes,\n      mpdType = _ref.mpdType;\n\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var locations = findChildren(mpd, 'Location');\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  var periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach(function (node, index) {\n    var attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    var priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes: attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node: node,\n      attributes: attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n  };\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new DOMParser();\n  var xml;\n  var mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throwsw on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  var playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","import { padStart, toHexString, toBinaryString } from './byte-helpers.js'; // https://aomediacodec.github.io/av1-isobmff/#av1codecconfigurationbox-syntax\n// https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#AV1\n\nexport var getAv1Codec = function getAv1Codec(bytes) {\n  var codec = '';\n  var profile = bytes[1] >>> 3;\n  var level = bytes[1] & 0x1F;\n  var tier = bytes[2] >>> 7;\n  var highBitDepth = (bytes[2] & 0x40) >> 6;\n  var twelveBit = (bytes[2] & 0x20) >> 5;\n  var monochrome = (bytes[2] & 0x10) >> 4;\n  var chromaSubsamplingX = (bytes[2] & 0x08) >> 3;\n  var chromaSubsamplingY = (bytes[2] & 0x04) >> 2;\n  var chromaSamplePosition = bytes[2] & 0x03;\n  codec += profile + \".\" + padStart(level, 2, '0');\n\n  if (tier === 0) {\n    codec += 'M';\n  } else if (tier === 1) {\n    codec += 'H';\n  }\n\n  var bitDepth;\n\n  if (profile === 2 && highBitDepth) {\n    bitDepth = twelveBit ? 12 : 10;\n  } else {\n    bitDepth = highBitDepth ? 10 : 8;\n  }\n\n  codec += \".\" + padStart(bitDepth, 2, '0'); // TODO: can we parse color range??\n\n  codec += \".\" + monochrome;\n  codec += \".\" + chromaSubsamplingX + chromaSubsamplingY + chromaSamplePosition;\n  return codec;\n};\nexport var getAvcCodec = function getAvcCodec(bytes) {\n  var profileId = toHexString(bytes[1]);\n  var constraintFlags = toHexString(bytes[2] & 0xFC);\n  var levelId = toHexString(bytes[3]);\n  return \"\" + profileId + constraintFlags + levelId;\n};\nexport var getHvcCodec = function getHvcCodec(bytes) {\n  var codec = '';\n  var profileSpace = bytes[1] >> 6;\n  var profileId = bytes[1] & 0x1F;\n  var tierFlag = (bytes[1] & 0x20) >> 5;\n  var profileCompat = bytes.subarray(2, 6);\n  var constraintIds = bytes.subarray(6, 12);\n  var levelId = bytes[12];\n\n  if (profileSpace === 1) {\n    codec += 'A';\n  } else if (profileSpace === 2) {\n    codec += 'B';\n  } else if (profileSpace === 3) {\n    codec += 'C';\n  }\n\n  codec += profileId + \".\"; // ffmpeg does this in big endian\n\n  var profileCompatVal = parseInt(toBinaryString(profileCompat).split('').reverse().join(''), 2); // apple does this in little endian...\n\n  if (profileCompatVal > 255) {\n    profileCompatVal = parseInt(toBinaryString(profileCompat), 2);\n  }\n\n  codec += profileCompatVal.toString(16) + \".\";\n\n  if (tierFlag === 0) {\n    codec += 'L';\n  } else {\n    codec += 'H';\n  }\n\n  codec += levelId;\n  var constraints = '';\n\n  for (var i = 0; i < constraintIds.length; i++) {\n    var v = constraintIds[i];\n\n    if (v) {\n      if (constraints) {\n        constraints += '.';\n      }\n\n      constraints += v.toString(16);\n    }\n  }\n\n  if (constraints) {\n    codec += \".\" + constraints;\n  }\n\n  return codec;\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","/**\n * @license\n * Video.js 7.19.2 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport keycode from 'keycode';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { browserSupportsCodec, DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, muxerSupportsCodec, parseCodecs, translateLegacyCodec, codecsFromDefault, getMimeForCodec, isAudioCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$5 = \"7.19.2\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nvar hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvar hooks = function hooks(type, fn) {\n  hooks_[type] = hooks_[type] || [];\n\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n\n  return hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvar hook = function hook(type, fn) {\n  hooks(type, fn);\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvar removeHook = function removeHook(type, fn) {\n  var index = hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvar hookOnce = function hookOnce(type, fn) {\n  hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger$1(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log$1 = createLogger$1('VIDEOJS');\nvar createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue;\n\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n  var left = 0;\n  var top = 0;\n\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var translated = {\n    x: 0,\n    y: 0\n  };\n\n  if (IS_IOS) {\n    var item = el;\n\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      var transform = computedStyle(item, 'transform');\n\n      if (/^matrix/.test(transform)) {\n        var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n        translated.x += _values[12];\n        translated.y += _values[13];\n      }\n\n      item = item.parentNode;\n    }\n  }\n\n  var position = {};\n  var boxTarget = findPosition(event.target);\n  var box = findPosition(el);\n  var boxW = box.width;\n  var boxH = box.height;\n  var offsetY = event.offsetY - (box.top - boxTarget.top);\n  var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$1;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log$1('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget$2 = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget$2.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget$2.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget$2.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget$2.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget$2.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget$2.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget$2.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\nvar objName = function objName(obj) {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n\n  if (obj.name_) {\n    return obj.name_;\n  }\n\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n\n  return typeof obj;\n};\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateTarget = function validateTarget(target, obj, fnName) {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateEventType = function validateEventType(type, obj, fnName) {\n  if (!isValidEventType(type)) {\n    throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateListener = function validateListener(listener, obj, fnName) {\n  if (typeof listener !== 'function') {\n    throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target, target, method);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    var type = event && typeof event !== 'string' ? event.type : event;\n\n    if (!isValidEventType(type)) {\n      var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n      if (event) {\n        (this.log || log$1).error(error);\n      } else {\n        throw new Error(error);\n      }\n    }\n\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData[\"delete\"](val);\n      }\n    });\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase$1 = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions$3() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions$3(result[key], value);\n    });\n  });\n  return result;\n}\n\nvar MapSham = /*#__PURE__*/function () {\n  function MapSham() {\n    this.map_ = {};\n  }\n\n  var _proto = MapSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.map_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.map_[key];\n    return has;\n  };\n\n  _proto.set = function set(key, value) {\n    this.map_[key] = value;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.map_) {\n      callback.call(thisArg, this.map_[key], key, this);\n    }\n  };\n\n  return MapSham;\n}();\n\nvar Map$1 = window$1.Map ? window$1.Map : MapSham;\n\nvar SetSham = /*#__PURE__*/function () {\n  function SetSham() {\n    this.set_ = {};\n  }\n\n  var _proto = SetSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.set_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.set_[key];\n    return has;\n  };\n\n  _proto.add = function add(key) {\n    this.set_[key] = 1;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.set_) {\n      callback.call(thisArg, key, key, this);\n    }\n  };\n\n  return SetSham;\n}();\n\nvar Set$1 = window$1.Set ? window$1.Set : SetSham;\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component$1 = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    var _this = this;\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(function (c) {\n        return _this.addClass(c);\n      });\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set$1();\n    this.setIntervalIds_ = new Set$1();\n    this.rafIds_ = new Set$1();\n    this.namedRafs_ = new Map$1();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    } // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n\n\n    this.ready(ready);\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions$3(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {}\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  ;\n\n  _proto.getDescendant = function getDescendant() {\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n      names[_key] = arguments[_key];\n    }\n\n    // flatten array argument into the main array\n    names = names.reduce(function (acc, n) {\n      return acc.concat(n);\n    }, []);\n    var currentChild = this;\n\n    for (var i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n\n    return currentChild;\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this2 = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this2.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this2.addChild(name, opts);\n\n        if (newChild) {\n          _this2[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this2.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this3 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this3.setTimeoutIds_.has(timeoutId)) {\n        _this3.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this4.rafIds_.has(id)) {\n        _this4.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  ;\n\n  _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n    var _this5 = this;\n\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.clearTimersOnDispose_();\n    fn = bind(this, fn);\n    var id = this.requestAnimationFrame(function () {\n      fn();\n\n      if (_this5.namedRafs_.has(name)) {\n        _this5.namedRafs_[\"delete\"](name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  ;\n\n  _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_[\"delete\"](name);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this6 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        _this6[idName].forEach(function (val, key) {\n          return _this6[cancelName](key);\n        });\n      });\n      _this6.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase$1(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent$1.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  var timeRangesObj;\n\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = function () {\n      return (ranges || []).values();\n    };\n  }\n\n  return timeRangesObj;\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.close_ = function (e) {\n      return _this.close(e);\n    };\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown_);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component$1);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n\n\n    track.labelchange_ = function () {\n      _this2.trigger({\n        track: track,\n        type: 'labelchange',\n        target: _this2\n      });\n    };\n\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget$2);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    var label = options.label || '';\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n\n\n    Object.defineProperty(_assertThisInitialized(_this), 'label', {\n      get: function get() {\n        return label;\n      },\n      set: function set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('labelchange');\n        }\n      }\n    });\n    return _this;\n  }\n\n  return Track;\n}(EventTarget$2);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n  /* istanbul ignore if */\n\n\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    // add the url to an anchor and let the browser parse the URL\n    var a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    _this.timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n\n      if (!this.tech_.isReady_) {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        return;\n      } // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n\n      this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    });\n\n    var disposeHandler = function disposeHandler() {\n      _this.stopTracking();\n    };\n\n    _this.tech_.one('dispose', disposeHandler);\n\n    if (mode !== 'disabled') {\n      _this.startTracking();\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          if (mode === newMode) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          this.stopTracking();\n\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrack.prototype;\n\n  _proto.startTracking = function startTracking() {\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n  };\n\n  _proto.stopTracking = function stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  ;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget$2);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this;\n\n    _this.onDurationChange_ = function (e) {\n      return _this.onDurationChange(e);\n    };\n\n    _this.trackProgress_ = function (e) {\n      return _this.trackProgress(e);\n    };\n\n    _this.trackCurrentTime_ = function (e) {\n      return _this.trackCurrentTime(e);\n    };\n\n    _this.stopTrackingCurrentTime_ = function (e) {\n      return _this.stopTrackingCurrentTime(e);\n    };\n\n    _this.disposeSourceHandler_ = function (e) {\n      return _this.disposeSourceHandler(e);\n    };\n\n    _this.queuedHanders_ = new Set(); // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin() {}\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  ;\n\n  _proto.setCrossOrigin = function setCrossOrigin() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  ;\n\n  _proto.play = function play() {}\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing() {}\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {}\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions$3(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture() {\n    return true;\n  }\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  ;\n\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n    var _this8 = this;\n\n    var id = newGUID();\n\n    if (this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', function () {\n        if (_this8.queuedHanders_.has(id)) {\n          _this8.queuedHanders_[\"delete\"](id);\n\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n\n    return id;\n  }\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  ;\n\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_[\"delete\"](id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase$1(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVideoFrameCallback = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase$1(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions$3({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase$1(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component$1);\n\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (_this.options_.controlText) {\n      _this.controlText(_this.options_.controlText);\n    }\n\n    _this.handleMouseOver_ = function (e) {\n      return _this.handleMouseOver(e);\n    };\n\n    _this.handleMouseOut_ = function (e) {\n      return _this.handleMouseOut(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    var el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component$1);\n\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    };\n\n    player.on('posterchange', _this.update_);\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update_);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n    // calling .focus() on the video element causes the video to go black,\n    // so we avoid it in that specific case\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent$1.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n\n    var updateDisplayHandler = function updateDisplayHandler(e) {\n      return _this.updateDisplay(e);\n    };\n\n    player.on('loadstart', function (e) {\n      return _this.toggleDisplay(e);\n    });\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', function (e) {\n      return _this.preselectTrack(e);\n    }); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n\n        if (_track2.language) {\n          setAttribute(cueEl, 'lang', _track2.language);\n        }\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component$1);\n\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl$1(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = createEl(tag, props, attributes);\n\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent$1.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', function (e) {\n      return _this.handlePlay(e);\n    });\n\n    _this.on(player, 'pause', function (e) {\n      return _this.handlePause(e);\n    });\n\n    if (options.replay) {\n      _this.on(player, 'ended', function (e) {\n        return _this.handleEnded(e);\n      });\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    var _this2 = this;\n\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', function (e) {\n      return _this2.handleSeeked(e);\n    });\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], function (e) {\n      return _this.updateContent(e);\n    });\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\"\n    });\n\n    var span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize(this.labelText_) + \"\\xA0\"\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n\n      if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component$1);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    var updateContent = function updateContent(e) {\n      return _this.updateContent(e);\n    }; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n\n    _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n\n    var div = _Component.prototype.createEl.call(this, 'div');\n\n    var span = _Component.prototype.createEl.call(this, 'span', {\n      textContent: '/'\n    });\n\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  };\n\n  return TimeDivider;\n}(Component$1);\n\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', function (e) {\n      return _this.updateContent(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', function (e) {\n      return _this.updateShowing(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('Stream Type') + \"\\xA0\"\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.updateLiveEdgeStatusHandler_ = function (e) {\n        return _this.updateLiveEdgeStatus(e);\n      };\n\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleMouseDown_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.handleMouseUp_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMouseMove_ = function (e) {\n      return _this.handleMouseMove(e);\n    };\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    }; // Set property names to bar to match with the child Slider class is looking for\n\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this;\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component$1);\n\nComponent$1.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component$1);\n\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = findPosition(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    } // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n\n\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component$1);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component$1);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n\n    this.enableIntervalHandler_ = function (e) {\n      return _this2.enableInterval_(e);\n    };\n\n    this.disableIntervalHandler_ = function (e) {\n      return _this2.disableInterval_(e);\n    };\n\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this3 = this;\n\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestNamedAnimationFrame('SeekBar#update', function () {\n      var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n      var liveTracker = _this3.player_.liveTracker;\n\n      var duration = _this3.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this3.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this3.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this3.percent_ = percent;\n      }\n\n      if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this3.currentTime_ = currentTime;\n        _this3.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this3.bar) {\n        _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  ;\n\n  _proto.userSeek_ = function userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n\n    this.player_.currentTime(ct);\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event, mouseDown) {\n    if (mouseDown === void 0) {\n      mouseDown = false;\n    }\n\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.userSeek_(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var liveTracker = this.player_.liveTracker;\n\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n\n    _Slider.prototype.dispose.call(this);\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleMouseDownHandler_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = findPosition(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n    if (this.player_.scrubbing()) {\n      var seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  ;\n\n  _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  };\n\n  return ProgressControl;\n}(Component$1);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n      return _this.handlePictureInPictureChange(e);\n    });\n\n    _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n      return _this.handlePictureInPictureEnabledChange(e);\n    });\n\n    _this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], function () {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      var isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n\n        _this.hide();\n      } else {\n        _this.show();\n      }\n    }); // TODO: Deactivate button on player emptied event.\n\n\n    _this.disable();\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  ;\n\n  _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n\n    this.handlePictureInPictureEnabledChange();\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', function (e) {\n      return _this.handleFullscreenChange(e);\n    });\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level'\n    });\n\n    el.appendChild(_Component.prototype.createEl.call(this, 'span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  };\n\n  return VolumeLevel;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\n\nvar VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevelTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeLevelTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeLevelTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      var tooltipRect = getBoundingClientRect(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n\n      var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      var pullTooltipBy = tooltipRect.width / 2;\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    }\n\n    this.write(content + \"%\");\n  }\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n      _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return VolumeLevelTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\n\nvar MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseVolumeLevelDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseVolumeLevelDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseVolumeLevelDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n    var _this2 = this;\n\n    var volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n      if (vertical) {\n        _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n      } else {\n        _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n      }\n    });\n  };\n\n  return MouseVolumeLevelDisplay;\n}(Component$1);\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', function (e) {\n      return _this.updateLastVolume_(e);\n    });\n\n    _this.on(player, 'volumechange', function (e) {\n      return _this.updateARIAAttributes(e);\n    });\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n    if (mouseVolumeLevelDisplay) {\n      var volumeBarEl = this.el();\n      var volumeBarRect = getBoundingClientRect(volumeBarEl);\n      var vertical = this.vertical();\n      var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n}; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('touchstart', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('mousemove', function (e) {\n      return _this.handleMouseMove(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n    _this.handleKeyPressHandler_ = function (e) {\n      return _this.handleKeyPress(e);\n    };\n\n    _this.on(player, ['loadstart'], function (e) {\n      return _this.volumePanelState_(e);\n    });\n\n    _this.on(_this.muteToggle, 'keyup', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on(_this.volumeControl, 'keyup', function (e) {\n      return _this.handleVolumeControlKeyUp(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on('mouseover', function (e) {\n      return _this.handleMouseOver(e);\n    });\n\n    _this.on('mouseout', function (e) {\n      return _this.handleMouseOut(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = function (e) {\n      return _this.handleBlur(e);\n    };\n\n    _this.boundHandleTapClick_ = function (e) {\n      return _this.handleTapClick(e);\n    };\n\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component$1);\n\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    var handleClick = function handleClick(e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMenuKeyUp_ = function (e) {\n      return _this.handleMenuKeyUp(e);\n    };\n\n    _this.on(_this.menuButton_, 'tap', handleClick);\n\n    _this.on(_this.menuButton_, 'click', handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', _this.handleMenuKeyUp_);\n    });\n\n    _this.on('mouseleave', function (e) {\n      return _this.handleMouseLeave(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleSubmenuKeyDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      var titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component$1);\n\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs); // swap icon with menu item text.\n\n\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n\n    _this.selectCurrentItem_ = function () {\n      _this.items.forEach(function (item) {\n        item.selected(_this.track_.activeCues[0] === item.cue);\n      });\n    };\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n\n    var track = this.findChaptersTrack();\n\n    if (track !== this.track_) {\n      this.setTrack(track);\n\n      _TextTrackButton.prototype.update.call(this);\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      _TextTrackButton.prototype.update.call(this);\n    }\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\n\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: \" \" + this.localize('Captions')\n      }));\n    }\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\n\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n    // off for us.\n\n\n    this.track.enabled = true; // when native audio tracks are used, we want to make sure that other tracks are turned off\n\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // skip the current track since we enabled it above\n\n        if (track === this.track) {\n          continue;\n        }\n\n        track.enabled = track === this.track;\n      }\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', function (e) {\n      return _this.updateVisibility(e);\n    });\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.updateLabel(e);\n    });\n\n    _this.on(player, 'playbackrateschange', function (e) {\n      return _this.handlePlaybackRateschange(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var rates = this.playbackRates();\n    var items = [];\n\n    for (var i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n\n    return items;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n    var currentIndex = rates.indexOf(currentRate); // this get the next rate and it will select first one if the last one currently selected\n\n    var newIndex = (currentIndex + 1) % rates.length;\n    this.player().playbackRate(rates[newIndex]);\n  }\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  ;\n\n  _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n    this.update();\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    var player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n\n    return _Component.prototype.createEl.call(this, tag, props, attributes);\n  };\n\n  return Spacer;\n}(Component$1);\n\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Spacer.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: \"\\xA0\"\n    });\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component$1);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', function (e) {\n      return _this.open(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = _this.updateDisplay.bind(_assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions$3({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component$1);\n\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nvar defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions$3(defaults, options, {\n      createEl: false\n    });\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.handleVisibilityChange_ = function (e) {\n      return _this.handleVisibilityChange(e);\n    };\n\n    _this.trackLiveHandler_ = function () {\n      return _this.trackLive_();\n    };\n\n    _this.handlePlay_ = function (e) {\n      return _this.handlePlay(e);\n    };\n\n    _this.handleFirstTimeupdate_ = function (e) {\n      return _this.handleFirstTimeupdate(e);\n    };\n\n    _this.handleSeeked_ = function (e) {\n      return _this.handleSeeked(e);\n    };\n\n    _this.seekToLiveEdge_ = function (e) {\n      return _this.seekToLiveEdge(e);\n    };\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', function (e) {\n      return _this.handleDurationchange(e);\n    }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n\n\n    _this.on(_this.player_, 'canplay', function () {\n      return _this.toggleTracking();\n    }); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n    }\n\n    return _this;\n  }\n  /**\n   * toggle tracking based on document visiblility\n   */\n\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  }\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newTime = Number(window$1.performance.now().toFixed(4));\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    this.toggleTracking();\n  }\n  /**\n   * start/stop tracking\n   */\n  ;\n\n  _proto.toggleTracking = function toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  ;\n\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked() {\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  ;\n\n  _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    var seekableEnd = this.seekableEnd();\n\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  ;\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n  /**\n   * Dispose of liveTracker\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component$1);\n\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    _this.isScrubbing_ = false;\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        var event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n\n        if (name === 'text') {\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions$3({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {\n    return this.isScrubbing_;\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      }); // Safari will sometimes set contols on the videoelement when existing fullscreen.\n\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  ;\n\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n\n    return _Tech.prototype.requestVideoFrameCallback.call(this, cb);\n  }\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  ;\n\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      _Tech.prototype.cancelVideoFrameCallback.call(this, id);\n    }\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    var canControl = volume !== Html5.TEST_VID.volume; // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(function () {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      }); // default iOS to false, which will be updated in the timeout above.\n\n      return false;\n    }\n\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\n\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = function (e) {\n      return _this.documentFullscreenChange_(e);\n    };\n\n    _this.boundFullWindowOnEscKey_ = function (e) {\n      return _this.fullWindowOnEscKey(e);\n    };\n\n    _this.boundUpdateStyleEl_ = function (e) {\n      return _this.updateStyleEl_(e);\n    };\n\n    _this.boundApplyInitTime_ = function (e) {\n      return _this.applyInitTime_(e);\n    };\n\n    _this.boundUpdateCurrentBreakpoint_ = function (e) {\n      return _this.updateCurrentBreakpoint_(e);\n    };\n\n    _this.boundHandleTechClick_ = function (e) {\n      return _this.handleTechClick_(e);\n    };\n\n    _this.boundHandleTechDoubleClick_ = function (e) {\n      return _this.handleTechDoubleClick_(e);\n    };\n\n    _this.boundHandleTechTouchStart_ = function (e) {\n      return _this.handleTechTouchStart_(e);\n    };\n\n    _this.boundHandleTechTouchMove_ = function (e) {\n      return _this.handleTechTouchMove_(e);\n    };\n\n    _this.boundHandleTechTouchEnd_ = function (e) {\n      return _this.handleTechTouchEnd_(e);\n    };\n\n    _this.boundHandleTechTap_ = function (e) {\n      return _this.handleTechTap_(e);\n    }; // default isFullscreen_ to false\n\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // Init debugEnabled_\n\n    _this.debugEnabled_ = false; // Init state audioOnlyMode_\n\n    _this.audioOnlyMode_ = false; // Init state audioPosterMode_\n\n    _this.audioPosterMode_ = false; // Init state audioOnlyCache_\n\n    _this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    }; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    } // Enable debug mode to fire debugon event for all plugins.\n\n\n    if (options.debug) {\n      _this.debug(true);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.playbackRates(options.playbackRates);\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version$5.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', function (e) {\n      return _this.listenForUserActivity_(e);\n    });\n\n    _this.on('stageclick', function (e) {\n      return _this.handleStageClick_(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on('languagechange', function (e) {\n      return _this.handleLanguagechange(e);\n    });\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive); // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n\n\n    _this.on('ready', function () {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      _this.audioPosterMode(_this.options_.audioPosterMode);\n\n      _this.audioOnlyMode(_this.options_.audioOnlyMode);\n    });\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin(value) {\n    if (!value) {\n      return this.techGet_('crossOrigin');\n    }\n\n    if (value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n      return;\n    }\n\n    this.techCall_('setCrossOrigin', value);\n    return;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    var _this3 = this;\n\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, function () {\n        _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this4 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase$1(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false;\n    var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this4[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (e) {\n        return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n      });\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (eventObj) {\n        if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n          _this4.queuedCallbacks_.push({\n            callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', function (e) {\n      return _this4.handleTechLoadStart_(e);\n    });\n    this.on(this.tech_, 'sourceset', function (e) {\n      return _this4.handleTechSourceset_(e);\n    });\n    this.on(this.tech_, 'waiting', function (e) {\n      return _this4.handleTechWaiting_(e);\n    });\n    this.on(this.tech_, 'ended', function (e) {\n      return _this4.handleTechEnded_(e);\n    });\n    this.on(this.tech_, 'seeking', function (e) {\n      return _this4.handleTechSeeking_(e);\n    });\n    this.on(this.tech_, 'play', function (e) {\n      return _this4.handleTechPlay_(e);\n    });\n    this.on(this.tech_, 'firstplay', function (e) {\n      return _this4.handleTechFirstPlay_(e);\n    });\n    this.on(this.tech_, 'pause', function (e) {\n      return _this4.handleTechPause_(e);\n    });\n    this.on(this.tech_, 'durationchange', function (e) {\n      return _this4.handleTechDurationChange_(e);\n    });\n    this.on(this.tech_, 'fullscreenchange', function (e, data) {\n      return _this4.handleTechFullscreenChange_(e, data);\n    });\n    this.on(this.tech_, 'fullscreenerror', function (e, err) {\n      return _this4.handleTechFullscreenError_(e, err);\n    });\n    this.on(this.tech_, 'enterpictureinpicture', function (e) {\n      return _this4.handleTechEnterPictureInPicture_(e);\n    });\n    this.on(this.tech_, 'leavepictureinpicture', function (e) {\n      return _this4.handleTechLeavePictureInPicture_(e);\n    });\n    this.on(this.tech_, 'error', function (e) {\n      return _this4.handleTechError_(e);\n    });\n    this.on(this.tech_, 'posterchange', function (e) {\n      return _this4.handleTechPosterChange_(e);\n    });\n    this.on(this.tech_, 'textdata', function (e) {\n      return _this4.handleTechTextData_(e);\n    });\n    this.on(this.tech_, 'ratechange', function (e) {\n      return _this4.handleTechRateChange_(e);\n    });\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this5 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this5[props.privateName] = _this5[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this6 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    } // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n\n\n    var resolveMuted = function resolveMuted() {\n      var previouslyMuted = _this6.muted();\n\n      _this6.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this6.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this6.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this6.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](function (err) {\n        restoreMuted();\n        throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n      });\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this6.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function () {\n      _this6.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions$3({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this7 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this7.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the initial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this7.techGet('currentSrc');\n\n          _this7.lastSource_.tech = techSrc;\n\n          _this7.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this8 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this8.currentTime()) {\n        _this8.removeClass('vjs-waiting');\n\n        _this8.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    var _this9 = this;\n\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', function () {\n          _this9.removeClass('vjs-ios-native-fs');\n        });\n      }\n\n      this.isFullscreen(data.isFullscreen);\n    }\n  };\n\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // TODO: Is this needed for techs other than Flash?\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log$1(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this10 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this10.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this11 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this11.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  ;\n\n  _proto.applyInitTime_ = function applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      // TODO: Required for techs other than Flash?\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.requestFullscreenHelper_();\n  };\n\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n    var _this12 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this12.isFullscreen(true);\n        }, function () {\n          return _this12.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.exitFullscreenHelper_();\n\n        if (promise) {\n          promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.exitFullscreenHelper_();\n  };\n\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n    var _this13 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(function () {\n          return _this13.isFullscreen(false);\n        }));\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this14 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this14.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n    var _this15 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // Reset retry behavior for new source\n\n\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // initial sources\n\n\n    this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this15.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      if (!isRetry) {\n        _this15.cache_.sources = sources;\n      }\n\n      _this15.updateSourceCaches_(middlewareSource);\n\n      var err = _this15.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this15.handleSrc_(sources.slice(1));\n        }\n\n        _this15.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this15.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this15.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this15.tech_);\n    }); // Try another available source if this one fails before playback.\n\n    if (this.options_.retryOnError && sources.length > 1) {\n      var retry = function retry() {\n        // Remove the error modal\n        _this15.error(null);\n\n        _this15.handleSrc_(sources.slice(1), true);\n      };\n\n      var stopListeningForErrors = function stopListeningForErrors() {\n        _this15.off('error', retry);\n      };\n\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n\n      this.resetRetryOnError_ = function () {\n        _this15.off('error', retry);\n\n        _this15.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    return this.handleSrc_(source, false);\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this16 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this16.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this17 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this17.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    var _this18 = this;\n\n    if (err === undefined) {\n      return this.error_ || null;\n    } // allow hooks to modify error object\n\n\n    hooks('beforeerror').forEach(function (hookFunction) {\n      var newErr = hookFunction(_this18, err);\n\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        _this18.log.error('please return a value that MediaError expects in beforeerror hooks');\n\n        return;\n      }\n\n      err = newErr;\n    }); // Suppress the first error message for no compatible source until\n    // user interaction\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error'); // notify hooks of the per player error\n\n    hooks('error').forEach(function (hookFunction) {\n      return hookFunction(_this18, _this18.error_);\n    });\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  _proto.enableAudioOnlyUI_ = function enableAudioOnlyUI_() {\n    var _this19 = this;\n\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    var playerChildren = this.children();\n    var controlBar = this.getChild('ControlBar');\n    var controlBarHeight = controlBar && controlBar.currentHeight(); // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n\n    playerChildren.forEach(function (child) {\n      if (child === controlBar) {\n        return;\n      }\n\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n\n        _this19.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight(); // Set the player height the same as the control bar\n\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  };\n\n  _proto.disableAudioOnlyUI_ = function disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode'); // Show player components that were previously hidden\n\n    this.audioOnlyCache_.hiddenChildren.forEach(function (child) {\n      return child.show();\n    }); // Reset player height\n\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  ;\n\n  _proto.audioOnlyMode = function audioOnlyMode(value) {\n    var _this20 = this;\n\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n\n    this.audioOnlyMode_ = value;\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      // Enable Audio Only Mode\n      if (value) {\n        var exitPromises = []; // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n\n        if (this.isInPictureInPicture()) {\n          exitPromises.push(this.exitPictureInPicture());\n        }\n\n        if (this.isFullscreen()) {\n          exitPromises.push(this.exitFullscreen());\n        }\n\n        if (this.audioPosterMode()) {\n          exitPromises.push(this.audioPosterMode(false));\n        }\n\n        return PromiseClass.all(exitPromises).then(function () {\n          return _this20.enableAudioOnlyUI_();\n        });\n      } // Disable Audio Only Mode\n\n\n      return PromiseClass.resolve().then(function () {\n        return _this20.disableAudioOnlyUI_();\n      });\n    }\n\n    if (value) {\n      if (this.isInPictureInPicture()) {\n        this.exitPictureInPicture();\n      }\n\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      }\n\n      this.enableAudioOnlyUI_();\n    } else {\n      this.disableAudioOnlyUI_();\n    }\n  };\n\n  _proto.enablePosterModeUI_ = function enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    var tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  };\n\n  _proto.disablePosterModeUI_ = function disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    var tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  ;\n\n  _proto.audioPosterMode = function audioPosterMode(value) {\n    var _this21 = this;\n\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n\n    this.audioPosterMode_ = value;\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      if (value) {\n        if (this.audioOnlyMode()) {\n          var audioOnlyModePromise = this.audioOnlyMode(false);\n          return audioOnlyModePromise.then(function () {\n            // enable audio poster mode after audio only mode is disabled\n            _this21.enablePosterModeUI_();\n          });\n        }\n\n        return PromiseClass.resolve().then(function () {\n          // enable audio poster mode\n          _this21.enablePosterModeUI_();\n        });\n      }\n\n      return PromiseClass.resolve().then(function () {\n        // disable audio poster mode\n        _this21.disablePosterModeUI_();\n      });\n    }\n\n    if (value) {\n      if (this.audioOnlyMode()) {\n        this.audioOnlyMode(false);\n      }\n\n      this.enablePosterModeUI_();\n      return;\n    }\n\n    this.disablePosterModeUI_();\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   * When manualCleanup is set to false, the track will be automatically removed\n   * on source changes.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *                                       removed on a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code.\n   *\n   * Changing the langauge will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions$3(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions$3(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this22 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this22.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this23 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions$3(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this23.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions$3(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  }\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  ;\n\n  _proto.debug = function debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    } // ignore any value that isn't an array\n\n\n    if (!Array.isArray(newRates)) {\n      return;\n    } // ignore any arrays that don't only contain numbers\n\n\n    if (!newRates.every(function (rate) {\n      return typeof rate === 'number';\n    })) {\n      return;\n    }\n\n    this.cache_.playbackRates = newRates;\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('playbackrateschange');\n  };\n\n  return Player;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\n\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    } // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions$3(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions$3(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook; // Add default styles\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs.VERSION = version$5;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\n\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs.extend = extend;\nvideojs.mergeOptions = mergeOptions$3;\nvideojs.bind = bind;\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs.plugin = function (name, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\nvideojs.formatTime = formatTime;\nvideojs.setFormatTime = setFormatTime;\nvideojs.resetFormatTime = resetFormatTime;\nvideojs.parseUrl = parseUrl;\nvideojs.isCrossOrigin = isCrossOrigin;\nvideojs.EventTarget = EventTarget$2;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs.url = Url;\nvideojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n// In a major update this could become the default text and key.\n\nvideojs.addLanguage('en', {\n  'Non-Fullscreen': 'Exit Fullscreen'\n});\n\n/*! @name @videojs/http-streaming @version 2.14.2 @license Apache-2.0 */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = _resolveUrl;\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar logger = function logger(source) {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n  }\n\n  return function () {};\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\n\nvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return videojs.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n\n  count = bufferB.length;\n\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n  if (playbackRate === void 0) {\n    playbackRate = 1;\n  }\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\n\nvar isRangeDifferent = function isRangeDifferent(a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n\n  for (var i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n\n  return false;\n};\n\nvar lastBufferedEnd = function lastBufferedEnd(a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\n\nvar timeAheadOf = function timeAheadOf(range, startTime) {\n  var time = 0;\n\n  if (!range || !range.length) {\n    return time;\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    var start = range.start(i);\n    var end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n\n    time += end - start;\n  }\n\n  return time;\n};\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs.createTimeRange;\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nvar segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n\n  var result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\n\nvar getPartsAndSegments = function getPartsAndSegments(playlist) {\n  return (playlist.segments || []).reduce(function (acc, segment, si) {\n    if (segment.parts) {\n      segment.parts.forEach(function (part, pi) {\n        acc.push({\n          duration: part.duration,\n          segmentIndex: si,\n          partIndex: pi,\n          part: part,\n          segment: segment\n        });\n      });\n    } else {\n      acc.push({\n        duration: segment.duration,\n        segmentIndex: si,\n        partIndex: null,\n        segment: segment,\n        part: null\n      });\n    }\n\n    return acc;\n  }, []);\n};\n\nvar getLastParts = function getLastParts(media) {\n  var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\n\nvar getKnownPartCount = function getKnownPartCount(_ref) {\n  var preloadSegment = _ref.preloadSegment;\n\n  if (!preloadSegment) {\n    return;\n  }\n\n  var parts = preloadSegment.parts,\n      preloadHints = preloadSegment.preloadHints;\n  var partCount = (preloadHints || []).reduce(function (count, hint) {\n    return count + (hint.type === 'PART' ? 1 : 0);\n  }, 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} master the master playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\n\nvar liveEdgeDelay = function liveEdgeDelay(master, media) {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n\n  if (master && master.suggestedPresentationDelay) {\n    return master.suggestedPresentationDelay;\n  }\n\n  var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segmentDurationWithParts(playlist, segment);\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segmentDurationWithParts(playlist, segment);\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  var backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  var forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(_ref2) {\n  var defaultDuration = _ref2.defaultDuration,\n      durationList = _ref2.durationList,\n      startIndex = _ref2.startIndex,\n      endIndex = _ref2.endIndex;\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref3 = [endIndex, startIndex];\n    startIndex = _ref3[0];\n    endIndex = _ref3[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += durationList[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\n\nvar getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n  var playlist = _ref4.playlist,\n      currentTime = _ref4.currentTime,\n      startingSegmentIndex = _ref4.startingSegmentIndex,\n      startingPartIndex = _ref4.startingPartIndex,\n      startTime = _ref4.startTime,\n      experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\n  var time = currentTime - startTime;\n  var partsAndSegments = getPartsAndSegments(playlist);\n  var startIndex = 0;\n\n  for (var i = 0; i < partsAndSegments.length; i++) {\n    var partAndSegment = partsAndSegments[i];\n\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n\n    startIndex = i;\n    break;\n  }\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n        var _partAndSegment = partsAndSegments[_i2];\n        time += _partAndSegment.duration;\n\n        if (experimentalExactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n\n        return {\n          partIndex: _partAndSegment.partIndex,\n          segmentIndex: _partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex: startIndex,\n            endIndex: _i2\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (var _i3 = startIndex; _i3 < 0; _i3++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n    var _partAndSegment2 = partsAndSegments[_i4];\n    time -= _partAndSegment2.duration;\n\n    if (experimentalExactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n\n    return {\n      partIndex: _partAndSegment2.partIndex,\n      segmentIndex: _partAndSegment2.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex: startIndex,\n        endIndex: _i4\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n  if (bytesReceived === void 0) {\n    bytesReceived = 0;\n  }\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\nvar playlistMatch = function playlistMatch(a, b) {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n\n  return false;\n};\n\nvar someAudioVariant = function someAudioVariant(master, callback) {\n  var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n  var found = false;\n\n  for (var groupName in AUDIO) {\n    for (var label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n\n      if (found) {\n        break;\n      }\n    }\n\n    if (found) {\n      break;\n    }\n  }\n\n  return !!found;\n};\n\nvar isAudioOnly = function isAudioOnly(master) {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!master || !master.playlists || !master.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only master.\n    var found = someAudioVariant(master, function (variant) {\n      return variant.playlists && variant.playlists.length || variant.uri;\n    });\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n\n  var _loop = function _loop(i) {\n    var playlist = master.playlists[i];\n    var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(function (c) {\n      return isAudioCodec(c);\n    })) {\n      return \"continue\";\n    } // playlist is in an audio group it is audio only\n\n\n    var found = someAudioVariant(master, function (variant) {\n      return playlistMatch(playlist, variant);\n    });\n\n    if (found) {\n      return \"continue\";\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n\n    return {\n      v: false\n    };\n  };\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n    if (typeof _ret === \"object\") return _ret.v;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n\n  return true;\n}; // exports\n\n\nvar Playlist = {\n  liveEdgeDelay: liveEdgeDelay,\n  duration: duration,\n  seekable: seekable,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition,\n  isAudioOnly: isAudioOnly,\n  playlistMatch: playlistMatch,\n  segmentDurationWithParts: segmentDurationWithParts\n};\nvar log = videojs.log;\n\nvar createPlaylistID = function createPlaylistID(index, uri) {\n  return index + \"-\" + uri;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [experimentalLLHLS=false]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\n\nvar parseManifest = function parseManifest(_ref) {\n  var onwarn = _ref.onwarn,\n      oninfo = _ref.oninfo,\n      manifestString = _ref.manifestString,\n      _ref$customTagParsers = _ref.customTagParsers,\n      customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n      _ref$customTagMappers = _ref.customTagMappers,\n      customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n      experimentalLLHLS = _ref.experimentalLLHLS;\n  var parser = new Parser();\n\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n\n  customTagParsers.forEach(function (customParser) {\n    return parser.addParser(customParser);\n  });\n  customTagMappers.forEach(function (mapper) {\n    return parser.addTagMapper(mapper);\n  });\n  parser.push(manifestString);\n  parser.end();\n  var manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!experimentalLLHLS) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n\n  if (!manifest.targetDuration) {\n    var targetDuration = 10;\n\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce(function (acc, s) {\n        return Math.max(acc, s.duration);\n      }, 0);\n    }\n\n    if (onwarn) {\n      onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n    }\n\n    manifest.targetDuration = targetDuration;\n  }\n\n  var parts = getLastParts(manifest);\n\n  if (parts.length && !manifest.partTargetDuration) {\n    var partTargetDuration = parts.reduce(function (acc, p) {\n      return Math.max(acc, p.duration);\n    }, 0);\n\n    if (onwarn) {\n      onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n\n    manifest.partTargetDuration = partTargetDuration;\n  }\n\n  return manifest;\n};\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  if (!master.mediaGroups) {\n    return;\n  }\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    if (!master.mediaGroups[mediaType]) {\n      return;\n    }\n\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a master\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\n\nvar setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n  var playlist = _ref2.playlist,\n      uri = _ref2.uri,\n      id = _ref2.id;\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS master playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    setupMediaPlaylist({\n      playlist: playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a master playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         Master playlist\n */\n\n\nvar masterForMedia = function masterForMedia(media, uri) {\n  var id = createPlaylistID(0, uri);\n  var master = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri: uri,\n      id: id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n  master.playlists[uri] = master.playlists[0];\n  return master;\n};\n/**\n * Does an in-place update of the master manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} master\n *        Master manifest object\n * @param {string} uri\n *        The source URI\n */\n\n\nvar addPropertiesToMaster = function addPropertiesToMaster(master, uri) {\n  master.uri = uri;\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    if (!master.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      var phonyUri = \"placeholder-uri-\" + i;\n      master.playlists[i].uri = phonyUri;\n    }\n  }\n\n  var audioOnlyMaster = isAudioOnly(master);\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    var groupId = \"placeholder-uri-\" + mediaType + \"-\" + groupKey + \"-\" + labelKey; // add a playlist array under properties\n\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\n        for (var _i = 0; _i < master.playlists.length; _i++) {\n          var p = master.playlists[_i];\n\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n\n      properties.playlists = [_extends({}, properties)];\n    }\n\n    properties.playlists.forEach(function (p, i) {\n      var id = createPlaylistID(i, groupId);\n\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      master.playlists[p.id] = p;\n      master.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(master);\n  resolveMediaGroupUris(master);\n};\n\nvar mergeOptions$2 = videojs.mergeOptions,\n    EventTarget$1 = videojs.EventTarget;\n\nvar addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n\n  var parameters = {};\n\n  if (media.serverControl.canBlockReload) {\n    var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n    var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n\n    parameters._HLS_msn = nextMSN;\n  }\n\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n\n  if (Object.keys(parameters).length) {\n    var parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\n\nvar updateSegment = function updateSegment(a, b) {\n  if (!a) {\n    return b;\n  }\n\n  var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (var i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var oldSegments = original.slice();\n  var newSegments = update.slice();\n  offset = offset || 0;\n  var result = [];\n  var currentMap;\n\n  for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    var oldSegment = oldSegments[newIndex + offset];\n    var newSegment = newSegments[newIndex];\n\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n\n      result.push(newSegment);\n    }\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\n\nvar getAllSegments = function getAllSegments(media) {\n  var segments = media.segments || [];\n  var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\n\nvar isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n  return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n  if (unchangedCheck === void 0) {\n    unchangedCheck = isPlaylistUnchanged;\n  }\n\n  var result = mergeOptions$2(master, {});\n  var oldMedia = result.playlists[newMedia.id];\n\n  if (!oldMedia) {\n    return null;\n  }\n\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n\n  newMedia.segments = getAllSegments(newMedia);\n  var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var _i = 0; _i < result.playlists.length; _i++) {\n    if (result.playlists[_i].id === newMedia.id) {\n      result.playlists[_i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (!properties.playlists) {\n      return;\n    }\n\n    for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n      if (newMedia.id === properties.playlists[_i2].id) {\n        properties.playlists[_i2] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var segments = media.segments || [];\n  var lastSegment = segments[segments.length - 1];\n  var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\n\nvar PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(src, vhs, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n\n    _this.logger_ = logger('PlaylistLoader');\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.src = src;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var vhsOptions = vhs.options_;\n    _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\n\n    if (videojs.browser.IE_VERSION) {\n      _this.experimentalLLHLS = false;\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(_assertThisInitialized(_this));\n\n    _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n    return _this;\n  }\n\n  var _proto = PlaylistLoader.prototype;\n\n  _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n    var _this2 = this;\n\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n\n    var media = this.media();\n    var uri = resolveUrl(this.master.uri, media.uri);\n\n    if (this.experimentalLLHLS) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri: uri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this2.request) {\n        return;\n      }\n\n      if (error) {\n        return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n      }\n\n      _this2.haveMetadata({\n        playlistString: _this2.request.responseText,\n        url: _this2.media().uri,\n        id: _this2.media().id\n      });\n    });\n  };\n\n  _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n    var uri = playlist.uri,\n        id = playlist.id; // any in-flight request is now finished\n\n    this.request = null;\n\n    if (startingState) {\n      this.state = startingState;\n    }\n\n    this.error = {\n      playlist: this.master.playlists[id],\n      status: xhr.status,\n      message: \"HLS playlist request error at URL: \" + uri + \".\",\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  };\n\n  _proto.parseManifest_ = function parseManifest_(_ref) {\n    var _this3 = this;\n\n    var url = _ref.url,\n        manifestString = _ref.manifestString;\n    return parseManifest({\n      onwarn: function onwarn(_ref2) {\n        var message = _ref2.message;\n        return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n      },\n      oninfo: function oninfo(_ref3) {\n        var message = _ref3.message;\n        return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n      },\n      manifestString: manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      experimentalLLHLS: this.experimentalLLHLS\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n  ;\n\n  _proto.haveMetadata = function haveMetadata(_ref4) {\n    var playlistString = _ref4.playlistString,\n        playlistObject = _ref4.playlistObject,\n        url = _ref4.url,\n        id = _ref4.id; // any in-flight request is now finished\n\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    var playlist = playlistObject || this.parseManifest_({\n      url: url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist: playlist,\n      uri: url,\n      id: id\n    }); // merge this playlist into the master\n\n    var update = updateMaster$1(this.master, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n\n    if (update) {\n      this.master = update;\n      this.media_ = this.master.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n  ;\n\n  _proto.media = function media(playlist, shouldDelay) {\n    var _this4 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.master.playlists[playlist];\n    }\n\n    window$1.clearTimeout(this.finalRenditionTimeout);\n\n    if (shouldDelay) {\n      var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n\n    var startingState = this.state;\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n\n        if (startingState === 'HAVE_MASTER') {\n          // The initial playlist was a master manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this4.request) {\n        return;\n      }\n\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\n\n      if (error) {\n        return _this4.playlistRequestError(_this4.request, playlist, startingState);\n      }\n\n      _this4.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n      if (startingState === 'HAVE_MASTER') {\n        _this4.trigger('loadedmetadata');\n      } else {\n        _this4.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n\n    this.stopRequest();\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MASTER';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.load = function load(shouldDelay) {\n    var _this5 = this;\n\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n\n    var media = this.media();\n\n    if (shouldDelay) {\n      var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this5.mediaUpdateTimeout = null;\n\n        _this5.load();\n      }, delay);\n      return;\n    }\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\n    var _this6 = this;\n\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n\n    this.mediaUpdateTimeout = window$1.setTimeout(function () {\n      _this6.mediaUpdateTimeout = null;\n\n      _this6.trigger('mediaupdatetimeout');\n\n      _this6.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.start = function start() {\n    var _this7 = this;\n\n    this.started = true;\n\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a master playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(function () {\n        _this7.setupInitialPlaylist(_this7.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      } // clear the loader's request reference\n\n\n      _this7.request = null;\n\n      if (error) {\n        _this7.error = {\n          status: req.status,\n          message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (_this7.state === 'HAVE_NOTHING') {\n          _this7.started = false;\n        }\n\n        return _this7.trigger('error');\n      }\n\n      _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n      var manifest = _this7.parseManifest_({\n        manifestString: req.responseText,\n        url: _this7.src\n      });\n\n      _this7.setupInitialPlaylist(manifest);\n    });\n  };\n\n  _proto.srcUri = function srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a master or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a master playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a master playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n  ;\n\n  _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MASTER';\n\n    if (manifest.playlists) {\n      this.master = manifest;\n      addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(function (playlist) {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(function (segment) {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n\n    var uri = this.srcUri() || window$1.location.href;\n    this.master = masterForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.master.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  };\n\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file xhr.js\n */\n\n\nvar videojsXHR = videojs.xhr,\n    mergeOptions$1 = videojs.mergeOptions;\n\nvar callbackWrapper = function callbackWrapper(request, error, response, callback) {\n  var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n\n  callback(error, request);\n};\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = mergeOptions$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n    var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    var request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var byterangeEnd;\n  var byterangeStart = byterange.offset;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex;\n  var ascii;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime;\n  var programDateTime;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === void 0 ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + \" was not found in the stream\"\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + \" is not buffered yet. Try again\"\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n}; // which will only happen if the request is complete.\n\n\nvar callbackOnCompleted = function callbackOnCompleted(request, cb) {\n  if (request.readyState === 4) {\n    return cb();\n  }\n\n  return;\n};\n\nvar containerRequest = function containerRequest(uri, xhr, cb) {\n  var bytes = [];\n  var id3Offset;\n  var finished = false;\n\n  var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n\n  var progressListener = function progressListener(error, request) {\n    if (finished) {\n      return;\n    }\n\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n\n    var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n\n  var options = {\n    uri: uri,\n    beforeSend: function beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function (_ref) {\n        _ref.total;\n        _ref.loaded;\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  var request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\n\nvar EventTarget = videojs.EventTarget,\n    mergeOptions = videojs.mergeOptions;\n\nvar dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n\n  for (var i = 0; i < a.segments.length; i++) {\n    var aSegment = a.segments[i];\n    var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n\n    var aByterange = aSegment.byterange;\n    var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n\n  return true;\n};\n/**\n * Parses the master XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.masterXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\n\nvar parseMasterXml = function parseMasterXml(_ref) {\n  var masterXml = _ref.masterXml,\n      srcUrl = _ref.srcUrl,\n      clientOffset = _ref.clientOffset,\n      sidxMapping = _ref.sidxMapping,\n      previousManifest = _ref.previousManifest;\n  var manifest = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset,\n    sidxMapping: sidxMapping,\n    previousManifest: previousManifest\n  });\n  addPropertiesToMaster(manifest, srcUrl);\n  return manifest;\n};\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\n\nvar updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n  var noChanges = true;\n  var update = mergeOptions(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod,\n    timelineStarts: newMaster.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlist = newMaster.playlists[i];\n\n    if (playlist.sidx) {\n      var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n\n    var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var id = properties.playlists[0].id;\n\n      var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var id in playlists) {\n    var playlist = playlists[id];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} master the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\n\nvar DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.masterPlaylistLoader_ = masterPlaylistLoader || _assertThisInitialized(_this);\n\n    if (!masterPlaylistLoader) {\n      _this.isMaster_ = true;\n    }\n\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().id);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {};\n    _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (_this.isMaster_) {\n      _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.masterPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      _this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n\n    return _this;\n  }\n\n  var _proto = DashPlaylistLoader.prototype;\n\n  _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n\n    this.request = null;\n\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n  ;\n\n  _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n    var _this2 = this;\n\n    var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(function () {\n        return cb(false);\n      }, 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n\n    var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n    var fin = function fin(err, request) {\n      if (_this2.requestErrored_(err, request, startingState)) {\n        return;\n      }\n\n      var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n      var sidx;\n\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        _this2.requestErrored_(e, request, startingState);\n\n        return;\n      }\n\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx: sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n\n    this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n      if (err) {\n        return fin(err, request);\n      }\n\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist: playlist,\n          internal: true,\n          blacklistDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n\n      var _playlist$sidx$bytera = playlist.sidx.byterange,\n          offset = _playlist$sidx$bytera.offset,\n          length = _playlist$sidx$bytera.length;\n\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n\n      _this2.request = _this2.vhs_.xhr({\n        uri: uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.off();\n  };\n\n  _proto.hasPendingRequest = function hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  _proto.media = function media(playlist) {\n    var _this3 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n\n      return;\n    } // switching to the active playlist is a no-op\n\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n      // everything is ready just continue to haveMetadata\n      _this3.haveMetadata({\n        startingState: startingState,\n        playlist: playlist\n      });\n    });\n  };\n\n  _proto.haveMetadata = function haveMetadata(_ref2) {\n    var startingState = _ref2.startingState,\n        playlist = _ref2.playlist;\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MASTER') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  };\n\n  _proto.pause = function pause() {\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n\n    if (this.isMaster_) {\n      window$1.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  };\n\n  _proto.load = function load(isFinalRendition) {\n    var _this4 = this;\n\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    var media = this.media();\n\n    if (isFinalRendition) {\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        return _this4.load();\n      }, delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      // Check to see if this is the master loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the master manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  _proto.start = function start() {\n    var _this5 = this;\n\n    this.started = true; // We don't need to request the master manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMaster_) {\n      this.mediaRequest_ = window$1.setTimeout(function () {\n        return _this5.haveMaster_();\n      }, 0);\n      return;\n    }\n\n    this.requestMaster_(function (req, masterChanged) {\n      _this5.haveMaster_();\n\n      if (!_this5.hasPendingRequest() && !_this5.media_) {\n        _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n      }\n    });\n  };\n\n  _proto.requestMaster_ = function requestMaster_(cb) {\n    var _this6 = this;\n\n    this.request = this.vhs_.xhr({\n      uri: this.masterPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      if (_this6.requestErrored_(error, req)) {\n        if (_this6.state === 'HAVE_NOTHING') {\n          _this6.started = false;\n        }\n\n        return;\n      }\n\n      var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n      _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n      if (req.responseHeaders && req.responseHeaders.date) {\n        _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        _this6.masterLoaded_ = Date.now();\n      }\n\n      _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n      if (masterChanged) {\n        _this6.handleMaster_();\n\n        _this6.syncClientServerClock_(function () {\n          return cb(req, masterChanged);\n        });\n\n        return;\n      }\n\n      return cb(req, masterChanged);\n    });\n  }\n  /**\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n  ;\n\n  _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n    var _this7 = this;\n\n    var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n      return done();\n    }\n\n    if (utcTiming.method === 'DIRECT') {\n      this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      }\n\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      var serverTime;\n\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = _this7.masterLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n\n      _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  };\n\n  _proto.haveMaster_ = function haveMaster_() {\n    this.state = 'HAVE_MASTER';\n\n    if (this.isMaster_) {\n      // We have the master playlist at this point, so\n      // trigger this to allow MasterPlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  };\n\n  _proto.handleMaster_ = function handleMaster_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    var oldMaster = this.masterPlaylistLoader_.master;\n    var newMaster = parseMasterXml({\n      masterXml: this.masterPlaylistLoader_.masterXml_,\n      srcUrl: this.masterPlaylistLoader_.srcUrl,\n      clientOffset: this.masterPlaylistLoader_.clientOffset_,\n      sidxMapping: this.masterPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMaster\n    }); // if we have an old master to compare the new master against\n\n    if (oldMaster) {\n      newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n    } // only update master if we have a new master\n\n\n    this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n    var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n    if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n      this.masterPlaylistLoader_.srcUrl = location;\n    }\n\n    if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n\n    return Boolean(newMaster);\n  };\n\n  _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n    var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n      }\n\n      return;\n    }\n\n    this.createMUPTimeout_(mup);\n  };\n\n  _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n    var mpl = this.masterPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the master xml and updates the parsed master manifest\n   */\n  ;\n\n  _proto.refreshXml_ = function refreshXml_() {\n    var _this8 = this;\n\n    this.requestMaster_(function (req, masterChanged) {\n      if (!masterChanged) {\n        return;\n      }\n\n      if (_this8.media_) {\n        _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n\n      _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n      _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n        // TODO: do we need to reload the current playlist?\n        _this8.refreshMedia_(_this8.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the master loader.\n   */\n  ;\n\n  _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n    var _this9 = this;\n\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for master we have to reparse the master xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating master\n    // if this is the first time this.media_ is being set.\n    // as master was just parsed in that case.\n\n\n    if (this.media_ && this.isMaster_) {\n      this.handleMaster_();\n    }\n\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    if (!this.mediaUpdateTimeout) {\n      var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n        if (_this9.media().endList) {\n          return;\n        }\n\n        _this9.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n\n          createMediaUpdateTimeout();\n        }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n      };\n\n      createMediaUpdateTimeout();\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  return DashPlaylistLoader;\n}(EventTarget);\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\n\nvar stringToArrayBuffer = function stringToArrayBuffer(string) {\n  var view = new Uint8Array(new ArrayBuffer(string.length));\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view.buffer;\n};\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\n\n\nvar browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\n\nvar createObjectURL = function createObjectURL(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\n\nvar factory = function factory(code) {\n  return function () {\n    var objectUrl = createObjectURL(code);\n    var worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    var terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n\n    return worker;\n  };\n};\n\nvar transform = function transform(code) {\n  return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n};\n\nvar getWorkerString = function getWorkerString(fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n/* rollup-plugin-worker-factory start for worker!/Users/bclifford/Code/vhs-release-test/src/transmuxer-worker.js */\n\n\nvar workerCode$1 = transform(getWorkerString(function () {\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n  var Stream = function Stream() {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n\n      this.off = function (type, listener) {\n        var index;\n\n        if (!listeners[type]) {\n          return false;\n        }\n\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n\n  Stream.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n\n  Stream.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n\n  Stream.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n\n  Stream.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n\n  Stream.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n\n  var stream = Stream;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n\n  var getUint64$2 = function getUint64(uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n\n      return value;\n    }\n\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n\n  var numbers = {\n    getUint64: getUint64$2,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function box(type) {\n    var payload = [],\n        size = 0,\n        i,\n        result,\n        view;\n\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n\n    return result;\n  };\n\n  dinf = function dinf() {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n\n  esds = function esds(track) {\n    return box(types.esds, new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15, // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function ftyp() {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n\n  hdlr = function hdlr(type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n\n  mdat = function mdat(data) {\n    return box(types.mdat, data);\n  };\n\n  mdhd = function mdhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n    0x55, 0xc4, // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n\n    return box(types.mdhd, result);\n  };\n\n  mdia = function mdia(track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n\n  mfhd = function mfhd(sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function minf(track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n\n  moof = function moof(sequenceNumber, tracks) {\n    var trackFragments = [],\n        i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n\n  moov = function moov(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n\n  mvex = function mvex(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n\n  mvhd = function mvhd(duration) {\n    var bytes = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // creation_time\n    0x00, 0x00, 0x00, 0x02, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n    0x00, 0x01, 0x00, 0x00, // 1.0 rate\n    0x01, 0x00, // 1.0 volume\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n\n  sdtp = function sdtp(track) {\n    var samples = track.samples || [],\n        bytes = new Uint8Array(4 + samples.length),\n        flags,\n        i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n\n    return box(types.sdtp, bytes);\n  };\n\n  stbl = function stbl(track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n\n  (function () {\n    var videoSample, audioSample;\n\n    stsd = function stsd(track) {\n      return box(types.stsd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n\n    videoSample = function videoSample(track) {\n      var sps = track.sps || [],\n          pps = track.pps || [],\n          sequenceParameterSets = [],\n          pictureParameterSets = [],\n          i,\n          avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff, // width\n      (track.height & 0xff00) >> 8, track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length], // numOfSequenceParameterSets\n      sequenceParameterSets, // \"SPS\"\n      [pps.length], // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n            vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n\n      return box.apply(null, avc1Box);\n    };\n\n    audioSample = function audioSample(track) {\n      return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n\n  tkhd = function tkhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n\n  traf = function traf(track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 + // tfhd\n    20 + // tfdt\n    8 + // traf header\n    16 + // mfhd\n    8 + // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n\n  trak = function trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n\n  trex = function trex(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n\n    return box(types.trex, result);\n  };\n\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function trunHeader(samples, offset) {\n      var durationPresent = 0,\n          sizePresent = 0,\n          flagsPresent = 0,\n          compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n\n      return [0x00, // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function videoTrun(track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    audioTrun = function audioTrun(track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    trun$1 = function trun(track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n\n      return videoTrun(track, offset);\n    };\n  })();\n\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function initSegment(tracks) {\n      var fileType = ftyp(),\n          movie = moov(tracks),\n          result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // Convert an array of nal units into an array of frames with each frame being\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n    var i,\n        currentNal,\n        currentFrame = [],\n        frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n\n  var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n    var i,\n        currentFrame,\n        currentGop = [],\n        gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n\n  var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n    var currentGop;\n\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n\n  var createDefaultSample = function createDefaultSample() {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n\n  var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n\n  var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n    var h,\n        i,\n        sample,\n        currentGop,\n        currentFrame,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n\n  var concatenateNalData = function concatenateNalData(gops) {\n    var h,\n        i,\n        j,\n        currentGop,\n        currentFrame,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = gops.byteLength,\n        numberOfNals = gops.nalCount,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n\n    return data;\n  }; // generate the track's sample table from a frame\n\n\n  var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n    var sample,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n\n  var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n    var i,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = frame.byteLength,\n        numberOfNals = frame.length,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var frameUtils = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n  var zeroFill = function zeroFill(count) {\n    var a = [];\n\n    while (count--) {\n      a.push(0);\n    }\n\n    return a;\n  };\n\n  var makeTable = function makeTable(metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n\n  var silence;\n\n  var silence_1 = function silence_1() {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function sumFrameByteLengths(array) {\n    var i,\n        currentObj,\n        sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n\n  var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n        frameDuration = 0,\n        audioGapDuration = 0,\n        audioFillFrameCount = 0,\n        audioFillDuration = 0,\n        silentFrame,\n        i,\n        firstFrame;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = silence_1()[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n\n    track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n\n  var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n\n  var generateSampleTable = function generateSampleTable(frames) {\n    var i,\n        currentFrame,\n        samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n\n  var concatenateFrameData = function concatenateFrameData(frames) {\n    var i,\n        currentFrame,\n        dataOffset = 0,\n        data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var audioFrameUtils = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function collectDtsInfo(track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n\n  var clearDtsInfo = function clearDtsInfo(track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n        scale,\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n\n    return baseMediaDecodeTime;\n  };\n\n  var trackDecodeInfo = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n      RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function parseSei(bytes) {\n    var i = 0,\n        result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n        payloadType = 0,\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n  var parseUserData = function parseUserData(sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n\n  var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n    var results = [],\n        i,\n        count,\n        offset,\n        data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n\n    count = userData[0] & 0x1f;\n\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n\n    return results;\n  };\n\n  var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  }; // exports\n\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  }; // Link To Transport\n  // -----------------\n\n  var CaptionStream$1 = function CaptionStream(options) {\n    options = options || {};\n    CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n\n  CaptionStream$1.prototype = new stream();\n\n  CaptionStream$1.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n\n    sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n\n    if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n\n    userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n\n      return;\n    } // parse out CC data packets and save them for later\n\n\n    newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n\n  CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n\n  CaptionStream$1.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n\n  CaptionStream$1.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n\n  CaptionStream$1.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n\n  CaptionStream$1.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n\n  CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n\n  CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n\n  CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n\n  CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n\n  CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n\n  };\n\n  var get708CharFromCode = function get708CharFromCode(code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n\n    return String.fromCharCode(newCode);\n  };\n\n  var within708TextBlock = function within708TextBlock(b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n\n  var Cea708Window = function Cea708Window(windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n\n    return false;\n  };\n\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n\n  var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n\n  var Cea708Stream = function Cea708Stream(options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(function (serviceName) {\n      serviceProps = captionServices[serviceName];\n\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n\n        self.add708Bytes(packet);\n      }\n    };\n  };\n\n  Cea708Stream.prototype = new stream();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n\n      this.pushServiceBlock(serviceNum, i, blockSize);\n\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n\n    var _char;\n\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n\n      _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      _char = get708CharFromCode(extended | currentByte);\n    }\n\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n\n    win.pendingNewLine = false;\n    win.addText(_char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n\n  };\n\n  var getCharFromCode = function getCharFromCode(code) {\n    if (code === null) {\n      return '';\n    }\n\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function createDisplayBuffer() {\n    var result = [],\n        i = BOTTOM_ROW + 1;\n\n    while (i--) {\n      result.push('');\n    }\n\n    return result;\n  };\n\n  var Cea608Stream = function Cea608Stream(field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n\n          this.setRollUp(packet.pts, row);\n        }\n\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n\n    };\n  };\n\n  Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n\n  Cea608Stream.prototype.isNormalChar = function (_char2) {\n    return _char2 >= 0x20 && _char2 <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n\n    this.displayed_[this.row_] = '';\n  };\n\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n\n  var captionStream = {\n    CaptionStream: CaptionStream$1,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n\n  var handleRollover$1 = function handleRollover(value, reference) {\n    var direction = 1;\n\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n\n    return value;\n  };\n\n  var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n\n  TimestampRolloverStream$1.prototype = new stream();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  };\n\n  var percentEncode$1 = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function parseUtf8(bytes, start, end) {\n    return decodeURIComponent(percentEncode$1(bytes, start, end));\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591$1 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n  },\n      parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  },\n      tagParsers = {\n    TXXX: function TXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n\n      tag.data = tag.value;\n    },\n    WXXX: function WXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function PRIV(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591$1(tag.data, 0, i);\n          break;\n        }\n      }\n\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n      _MetadataStream;\n\n  _MetadataStream = function MetadataStream(options) {\n    var settings = {\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n        // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n        // tag data that is not complete enough to be parsed\n    buffer = [],\n        // the total number of bytes currently in the buffer\n    bufferSize = 0,\n        i;\n\n    _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n    this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n\n      frameStart = 10;\n\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n          });\n          return;\n        }\n\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id;\n\n        if (tagParsers[frame.id]) {\n          tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n          // time for raw AAC data\n\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.data,\n                size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n            // on the value of this frame\n            // we couldn't have known the appropriate pts and dts before\n            // parsing this ID3 tag so set those values now\n\n            if (tag.pts === undefined && tag.dts === undefined) {\n              tag.pts = frame.timeStamp;\n              tag.dts = frame.timeStamp;\n            }\n\n            this.trigger('timestamp', frame);\n          }\n        }\n\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n\n      this.trigger('data', tag);\n    };\n  };\n\n  _MetadataStream.prototype = new stream();\n  var metadataStream = _MetadataStream;\n  var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n      // bytes\n  SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  _TransportPacketStream = function TransportPacketStream() {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n        bytesInBuffer = 0;\n\n    _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH$1,\n          everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n\n  _TransportPacketStream.prototype = new stream();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  _TransportParseStream = function TransportParseStream() {\n    var parsePsi, parsePat, parsePmt, self;\n\n    _TransportParseStream.prototype.init.call(this);\n\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n\n    parsePsi = function parsePsi(payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n\n    parsePat = function parsePat(payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n\n    parsePmt = function parsePmt(payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n\n    this.push = function (packet) {\n      var result = {},\n          offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = streamTypes.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = streamTypes.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n\n  _TransportParseStream.prototype = new stream();\n  _TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  _ElementaryStream = function ElementaryStream() {\n    var self = this,\n        segmentHadPmt = false,\n        // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n        audio = {\n      data: [],\n      size: 0\n    },\n        timedMetadata = {\n      data: [],\n      size: 0\n    },\n        programMapTable,\n        parsePes = function parsePes(payload, pes) {\n      var ptsDtsFlags;\n      var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n      pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n      // that are frame data that is continuing from the previous fragment. This\n      // is to check that the pes data is the start of a new pes payload\n\n      if (startPrefix !== 1) {\n        return;\n      } // get the packet length, this will be 0 for video\n\n\n      pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      } // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n\n\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function flushStream(stream, type, forceFlush) {\n      var packetData = new Uint8Array(stream.size),\n          event = {\n        type: type\n      },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n      // PES header\n\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n\n      event.trackId = stream.data[0].pid; // reassemble the packet\n\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      } // parse assembled packet's PES header\n\n\n      parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n\n      packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      } // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n\n\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n    _ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n\n    this.push = function (data) {\n      ({\n        pat: function pat() {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function pes() {\n          var stream, streamType;\n\n          switch (data.streamType) {\n            case streamTypes.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n\n            case streamTypes.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function pmt() {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', pmt);\n      }\n\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n\n  _ElementaryStream.prototype = new stream();\n  var m2ts = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: _TransportPacketStream,\n    TransportParseStream: _TransportParseStream,\n    ElementaryStream: _ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: captionStream.CaptionStream,\n    Cea608Stream: captionStream.Cea608Stream,\n    Cea708Stream: captionStream.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n\n  for (var type in streamTypes) {\n    if (streamTypes.hasOwnProperty(type)) {\n      m2ts[type] = streamTypes[type];\n    }\n  }\n\n  var m2ts_1 = m2ts;\n  var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n  var _AdtsStream;\n\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  _AdtsStream = function AdtsStream(handlePartialSegments) {\n    var buffer,\n        frameNum = 0;\n\n    _AdtsStream.prototype.init.call(this);\n\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n      });\n    };\n\n    this.push = function (packet) {\n      var i = 0,\n          frameLength,\n          protectionSkipBytes,\n          oldBuffer,\n          sampleCount,\n          adtsFrameDuration;\n\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n\n          i++;\n          continue;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n\n      buffer = buffer.subarray(i);\n    };\n\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AdtsStream.prototype = new stream();\n  var adts = _AdtsStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb = function ExpGolomb(workingData) {\n    var // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n        // the current word being examined\n    workingWord = 0,\n        // :uint\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, workingBytesAvailable);\n\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n          // :uint\n      valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n\n      bits = size - bits;\n\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n\n      return valu;\n    }; // ():uint\n\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n\n    this.loadWord();\n  };\n\n  var expGolomb = ExpGolomb;\n\n  var _H264Stream, _NalByteStream;\n\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  _NalByteStream = function NalByteStream() {\n    var syncPoint = 0,\n        i,\n        buffer;\n\n    _NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n\n    this.push = function (data) {\n      var swapBuffer;\n\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  _H264Stream = function H264Stream() {\n    var nalByteStream = new _NalByteStream(),\n        self,\n        trackId,\n        currentPts,\n        currentDts,\n        discardEmulationPreventionBytes,\n        readSequenceParameterSet,\n        skipScalingList;\n\n    _H264Stream.prototype.init.call(this);\n\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n\n    skipScalingList = function skipScalingList(count, expGolombDecoder) {\n      var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n\n    discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n\n    readSequenceParameterSet = function readSequenceParameterSet(data) {\n      var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          expGolombDecoder,\n          profileIdc,\n          levelIdc,\n          profileCompatibility,\n          chromaFormatIdc,\n          picOrderCntType,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          sarRatio = [1, 1],\n          aspectRatioIdc,\n          i;\n      expGolombDecoder = new expGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n\n            case 2:\n              sarRatio = [12, 11];\n              break;\n\n            case 3:\n              sarRatio = [10, 11];\n              break;\n\n            case 4:\n              sarRatio = [16, 11];\n              break;\n\n            case 5:\n              sarRatio = [40, 33];\n              break;\n\n            case 6:\n              sarRatio = [24, 11];\n              break;\n\n            case 7:\n              sarRatio = [20, 11];\n              break;\n\n            case 8:\n              sarRatio = [32, 11];\n              break;\n\n            case 9:\n              sarRatio = [80, 33];\n              break;\n\n            case 10:\n              sarRatio = [18, 11];\n              break;\n\n            case 11:\n              sarRatio = [15, 11];\n              break;\n\n            case 12:\n              sarRatio = [64, 33];\n              break;\n\n            case 13:\n              sarRatio = [160, 99];\n              break;\n\n            case 14:\n              sarRatio = [4, 3];\n              break;\n\n            case 15:\n              sarRatio = [3, 2];\n              break;\n\n            case 16:\n              sarRatio = [2, 1];\n              break;\n\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n\n  _H264Stream.prototype = new stream();\n  var h264 = {\n    H264Stream: _H264Stream,\n    NalByteStream: _NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n  var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n        flags = header[byteIndex + 5],\n        footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n\n  var getId3Offset = function getId3Offset(data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n\n  var isLikelyAacData$1 = function isLikelyAacData(data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n\n  var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n  var percentEncode = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n\n  var parseIso88591 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n        middle = header[byteIndex + 4] << 3,\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n\n  var parseType$2 = function parseType(header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n\n    return null;\n  };\n\n  var parseSampleRate = function parseSampleRate(packet) {\n    var i = 0;\n\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n\n    return null;\n  };\n\n  var parseAacTimestamp = function parseAacTimestamp(packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        return null;\n      }\n\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n\n            break;\n          }\n        }\n      }\n\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n\n    return null;\n  };\n\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$2,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n\n  var _AacStream;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n\n  _AacStream = function AacStream() {\n    var everything = new Uint8Array(),\n        timeStamp = 0;\n\n    _AacStream.prototype.init.call(this);\n\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n\n    this.push = function (bytes) {\n      var frameSize = 0,\n          byteIndex = 0,\n          bytesLeft,\n          chunk,\n          packet,\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n\n          frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n\n          frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n\n        byteIndex++;\n      }\n\n      bytesLeft = everything.length - byteIndex;\n\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AacStream.prototype = new stream();\n  var aac = _AacStream; // constants\n\n  var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES;\n  var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES;\n  var H264Stream = h264.H264Stream;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n  var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n  var retriggerForStream = function retriggerForStream(key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n\n  var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n\n  var arrayEquals = function arrayEquals(a, b) {\n    var i;\n\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n        decodeDuration = endDts - startDts,\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  _AudioSegmentStream = function AudioSegmentStream(track, options) {\n    var adtsFrames = [],\n        sequenceNumber,\n        earliestAllowedDts = 0,\n        audioAppendStartTs = 0,\n        videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n\n    _AudioSegmentStream.prototype.init.call(this);\n\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n\n      if (track) {\n        audioProperties.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n\n      adtsFrames.push(data);\n    };\n\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4Generator.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n\n  _AudioSegmentStream.prototype = new stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  _VideoSegmentStream = function VideoSegmentStream(track, options) {\n    var sequenceNumber,\n        nalUnits = [],\n        gopsToAlignWith = [],\n        config,\n        pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n\n    _VideoSegmentStream.prototype.init.call(this);\n\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        videoProperties.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n\n    this.flush = function () {\n      var frames,\n          gopForFusion,\n          gops,\n          moof,\n          mdat,\n          boxes,\n          prependedContentDuration = 0,\n          firstGop,\n          lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n          // Half-a-second in a 90khz clock\n      allowableOverlap = 10000,\n          // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n          dtsDistance,\n          nearestGopObj,\n          currentGop,\n          currentGopObj,\n          i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          break;\n        }\n\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n\n        gopIndex--;\n      }\n\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n\n      var trimIndex;\n\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n\n      if (trimIndex === 0) {\n        return gops;\n      }\n\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n\n  _VideoSegmentStream.prototype = new stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  _CoalesceStream = function CoalesceStream(options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n\n    _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n\n  _CoalesceStream.prototype = new stream();\n\n  _CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n        event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n        caption,\n        id3,\n        initSegment,\n        timelineStartPts = 0,\n        i;\n\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n\n        return;\n      }\n    }\n\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      videoProperties.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      audioProperties.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n\n  _CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n\n  _Transmuxer = function Transmuxer(options) {\n    var self = this,\n        hasFlushed = true,\n        videoTrack,\n        audioTrack;\n\n    _Transmuxer.prototype.init.call(this);\n\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new aac();\n      pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new adts();\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts_1.TransportPacketStream();\n      pipeline.parseStream = new m2ts_1.TransportParseStream();\n      pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n      pipeline.adtsStream = new adts();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts_1.CaptionStream(options);\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n\n        hasFlushed = false;\n      }\n\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n\n  _Transmuxer.prototype = new stream();\n  var transmuxer = {\n    Transmuxer: _Transmuxer,\n    VideoSegmentStream: _VideoSegmentStream,\n    AudioSegmentStream: _AudioSegmentStream,\n    AUDIO_PROPERTIES: audioProperties,\n    VIDEO_PROPERTIES: videoProperties,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function toUnsigned(value) {\n    return value >>> 0;\n  };\n\n  var toHexString$1 = function toHexString(value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n\n  var parseType$1 = function parseType(buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n\n  var parseType_1 = parseType$1;\n  var toUnsigned$2 = bin.toUnsigned;\n\n  var findBox = function findBox(data, path) {\n    var results = [],\n        i,\n        size,\n        type,\n        end,\n        subresults;\n\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType_1(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of data\n\n\n    return results;\n  };\n\n  var findBox_1 = findBox;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$1 = numbers.getUint64;\n\n  var tfdt = function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n\n    return result;\n  };\n\n  var parseTfdt = tfdt;\n\n  var parseSampleFlags = function parseSampleFlags(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n\n  var parseSampleFlags_1 = parseSampleFlags;\n\n  var trun = function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  };\n\n  var parseTrun = trun;\n\n  var tfhd = function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  };\n\n  var parseTfhd = tfhd;\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function mapToSample(offset, samples) {\n    var approximateOffset = offset;\n\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n\n      approximateOffset -= sample.size;\n    }\n\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n\n  var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = {\n      logs: [],\n      seiNals: []\n    },\n        seiNal,\n        i,\n        length,\n        lastMatchedSample;\n\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n\n  var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window_1.BigInt(sample.compositionTimeOffset);\n          currentDts += window_1.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n\n  var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox_1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox_1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n\n  var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n\n  var CaptionParser = function CaptionParser() {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n\n        return null;\n      }\n\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n\n      this.resetCaptionStream();\n    };\n\n    this.reset();\n  };\n\n  var captionParser = CaptionParser;\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function timescale(init) {\n    var result = {},\n        traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox_1(trak, ['tkhd'])[0];\n\n      if (!tkhd) {\n        return null;\n      }\n\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (!mdhd) {\n        return null;\n      }\n\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n\n  startTime = function startTime(timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox_1(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox_1(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n\n      var seconds;\n\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window_1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n\n      if (seconds < acc) {\n        acc = seconds;\n      }\n\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n\n  compositionStartTime = function compositionStartTime(timescales, fragment) {\n    var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window_1.BigInt(compositionTimeOffset);\n      timescale = window_1.BigInt(timescale);\n    }\n\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n\n  getVideoTrackIds = function getVideoTrackIds(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox_1(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType_1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n\n  getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n\n  getTracks = function getTracks(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox_1(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n\n      var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType_1(hdlr.subarray(8, 12));\n\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n\n      var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n\n      var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n\n      tracks.push(track);\n    });\n    return tracks;\n  };\n\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox_1,\n    parseType: parseType_1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n  };\n\n  var parsePid = function parsePid(packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n\n  var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n    return !!(packet[1] & 0x40);\n  };\n\n  var parseAdaptionField = function parseAdaptionField(packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n\n    return offset;\n  };\n\n  var parseType = function parseType(packet, pmtPid) {\n    var pid = parsePid(packet);\n\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n\n    return null;\n  };\n\n  var parsePat = function parsePat(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n\n  var parsePmt = function parsePmt(packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n\n    return programMapTable;\n  };\n\n  var parsePesType = function parsePesType(packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n\n    switch (type) {\n      case streamTypes.H264_STREAM_TYPE:\n        return 'video';\n\n      case streamTypes.ADTS_STREAM_TYPE:\n        return 'audio';\n\n      case streamTypes.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n\n      default:\n        return null;\n    }\n  };\n\n  var parsePesTime = function parsePesTime(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n\n    if (!pusi) {\n      return null;\n    }\n\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n\n  var parseNalUnitType = function parseNalUnitType(type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n\n      case 0x06:\n        return 'sei_rbsp';\n\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n\n      default:\n        return null;\n    }\n  };\n\n  var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n\n    return foundKeyFrame;\n  };\n\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n      // bytes\n  SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function parsePsi_(bytes, pmt) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type;\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n\n  var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n\n  var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed,\n        frame,\n        i,\n        pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n\n                    currentFrame.size = 0;\n                  }\n                }\n\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n\n  var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n\n  var inspectAac_ = function inspectAac_(bytes) {\n    var endLoop = false,\n        audioCount = 0,\n        sampleRate = null,\n        timestamp = null,\n        frameSize = 0,\n        byteIndex = 0,\n        packet;\n\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n\n          byteIndex += frameSize;\n          break;\n\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n\n        default:\n          byteIndex++;\n          break;\n      }\n\n      if (endLoop) {\n        return null;\n      }\n    }\n\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n\n  var inspectTs_ = function inspectTs_(bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n\n        switch (type) {\n          case streamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n\n            break;\n\n          case streamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n\n            break;\n        }\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n\n  var inspect = function inspect(bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      var initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      var typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment: segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo: gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      var videoSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      var audioSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo: audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame: id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption: caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo: trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock.videoTsToSeconds(audioTimingInfo.start),\n          end: clock.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock.videoTsToSeconds(videoTimingInfo.start),\n          end: clock.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log: log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n\n  var MessageHandlers = /*#__PURE__*/function () {\n    function MessageHandlers(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n\n    var _proto = MessageHandlers.prototype;\n\n    _proto.init = function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    };\n\n    _proto.pushMp4Captions = function pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    };\n\n    _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n      var timescales = _ref.timescales,\n          data = _ref.data;\n      var startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime: startTime,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n      var data = _ref2.data;\n      var tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks: tracks,\n        data: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n    ;\n\n    _proto.probeTs = function probeTs(_ref3) {\n      var data = _ref3.data,\n          baseStartTime = _ref3.baseStartTime;\n      var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n      var timeInfo = tsInspector.inspect(data, tsStartTime);\n      var result = null;\n\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n\n      this.self.postMessage({\n        action: 'probeTs',\n        result: result,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    };\n\n    _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n    ;\n\n    _proto.push = function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n    ;\n\n    _proto.setTimestampOffset = function setTimestampOffset(data) {\n      var timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n    };\n\n    _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n    };\n\n    _proto.setRemux = function setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n    ;\n\n    _proto.flush = function flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.endTimeline = function endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.alignGopsWith = function alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    };\n\n    return MessageHandlers;\n  }();\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/bclifford/Code/vhs-release-test/src/transmuxer-worker.js */\n\nvar handleData_ = function handleData_(event, transmuxedData, callback) {\n  var _event$data$segment = event.data.segment,\n      type = _event$data$segment.type,\n      initSegment = _event$data$segment.initSegment,\n      captions = _event$data$segment.captions,\n      captionStreams = _event$data$segment.captionStreams,\n      metadata = _event$data$segment.metadata,\n      videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n      videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n  transmuxedData.buffer.push({\n    captions: captions,\n    captionStreams: captionStreams,\n    metadata: metadata\n  });\n  var boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  var result = {\n    type: type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n\n  callback(result);\n};\n\nvar handleDone_ = function handleDone_(_ref) {\n  var transmuxedData = _ref.transmuxedData,\n      callback = _ref.callback; // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\n\nvar handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\n\nvar processTransmux = function processTransmux(options) {\n  var transmuxer = options.transmuxer,\n      bytes = options.bytes,\n      audioAppendStart = options.audioAppendStart,\n      gopsToAlignWith = options.gopsToAlignWith,\n      remux = options.remux,\n      onData = options.onData,\n      onTrackInfo = options.onTrackInfo,\n      onAudioTimingInfo = options.onAudioTimingInfo,\n      onVideoTimingInfo = options.onVideoTimingInfo,\n      onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n      onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n      onId3 = options.onId3,\n      onCaptions = options.onCaptions,\n      onDone = options.onDone,\n      onEndedTimeline = options.onEndedTimeline,\n      onTransmuxerLog = options.onTransmuxerLog,\n      isEndOfTimeline = options.isEndOfTimeline;\n  var transmuxedData = {\n    buffer: []\n  };\n  var waitForEndedTimelineEvent = isEndOfTimeline;\n\n  var handleMessage = function handleMessage(event) {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData: transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith: gopsToAlignWith\n    });\n  }\n\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux: remux\n    });\n  }\n\n  if (bytes.byteLength) {\n    var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset: byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\n\nvar dequeue = function dequeue(transmuxer) {\n  transmuxer.currentTransmux = null;\n\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\n\nvar processAction = function processAction(transmuxer, action) {\n  transmuxer.postMessage({\n    action: action\n  });\n  dequeue(transmuxer);\n};\n\nvar enqueueAction = function enqueueAction(action, transmuxer) {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\n\nvar reset = function reset(transmuxer) {\n  enqueueAction('reset', transmuxer);\n};\n\nvar endTimeline = function endTimeline(transmuxer) {\n  enqueueAction('endTimeline', transmuxer);\n};\n\nvar transmux = function transmux(options) {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n\n  options.transmuxer.transmuxQueue.push(options);\n};\n\nvar createTransmuxer = function createTransmuxer(options) {\n  var transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  var term = transmuxer.terminate;\n\n  transmuxer.terminate = function () {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n\n  transmuxer.postMessage({\n    action: 'init',\n    options: options\n  });\n  return transmuxer;\n};\n\nvar segmentTransmuxer = {\n  reset: reset,\n  endTimeline: endTimeline,\n  transmux: transmux,\n  createTransmuxer: createTransmuxer\n};\n\nvar workerCallback = function workerCallback(options) {\n  var transmuxer = options.transmuxer;\n  var endAction = options.endAction || options.action;\n  var callback = options.callback;\n\n  var message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n\n  var listenForEndEvent = function listenForEndEvent(event) {\n    if (event.data.action !== endAction) {\n      return;\n    }\n\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n\n    callback(event.data);\n  };\n\n  transmuxer.addEventListener('message', listenForEndEvent);\n\n  if (options.data) {\n    var isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n    for (var i = 0; i < objects.length; i++) {\n      objects[i].bytes = bytes;\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar parseInitSegment = function parseInitSegment(segment, _callback) {\n  var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    var uri = segment.map.resolvedUri || segment.map.uri;\n    return _callback({\n      internal: true,\n      message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: function callback(_ref) {\n      var tracks = _ref.tracks,\n          data = _ref.data; // transfer bytes back to us\n\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n\n        segment.map.tracks[track.type] = track;\n\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return _callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n  var segment = _ref2.segment,\n      finishProcessingFn = _ref2.finishProcessingFn;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n    // until the key request is done to decrypt.\n\n    if (segment.map.key) {\n      segment.map.encryptedBytes = bytes;\n      return finishProcessingFn(null, segment);\n    }\n\n    segment.map.bytes = bytes;\n    parseInitSegment(segment, function (parseError) {\n      if (parseError) {\n        parseError.xhr = request;\n        parseError.status = request.status;\n        return finishProcessingFn(parseError, segment);\n      }\n\n      finishProcessingFn(null, segment);\n    });\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(_ref3) {\n  var segment = _ref3.segment,\n      finishProcessingFn = _ref3.finishProcessingFn,\n      responseType = _ref3.responseType;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n    // thrown for two primary cases:\n    // 1. the mime type override stops working, or is not implemented for a specific\n    //    browser\n    // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n    responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(newBytes);\n    } else {\n      segment.bytes = new Uint8Array(newBytes);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar transmuxAndNotify = function transmuxAndNotify(_ref4) {\n  var segment = _ref4.segment,\n      bytes = _ref4.bytes,\n      trackInfoFn = _ref4.trackInfoFn,\n      timingInfoFn = _ref4.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n      id3Fn = _ref4.id3Fn,\n      captionsFn = _ref4.captionsFn,\n      isEndOfTimeline = _ref4.isEndOfTimeline,\n      endedTimelineFn = _ref4.endedTimelineFn,\n      dataFn = _ref4.dataFn,\n      doneFn = _ref4.doneFn,\n      onTransmuxerLog = _ref4.onTransmuxerLog;\n  var fmp4Tracks = segment.map && segment.map.tracks || {};\n  var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n  var finish = function finish() {\n    return transmux({\n      bytes: bytes,\n      transmuxer: segment.transmuxer,\n      audioAppendStart: segment.audioAppendStart,\n      gopsToAlignWith: segment.gopsToAlignWith,\n      remux: isMuxed,\n      onData: function onData(result) {\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        dataFn(segment, result);\n      },\n      onTrackInfo: function onTrackInfo(trackInfo) {\n        if (trackInfoFn) {\n          if (isMuxed) {\n            trackInfo.isMuxed = true;\n          }\n\n          trackInfoFn(segment, trackInfo);\n        }\n      },\n      onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n        // we only want the first start value we encounter\n        if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n          audioStartFn(audioTimingInfo.start);\n          audioStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n          audioEndFn(audioTimingInfo.end);\n        }\n      },\n      onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n        // we only want the first start value we encounter\n        if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n          videoStartFn(videoTimingInfo.start);\n          videoStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n          videoEndFn(videoTimingInfo.end);\n        }\n      },\n      onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n        videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n      },\n      onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n        audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n      },\n      onId3: function onId3(id3Frames, dispatchType) {\n        id3Fn(segment, id3Frames, dispatchType);\n      },\n      onCaptions: function onCaptions(captions) {\n        captionsFn(segment, [captions]);\n      },\n      isEndOfTimeline: isEndOfTimeline,\n      onEndedTimeline: function onEndedTimeline() {\n        endedTimelineFn();\n      },\n      onTransmuxerLog: onTransmuxerLog,\n      onDone: function onDone(result) {\n        if (!doneFn) {\n          return;\n        }\n\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        doneFn(null, segment, result);\n      }\n    });\n  }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: function callback(data) {\n      segment.bytes = bytes = data.data;\n      var probeResult = data.result;\n\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed: isMuxed\n        });\n        trackInfoFn = null;\n\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n\n      finish();\n    }\n  });\n};\n\nvar handleSegmentBytes = function handleSegmentBytes(_ref5) {\n  var segment = _ref5.segment,\n      bytes = _ref5.bytes,\n      trackInfoFn = _ref5.trackInfoFn,\n      timingInfoFn = _ref5.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n      id3Fn = _ref5.id3Fn,\n      captionsFn = _ref5.captionsFn,\n      isEndOfTimeline = _ref5.isEndOfTimeline,\n      endedTimelineFn = _ref5.endedTimelineFn,\n      dataFn = _ref5.dataFn,\n      doneFn = _ref5.doneFn,\n      onTransmuxerLog = _ref5.onTransmuxerLog;\n  var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only blacklist a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    var tracks = segment.map.tracks;\n    var trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    var finishLoading = function finishLoading(captions) {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n\n      doneFn(null, segment, {});\n    };\n\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref6) {\n        var data = _ref6.data,\n            startTime = _ref6.startTime; // transfer bytes back to us\n\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: function callback(message) {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(videojs.mergeOptions(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n\n  transmuxAndNotify({\n    segment: segment,\n    bytes: bytes,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  });\n};\n\nvar decrypt = function decrypt(_ref7, callback) {\n  var id = _ref7.id,\n      key = _ref7.key,\n      encryptedBytes = _ref7.encryptedBytes,\n      decryptionWorker = _ref7.decryptionWorker;\n\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  var keyBytes;\n\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(_ref8) {\n  var decryptionWorker = _ref8.decryptionWorker,\n      segment = _ref8.segment,\n      trackInfoFn = _ref8.trackInfoFn,\n      timingInfoFn = _ref8.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n      id3Fn = _ref8.id3Fn,\n      captionsFn = _ref8.captionsFn,\n      isEndOfTimeline = _ref8.isEndOfTimeline,\n      endedTimelineFn = _ref8.endedTimelineFn,\n      dataFn = _ref8.dataFn,\n      doneFn = _ref8.doneFn,\n      onTransmuxerLog = _ref8.onTransmuxerLog;\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker: decryptionWorker\n  }, function (decryptedBytes) {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment: segment,\n      bytes: segment.bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(_ref9) {\n  var activeXhrs = _ref9.activeXhrs,\n      decryptionWorker = _ref9.decryptionWorker,\n      trackInfoFn = _ref9.trackInfoFn,\n      timingInfoFn = _ref9.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n      id3Fn = _ref9.id3Fn,\n      captionsFn = _ref9.captionsFn,\n      isEndOfTimeline = _ref9.isEndOfTimeline,\n      endedTimelineFn = _ref9.endedTimelineFn,\n      dataFn = _ref9.dataFn,\n      doneFn = _ref9.doneFn,\n      onTransmuxerLog = _ref9.onTransmuxerLog;\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      var segmentFinish = function segmentFinish() {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker: decryptionWorker,\n            segment: segment,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n\n        handleSegmentBytes({\n          segment: segment,\n          bytes: segment.bytes,\n          trackInfoFn: trackInfoFn,\n          timingInfoFn: timingInfoFn,\n          videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n          id3Fn: id3Fn,\n          captionsFn: captionsFn,\n          isEndOfTimeline: isEndOfTimeline,\n          endedTimelineFn: endedTimelineFn,\n          dataFn: dataFn,\n          doneFn: doneFn,\n          onTransmuxerLog: onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker: decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, function (decryptedBytes) {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, function (parseError) {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n\n            segmentFinish();\n          });\n        });\n      }\n\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\n\nvar handleLoadEnd = function handleLoadEnd(_ref10) {\n  var loadendState = _ref10.loadendState,\n      abortFn = _ref10.abortFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n      abortFn();\n      loadendState.calledAbortFn = true;\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(_ref11) {\n  var segment = _ref11.segment,\n      progressFn = _ref11.progressFn;\n  _ref11.trackInfoFn;\n  _ref11.timingInfoFn;\n  _ref11.videoSegmentTimingInfoFn;\n  _ref11.audioSegmentTimingInfoFn;\n  _ref11.id3Fn;\n  _ref11.captionsFn;\n  _ref11.isEndOfTimeline;\n  _ref11.endedTimelineFn;\n  _ref11.dataFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted) {\n      return;\n    }\n\n    segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n  var xhr = _ref12.xhr,\n      xhrOptions = _ref12.xhrOptions,\n      decryptionWorker = _ref12.decryptionWorker,\n      segment = _ref12.segment,\n      abortFn = _ref12.abortFn,\n      progressFn = _ref12.progressFn,\n      trackInfoFn = _ref12.trackInfoFn,\n      timingInfoFn = _ref12.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n      id3Fn = _ref12.id3Fn,\n      captionsFn = _ref12.captionsFn,\n      isEndOfTimeline = _ref12.isEndOfTimeline,\n      endedTimelineFn = _ref12.endedTimelineFn,\n      dataFn = _ref12.dataFn,\n      doneFn = _ref12.doneFn,\n      onTransmuxerLog = _ref12.onTransmuxerLog;\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion({\n    activeXhrs: activeXhrs,\n    decryptionWorker: decryptionWorker,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var objects = [segment.key];\n\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n\n    var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n    if (differentMapKey) {\n      var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n\n    var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn\n    });\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse({\n    segment: segment,\n    finishProcessingFn: finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment: segment,\n    progressFn: progressFn,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  var loadendState = {};\n  activeXhrs.forEach(function (activeXhr) {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState: loadendState,\n      abortFn: abortFn\n    }));\n  });\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n\nvar logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\n\nvar isMaat = function isMaat(master, media) {\n  var mediaAttributes = media.attributes || {};\n  return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\n\nvar isMuxed = function isMuxed(master, media) {\n  if (!isMaat(master, media)) {\n    return true;\n  }\n\n  var mediaAttributes = media.attributes || {};\n  var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n  for (var groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar unwrapCodecList = function unwrapCodecList(codecList) {\n  var codecs = {};\n  codecList.forEach(function (_ref) {\n    var mediaType = _ref.mediaType,\n        type = _ref.type,\n        details = _ref.details;\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n      codecs[mediaType] = null;\n      return;\n    }\n\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\n\nvar codecCount = function codecCount(codecObj) {\n  var count = 0;\n\n  if (codecObj.audio) {\n    count++;\n  }\n\n  if (codecObj.video) {\n    count++;\n  }\n\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\n\nvar codecsForPlaylist = function codecsForPlaylist(master, media) {\n  var mediaAttributes = media.attributes || {};\n  var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(master, media) && !codecInfo.audio) {\n    if (!isMuxed(master, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n\n  return codecInfo;\n};\n\nvar logFn = logger('PlaylistSelector');\n\nvar representationToString = function representationToString(representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n\n  var playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  if (!el) {\n    return '';\n  }\n\n  var result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth;\n  var rightBandwidth;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth;\n  var rightWidth;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} masterPlaylistController\n *        the current masterPlaylistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n  // If we end up getting called before `master` is available, exit early\n  if (!master) {\n    return;\n  }\n\n  var options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n  };\n  var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(master)) {\n    playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n  var sortedPlaylistReps = playlists.map(function (playlist) {\n    var bandwidth;\n    var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (_chosenRep && _chosenRep.playlist) {\n      var type = 'sortedPlaylistReps';\n\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n      return _chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList;\n  var resolutionPlusOneSmallest;\n  var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  var leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    var leastPixelDiffList = haveResolution.map(function (rep) {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, function (left, right) {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  if (chosenRep && chosenRep.playlist) {\n    var _type = 'sortedPlaylistReps';\n\n    if (leastPixelDiffRep) {\n      _type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      _type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      _type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      _type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      _type = 'enabledPlaylistReps';\n    }\n\n    logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n    return chosenRep.playlist;\n  }\n\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\n\nvar movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n  var average = -1;\n  var lastSystemBandwidth = -1;\n\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n\n  return function () {\n    var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n\n    return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  var _this = this; // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n\n\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\n\n\nvar concatSegments = function concatSegments(segmentObj) {\n  var offset = 0;\n  var tempBuffer;\n\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(function (segment) {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n\n  return tempBuffer;\n};\n/**\n * @file text-tracks.js\n */\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-608'\n    });\n    var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n\n    var track = tech.textTracks().getTrackById(instreamId);\n\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      var label = captionStream;\n      var language = captionStream;\n      var def = false;\n      var captionService = captionServices[instreamId];\n\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService[\"default\"];\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        \"default\": def,\n        label: label,\n        language: language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\n\nvar addMetadata = function addMetadata(_ref2) {\n  var inbandTextTracks = _ref2.inbandTextTracks,\n      metadataArray = _ref2.metadataArray,\n      timestampOffset = _ref2.timestampOffset,\n      videoDuration = _ref2.videoDuration;\n\n  if (!metadataArray) {\n    return;\n  }\n\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  var metadataTrack = inbandTextTracks.metadataTrack_;\n\n  if (!metadataTrack) {\n    return;\n  }\n\n  metadataArray.forEach(function (metadata) {\n    var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n\n    metadata.frames.forEach(function (frame) {\n      var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n\n  var cues = metadataTrack.cues;\n  var cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (var i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n\n  var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n    var timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n    return Number(a) - Number(b);\n  }); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach(function (startTime, idx) {\n    var cueGroup = cuesGroupedByStartTime[startTime];\n    var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(function (cue) {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\n\nvar createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i;\n  var cue;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\n\nvar removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n  var cues = track.cues;\n\n  if (!cues) {\n    return;\n  }\n\n  for (var i = 0; i < cues.length; i++) {\n    var duplicates = [];\n    var occurrences = 0;\n\n    for (var j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n\n    if (duplicates.length) {\n      duplicates.forEach(function (dupe) {\n        return track.removeCue(dupe);\n      });\n    }\n  }\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  var i;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  var endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar shallowEqual = function shallowEqual(a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n\n  var akeys = Object.keys(a).sort();\n  var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < akeys.length; i++) {\n    var key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\nvar QUOTA_EXCEEDED_ERR = 22;\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nvar getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  var timelineSegments = [];\n  var time = 0;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\n\nvar MIN_BACK_BUFFER = 1; // in ms\n\nvar CHECK_BUFFER_DELAY = 500;\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n}; // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\n\nvar MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n  var maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var startOfSegment = segmentInfo.startOfSegment,\n      duration = segmentInfo.duration,\n      segment = segmentInfo.segment,\n      part = segmentInfo.part,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      partIndex = segmentInfo.partIndex,\n      timeline = segmentInfo.timeline;\n  var segmentLen = segments.length - 1;\n  var selection = 'mediaIndex/partIndex increment';\n\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n\n  if (segmentInfo.independent) {\n    selection += \" with independent \" + segmentInfo.independent;\n  }\n\n  var hasPartIndex = typeof partIndex === 'number';\n  var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n};\n\nvar timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n  return mediaType + \"TimingInfo\";\n};\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\n\nvar timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n  var segmentTimeline = _ref.segmentTimeline,\n      currentTimeline = _ref.currentTimeline,\n      startOfSegment = _ref.startOfSegment,\n      buffered = _ref.buffered,\n      overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\n\nvar shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n  var timelineChangeController = _ref2.timelineChangeController,\n      currentTimeline = _ref2.currentTimeline,\n      segmentTimeline = _ref2.segmentTimeline,\n      loaderType = _ref2.loaderType,\n      audioDisabled = _ref2.audioDisabled;\n\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n\n  if (loaderType === 'audio') {\n    var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n\n  if (loaderType === 'main' && audioDisabled) {\n    var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nvar mediaDuration = function mediaDuration(timingInfos) {\n  var maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    var typeTimingInfo = timingInfos[type + \"TimingInfo\"];\n\n    if (!typeTimingInfo) {\n      return;\n    }\n\n    var start = typeTimingInfo.start,\n        end = typeTimingInfo.end;\n    var duration;\n\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n\n  return maxDuration;\n};\n\nvar segmentTooLong = function segmentTooLong(_ref3) {\n  var segmentDuration = _ref3.segmentDuration,\n      maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\n\nvar getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n\n  var segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n\n  var targetDuration = segmentInfo.playlist.targetDuration;\n  var isSegmentWayTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  var isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration\n  });\n  var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings, options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null;\n    _this.partIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.vhs_ = settings.vhs;\n    _this.loaderType_ = settings.loaderType;\n    _this.currentMediaInfo_ = void 0;\n    _this.startingMediaInfo_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.sourceUpdater_ = settings.sourceUpdater;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n    _this.timelineChangeController_ = settings.timelineChangeController;\n    _this.shouldSaveSegmentTimingInfo_ = true;\n    _this.parse708captions_ = settings.parse708captions;\n    _this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    _this.captionServices_ = settings.captionServices;\n    _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.xhrOptions_ = null;\n    _this.pendingSegments_ = [];\n    _this.audioDisabled_ = false;\n    _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    _this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    _this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    _this.loadQueue_ = [];\n    _this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    _this.waitingOnRemove_ = false;\n    _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {};\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    _this.transmuxer_ = _this.createTransmuxer_();\n\n    _this.triggerSyncInfoUpdate_ = function () {\n      return _this.trigger('syncinfoupdate');\n    };\n\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      if (!_this.isEndOfStream_()) {\n        _this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n    Object.defineProperty(_assertThisInitialized(_this), 'state', {\n      get: function get() {\n        return this.state_;\n      },\n      set: function set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + \" -> \" + newState);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n\n    _this.sourceUpdater_.on('ready', function () {\n      if (_this.hasEnoughInfoToAppend_()) {\n        _this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'main') {\n      _this.timelineChangeController_.on('pendingtimelinechange', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'audio') {\n      _this.timelineChangeController_.on('timelinechange', function () {\n        if (_this.hasEnoughInfoToLoad_()) {\n          _this.processLoadQueue_();\n        }\n\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = SegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetStats_ = function resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n\n    this.resetStats_();\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n\n    this.off();\n  };\n\n  _proto.setAudio = function setAudio(enable) {\n    this.audioDisabled_ = !enable;\n\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n  ;\n\n  _proto.abort = function abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n\n      return;\n    }\n\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n  ;\n\n  _proto.abort_ = function abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  };\n\n  _proto.checkForAbort_ = function checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n  ;\n\n  _proto.error = function error(_error) {\n    if (typeof _error !== 'undefined') {\n      this.logger_('error occurred:', _error);\n      this.error_ = _error;\n    }\n\n    this.pendingSegment_ = null;\n    return this.error_;\n  };\n\n  _proto.endOfStream = function endOfStream() {\n    this.ended_ = true;\n\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    var trackInfo = this.getMediaInfo_();\n\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return videojs.createTimeRanges();\n    }\n\n    if (this.loaderType_ === 'main') {\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n  ;\n\n  _proto.segmentKey = function segmentKey(key, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!key) {\n      return null;\n    }\n\n    var id = segmentKeyId(key);\n    var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n\n    var result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n  ;\n\n  _proto.load = function load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n  ;\n\n  _proto.playlist = function playlist(newPlaylist, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!newPlaylist) {\n      return;\n    }\n\n    var oldPlaylist = this.playlist_;\n    var segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n\n    var oldId = null;\n\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n\n    this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          var mediaIndex = this.mediaIndex;\n          this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n  ;\n\n  _proto.paused = function paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n  ;\n\n  _proto.resetEverything = function resetEverything(done) {\n    this.ended_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n  ;\n\n  _proto.resetLoader = function resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n  ;\n\n  _proto.resyncLoader = function resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n  ;\n\n  _proto.remove = function remove(start, end, done, force) {\n    if (done === void 0) {\n      done = function done() {};\n    }\n\n    if (force === void 0) {\n      force = false;\n    } // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n\n\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n\n    var removesRemaining = 1;\n\n    var removeFinished = function removeFinished() {\n      removesRemaining--;\n\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n\n    for (var track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBuffer_ = function monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBufferTick_ = function monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n  ;\n\n  _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n    if (mediaIndex === void 0) {\n      mediaIndex = this.mediaIndex;\n    }\n\n    if (playlist === void 0) {\n      playlist = this.playlist_;\n    }\n\n    if (partIndex === void 0) {\n      partIndex = this.partIndex;\n    }\n\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n\n    var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n  ;\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    var buffered = this.buffered_();\n    var bufferedEnd = lastBufferedEnd(buffered) || 0;\n    var bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    var segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    var next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      var segment = segments[this.mediaIndex];\n      var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n        experimentalExactManifestTimings: this.experimentalExactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      }),\n          segmentIndex = _Playlist$getMediaInf.segmentIndex,\n          startTime = _Playlist$getMediaInf.startTime,\n          _partIndex = _Playlist$getMediaInf.partIndex;\n\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = _partIndex;\n    }\n\n    var nextSegment = segments[next.mediaIndex];\n    var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        var lastSegment = segments[next.mediaIndex - 1];\n        var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n\n    var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n\n    return this.generateSegmentInfo_(next);\n  };\n\n  _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n    var independent = options.independent,\n        playlist = options.playlist,\n        mediaIndex = options.mediaIndex,\n        startOfSegment = options.startOfSegment,\n        isSyncRequest = options.isSyncRequest,\n        partIndex = options.partIndex,\n        forceTimestampOffset = options.forceTimestampOffset,\n        getMediaInfoForTime = options.getMediaInfoForTime;\n    var segment = playlist.segments[mediaIndex];\n    var part = typeof partIndex === 'number' && segment.parts[partIndex];\n    var segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex: mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest: isSyncRequest,\n      startOfSegment: startOfSegment,\n      // the segment's playlist\n      playlist: playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment: segment,\n      part: part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime: getMediaInfoForTime,\n      independent: independent\n    };\n    var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment: startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck: overrideCheck\n    });\n    var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n  ;\n\n  _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n\n    var currentTime = this.currentTime_();\n    var measuredBandwidth = stats.bandwidth;\n    var segmentDuration = this.pendingSegment_.duration;\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n\n    var switchCandidate = minRebufferMaxBandwidthSelector({\n      master: this.vhs_.playlists.master,\n      currentTime: currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration: segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n\n    if (!switchCandidate) {\n      return;\n    }\n\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  };\n\n  _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n    this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n  ;\n\n  _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    this.trigger('progress');\n  };\n\n  _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n    var _this2 = this;\n\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    var captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(function (caption) {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      var captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(function (trackName) {\n      var _captionTracks$trackN = captionTracks[trackName],\n          startTime = _captionTracks$trackN.startTime,\n          endTime = _captionTracks$trackN.endTime,\n          captions = _captionTracks$trackN.captions;\n      var inbandTextTracks = _this2.inbandTextTracks_;\n\n      _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n      createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks: inbandTextTracks,\n        timestampOffset: timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  };\n\n  _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset: timestampOffset,\n      videoDuration: this.duration_()\n    });\n  };\n\n  _proto.processMetadataQueue_ = function processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.caption.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  };\n\n  _proto.processCallQueue_ = function processCallQueue_() {\n    var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(function (fun) {\n      return fun();\n    });\n  };\n\n  _proto.processLoadQueue_ = function processLoadQueue_() {\n    var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(function (fun) {\n      return fun();\n    });\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n  ;\n\n  _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n\n    var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n\n    if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  };\n\n  _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  };\n\n  _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.handleData_ = function handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      var trackInfo = this.getCurrentMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var firstVideoFrameTimeForData;\n\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo: useVideoTimingInfo,\n        firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  };\n\n  _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  };\n\n  _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n    var type = _ref4.type,\n        initSegment = _ref4.initSegment,\n        map = _ref4.map,\n        playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n    if (map) {\n      var id = initSegmentId(map);\n\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n\n    return null;\n  };\n\n  _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n    var _this3 = this;\n\n    var segmentInfo = _ref5.segmentInfo,\n        type = _ref5.type,\n        bytes = _ref5.bytes;\n    var audioBuffered = this.sourceUpdater_.audioBuffered();\n    var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n\n    var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n    var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n    this.remove(0, timeToRemoveUntil, function () {\n      _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n      _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      _this3.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(function () {\n        _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n        _this3.quotaExceededErrorRetryTimeout_ = null;\n\n        _this3.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  };\n\n  _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n    var segmentInfo = _ref6.segmentInfo,\n        type = _ref6.type,\n        bytes = _ref6.bytes; // if there's no error, nothing to do\n\n    if (!error) {\n      return;\n    }\n\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  };\n\n  _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n    var segmentInfo = _ref7.segmentInfo,\n        type = _ref7.type,\n        initSegment = _ref7.initSegment,\n        data = _ref7.data,\n        bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n    if (!bytes) {\n      var segments = [data];\n      var byteLength = data.byteLength;\n\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments: segments\n      });\n    }\n\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n  };\n\n  _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n\n    var segment = this.pendingSegment_.segment;\n    var timingInfoProperty = type + \"TimingInfo\";\n\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  };\n\n  _proto.appendData_ = function appendData_(segmentInfo, result) {\n    var type = result.type,\n        data = result.data;\n\n    if (!data || !data.byteLength) {\n      return;\n    }\n\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n\n    var initSegment = this.getInitSegmentAndUpdateState_({\n      type: type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo: segmentInfo,\n      type: type,\n      initSegment: initSegment,\n      data: data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n    var _this4 = this;\n\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(function () {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        var options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n\n        _extends(segmentInfo, _this4.generateSegmentInfo_(options));\n\n        _this4.isPendingTimestampOffset_ = false;\n\n        _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  };\n\n  _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n    var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n\n    var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    var isWalkingForward = this.mediaIndex !== null;\n    var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: function endedTimelineFn() {\n        _this5.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: function onTransmuxerLog(_ref8) {\n        var message = _ref8.message,\n            level = _ref8.level,\n            stream = _ref8.stream;\n\n        _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n  ;\n\n  _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n  ;\n\n  _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n\n    return simpleSegment;\n  };\n\n  _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  };\n\n  _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  };\n\n  _proto.handleTimeout_ = function handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to blacklist the current playlist\n\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  };\n\n  _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n    var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  };\n\n  _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  };\n\n  _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n    var currentStart = _ref9.currentStart,\n        playlist = _ref9.playlist,\n        mediaIndex = _ref9.mediaIndex,\n        firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n        currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n        useVideoTimingInfo = _ref9.useVideoTimingInfo,\n        videoTimingInfo = _ref9.videoTimingInfo,\n        audioTimingInfo = _ref9.audioTimingInfo;\n\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n\n    var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n\n    return videoTimingInfo.start;\n  };\n\n  _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n    var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n    var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  };\n\n  _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n\n    segmentInfo.waitingOnAppends--;\n\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  };\n\n  _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n\n    var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  };\n\n  _proto.getSegmentStartTimeForTimestampOffsetCalculation_ = function getSegmentStartTimeForTimestampOffsetCalculation_(_ref10) {\n    var videoTimingInfo = _ref10.videoTimingInfo,\n        audioTimingInfo = _ref10.audioTimingInfo,\n        timingInfo = _ref10.timingInfo;\n\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n\n    return timingInfo.start;\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    var trackInfo = this.getMediaInfo_();\n    var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleAppendsDone_ = function handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n\n    var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n        return;\n      }\n    }\n\n    this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\n      this.resetEverything();\n      return;\n    }\n\n    var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n\n    this.trigger('appended');\n\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n  ;\n\n  _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n  ;\n\n  _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n\n    var segment = segmentInfo.segment;\n    var start = segment.start;\n    var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    var value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start: start,\n      end: end\n    };\n    var data = JSON.stringify(value);\n    var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  };\n\n  return SegmentLoader;\n}(videojs.EventTarget);\n\nfunction noop() {}\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n\nvar bufferTypes = ['video', 'audio'];\n\nvar _updating = function updating(type, sourceUpdater) {\n  var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\n\nvar nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n  for (var i = 0; i < queue.length; i++) {\n    var queueEntry = queue[i];\n\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\nvar shiftQueue = function shiftQueue(type, sourceUpdater) {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n\n  var queueIndex = 0;\n  var queueEntry = sourceUpdater.queue[queueIndex];\n\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n\n    return;\n  }\n\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n    return;\n  }\n\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\n\nvar cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n  var buffer = sourceUpdater[type + \"Buffer\"];\n  var titleType = toTitleCase(type);\n\n  if (!buffer) {\n    return;\n  }\n\n  buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n  buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[type + \"Buffer\"] = null;\n};\n\nvar inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n  return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n};\n\nvar actions = {\n  appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.appendBuffer(bytes);\n      } catch (e) {\n        sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n        sourceUpdater.queuePending[type] = null;\n        onError(e);\n      }\n    };\n  },\n  remove: function remove(start, end) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.remove(start, end);\n      } catch (e) {\n        sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n      }\n    };\n  },\n  timestampOffset: function timestampOffset(offset) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n      sourceBuffer.timestampOffset = offset;\n    };\n  },\n  callback: function callback(_callback) {\n    return function (type, sourceUpdater) {\n      _callback();\n    };\n  },\n  endOfStream: function endOfStream(error) {\n    return function (sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n      try {\n        sourceUpdater.mediaSource.endOfStream(error);\n      } catch (e) {\n        videojs.log.warn('Failed to call media source endOfStream', e);\n      }\n    };\n  },\n  duration: function duration(_duration) {\n    return function (sourceUpdater) {\n      sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n      try {\n        sourceUpdater.mediaSource.duration = _duration;\n      } catch (e) {\n        videojs.log.warn('Failed to set media source duration', e);\n      }\n    };\n  },\n  abort: function abort() {\n    return function (type, sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.abort();\n      } catch (e) {\n        videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  addSourceBuffer: function addSourceBuffer(type, codec) {\n    return function (sourceUpdater) {\n      var titleType = toTitleCase(type);\n      var mime = getMimeForCodec(codec);\n      sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n      var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n      sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n      sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n      sourceUpdater.codecs[type] = codec;\n      sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n    };\n  },\n  removeSourceBuffer: function removeSourceBuffer(type) {\n    return function (sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n      try {\n        sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n      } catch (e) {\n        videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  changeType: function changeType(codec) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      } // do not update codec if we don't need to.\n\n\n      if (sourceUpdater.codecs[type] === codec) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    };\n  }\n};\n\nvar pushQueue = function pushQueue(_ref) {\n  var type = _ref.type,\n      sourceUpdater = _ref.sourceUpdater,\n      action = _ref.action,\n      doneFn = _ref.doneFn,\n      name = _ref.name;\n  sourceUpdater.queue.push({\n    type: type,\n    action: action,\n    doneFn: doneFn,\n    name: name\n  });\n  shiftQueue(type, sourceUpdater);\n};\n\nvar onUpdateend = function onUpdateend(type, sourceUpdater) {\n  return function (e) {\n    // Although there should, in theory, be a pending action for any updateend receieved,\n    // there are some actions that may trigger updateend events without set definitions in\n    // the w3c spec. For instance, setting the duration on the media source may trigger\n    // updateend events on source buffers. This does not appear to be in the spec. As such,\n    // if we encounter an updateend without a corresponding pending action from our queue\n    // for that source buffer type, process the next action.\n    if (sourceUpdater.queuePending[type]) {\n      var doneFn = sourceUpdater.queuePending[type].doneFn;\n      sourceUpdater.queuePending[type] = null;\n\n      if (doneFn) {\n        // if there's an error, report it\n        doneFn(sourceUpdater[type + \"Error_\"]);\n      }\n    }\n\n    shiftQueue(type, sourceUpdater);\n  };\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\n\nvar SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n  function SourceUpdater(mediaSource) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.mediaSource = mediaSource;\n\n    _this.sourceopenListener_ = function () {\n      return shiftQueue('mediaSource', _assertThisInitialized(_this));\n    };\n\n    _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n    _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    _this.audioTimestampOffset_ = 0;\n    _this.videoTimestampOffset_ = 0;\n    _this.queue = [];\n    _this.queuePending = {\n      audio: null,\n      video: null\n    };\n    _this.delayedAudioAppendQueue_ = [];\n    _this.videoAppendQueued_ = false;\n    _this.codecs = {};\n    _this.onVideoUpdateEnd_ = onUpdateend('video', _assertThisInitialized(_this));\n    _this.onAudioUpdateEnd_ = onUpdateend('audio', _assertThisInitialized(_this));\n\n    _this.onVideoError_ = function (e) {\n      // used for debugging\n      _this.videoError_ = e;\n    };\n\n    _this.onAudioError_ = function (e) {\n      // used for debugging\n      _this.audioError_ = e;\n    };\n\n    _this.createdSourceBuffers_ = false;\n    _this.initializedEme_ = false;\n    _this.triggeredReady_ = false;\n    return _this;\n  }\n\n  var _proto = SourceUpdater.prototype;\n\n  _proto.initializedEme = function initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  };\n\n  _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  };\n\n  _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n    return this.initializedEme_;\n  };\n\n  _proto.ready = function ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  };\n\n  _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  };\n\n  _proto.triggerReady = function triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n  ;\n\n  _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n  ;\n\n  _proto.abort = function abort(type) {\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n  ;\n\n  _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n  ;\n\n  _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  SourceUpdater.canChangeType = function canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  _proto.canChangeType = function canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n  ;\n\n  _proto.changeType = function changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n  ;\n\n  _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n    var _this2 = this;\n\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n\n    Object.keys(codecs).forEach(function (type) {\n      var codec = codecs[type];\n\n      if (!_this2.hasCreatedSourceBuffers()) {\n        return _this2.addSourceBuffer(type, codec);\n      }\n\n      if (_this2.canChangeType()) {\n        _this2.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n  ;\n\n  _proto.appendBuffer = function appendBuffer(options, doneFn) {\n    var _this3 = this;\n\n    var segmentInfo = options.segmentInfo,\n        type = options.type,\n        bytes = options.bytes;\n    this.processedAppend_ = true;\n\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n\n    var onError = doneFn;\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn: doneFn,\n      name: 'appendBuffer'\n    });\n\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n\n      var queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(function (que) {\n        _this3.appendBuffer.apply(_this3, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n  ;\n\n  _proto.audioBuffered = function audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n  ;\n\n  _proto.videoBuffered = function videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n  ;\n\n  _proto.setDuration = function setDuration(duration, doneFn) {\n    if (doneFn === void 0) {\n      doneFn = noop;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n  ;\n\n  _proto.endOfStream = function endOfStream(error, doneFn) {\n    if (error === void 0) {\n      error = null;\n    }\n\n    if (doneFn === void 0) {\n      doneFn = noop;\n    }\n\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeAudio = function removeAudio(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeVideo = function removeVideo(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n  ;\n\n  _proto.updating = function updating() {\n    // the audio/video source buffer is updating\n    if (_updating('audio', this) || _updating('video', this)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.audioQueueCallback = function audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.videoQueueCallback = function videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this4 = this;\n\n    this.trigger('dispose');\n    bufferTypes.forEach(function (type) {\n      _this4.abort(type);\n\n      if (_this4.canRemoveSourceBuffer()) {\n        _this4.removeSourceBuffer(type);\n      } else {\n        _this4[type + \"QueueCallback\"](function () {\n          return cleanupBuffer(type, _this4);\n        });\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n\n    this.off();\n  };\n\n  return SourceUpdater;\n}(videojs.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n  return _char3.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n  _inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    _this.loaderType_ = 'subtitle';\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    _this.shouldSaveSegmentTimingInfo_ = false;\n    return _this;\n  }\n\n  var _proto = VTTSegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return videojs.createTimeRanges();\n    }\n\n    var cues = this.subtitlesTrack_.cues;\n    var start = cues[0].startTime;\n    var end = cues[cues.length - 1].startTime;\n    return videojs.createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      var combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n  ;\n\n  _proto.track = function track(_track) {\n    if (typeof _track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n\n    this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n  ;\n\n  _proto.remove = function remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    var _this2 = this; // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      var checkTimestampOffset = function checkTimestampOffset() {\n        _this2.state = 'READY';\n\n        if (!_this2.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          _this2.monitorBuffer_();\n        }\n      };\n\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n    return null;\n  };\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n  ;\n\n  _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n\n    return segmentInfo;\n  };\n\n  _proto.stopForError = function stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    var _this3 = this;\n\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n\n      this.stopForError(error);\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    var segment = segmentInfo.segment;\n\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n      var loadHandler;\n\n      var errorHandler = function errorHandler() {\n        _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n        _this3.stopForError({\n          message: 'Error loading vtt.js'\n        });\n\n        return;\n      };\n\n      loadHandler = function loadHandler() {\n        _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n        _this3.segmentRequestFinished_(error, simpleSegment, result);\n      };\n\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n      return;\n    }\n\n    segment.requested = true;\n\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(function (cue) {\n      _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  };\n\n  _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n  ;\n\n  _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n    var decoder;\n    var decodeBytesToString = false;\n\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n    parser.ontimestampmap = function (map) {\n      segmentInfo.timestampmap = map;\n    };\n\n    parser.onparsingerror = function (error) {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n\n    if (segmentInfo.segment.map) {\n      var mapData = segmentInfo.segment.map.bytes;\n\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n\n      parser.parse(mapData);\n    }\n\n    var segmentData = segmentInfo.bytes;\n\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n  ;\n\n  _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    var segment = segmentInfo.segment;\n\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n\n    var timestampmap = segmentInfo.timestampmap;\n    var diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(function (cue) {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n\n    if (!playlist.syncInfo) {\n      var firstStart = segmentInfo.cues[0].startTime;\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  };\n\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n            adOffset = _segment$cueOutCont$s[0],\n            adTotal = _segment$cueOutCont$s[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n}; // synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\n\nvar MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (duration !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n\n    var syncPoint = null;\n    var lastDistance = null;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n\n      var segmentTime = segment.dateTimeObject.getTime() / 1000;\n      var start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (var z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n\n      var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n    var partsAndSegments = getPartsAndSegments(playlist);\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SyncController, _videojs$EventTarget);\n\n  function SyncController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.timelineToDatetimeMappings = {};\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n\n  var _proto = SyncController.prototype;\n\n  _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n  ;\n\n  _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n  ;\n\n  _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (var i = 0; i < syncPointStrategies.length; i++) {\n      var strategy = syncPointStrategies[i];\n      var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint: syncPoint\n        });\n      }\n    }\n\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n  ;\n\n  _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n    var bestSyncPoint = syncPoints[0].syncPoint;\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    var bestStrategy = syncPoints[0].strategy;\n\n    for (var i = 1; i < syncPoints.length; i++) {\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n\n    this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n  ;\n\n  _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n      var lastRemovedSegment = oldPlaylist.segments[i];\n\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n  ;\n\n  _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      var firstSegment = playlist.segments[0];\n      var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n  ;\n\n  _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n    var segmentInfo = _ref.segmentInfo,\n        shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n    var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    var segment = segmentInfo.segment;\n\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n\n    var dateTime = segment.dateTimeObject;\n\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  };\n\n  _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].time;\n  };\n\n  _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n  ;\n\n  _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var mappingObj = this.timelines[segmentInfo.timeline];\n    var start;\n    var end;\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n      }\n\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n  ;\n\n  _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n    var playlist = segmentInfo.playlist;\n    var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        var accuracy = Math.abs(mediaIndexDiff);\n\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          var time = void 0;\n\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n\n          this.discontinuities[discontinuity] = {\n            time: time,\n            accuracy: accuracy\n          };\n        }\n      }\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.off();\n  };\n\n  return SyncController;\n}(videojs.EventTarget);\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\n\nvar TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n  function TimelineChangeController() {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.pendingTimelineChanges_ = {};\n    _this.lastTimelineChanges_ = {};\n    return _this;\n  }\n\n  var _proto = TimelineChangeController.prototype;\n\n  _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  };\n\n  _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n    var type = _ref.type,\n        from = _ref.from,\n        to = _ref.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n\n    return this.pendingTimelineChanges_[type];\n  };\n\n  _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n    var type = _ref2.type,\n        from = _ref2.from,\n        to = _ref2.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n\n    return this.lastTimelineChanges_[type];\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  };\n\n  return TimelineChangeController;\n}(videojs.EventTarget);\n/* rollup-plugin-worker-factory start for worker!/Users/bclifford/Code/vhs-release-test/src/decrypter-worker.js */\n\n\nvar workerCode = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, basedir, module) {\n    return module = {\n      path: basedir,\n      exports: {},\n      require: function require(path, base) {\n        return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n      }\n    }, fn(module, module.exports), module.exports;\n  }\n\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  }\n\n  var createClass = createCommonjsModule(function (module) {\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    module.exports = _createClass;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var inheritsLoose = createCommonjsModule(function (module) {\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      setPrototypeOf(subClass, superClass);\n    }\n\n    module.exports = _inheritsLoose;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 3.1.3 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n\n  var precompute = function precompute() {\n    var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    var encTable = tables[0];\n    var decTable = tables[1];\n    var sbox = encTable[4];\n    var sboxInv = decTable[4];\n    var i;\n    var x;\n    var xInv;\n    var d = [];\n    var th = [];\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n\n    return tables;\n  };\n\n  var aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  var AES = /*#__PURE__*/function () {\n    function AES(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      var i;\n      var j;\n      var tmp;\n      var sbox = this._tables[0][4];\n      var decTable = this._tables[1];\n      var keyLen = key.length;\n      var rcon = 1;\n\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n\n      var encKey = key.slice(0);\n      var decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n\n    var _proto = AES.prototype;\n\n    _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2;\n      var b2;\n      var c2; // key.length === 2 ?\n\n      var nInnerRounds = key.length / 4 - 2;\n      var i;\n      var kIndex = 4;\n      var table = this._tables[1]; // load up the tables\n\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    };\n\n    return AES;\n  }();\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n\n  var AsyncStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(AsyncStream, _Stream);\n\n    function AsyncStream() {\n      var _this;\n\n      _this = _Stream.call(this, Stream) || this;\n      _this.jobs = [];\n      _this.delay = 1;\n      _this.timeout_ = null;\n      return _this;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n\n    var _proto = AsyncStream.prototype;\n\n    _proto.processJob_ = function processJob_() {\n      this.jobs.shift()();\n\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n    ;\n\n    _proto.push = function push(job) {\n      this.jobs.push(job);\n\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    };\n\n    return AsyncStream;\n  }(Stream);\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n\n  var ntoh = function ntoh(word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n\n  var decrypt = function decrypt(encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    var init0;\n    var init1;\n    var init2;\n    var init3;\n    var encrypted0;\n    var encrypted1;\n    var encrypted2;\n    var encrypted3; // iteration variable\n\n    var wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n\n  var Decrypter = /*#__PURE__*/function () {\n    function Decrypter(encrypted, key, initVector, done) {\n      var step = Decrypter.STEP;\n      var encrypted32 = new Int32Array(encrypted.buffer);\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n\n    var _proto = Decrypter.prototype;\n    /**\n     * @private\n     */\n\n    _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    };\n\n    createClass(Decrypter, null, [{\n      key: \"STEP\",\n      get: function get() {\n        // 4 * 8000;\n        return 32000;\n      }\n    }]);\n    return Decrypter;\n  }();\n\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n\n  self.onmessage = function (event) {\n    var data = event.data;\n    var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/bclifford/Code/vhs-release-test/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n    if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup || activeGroup.isMasterPlaylist) {\n      // there is no group active or active group is a main playlist and won't change\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onGroupChanging = function onGroupChanging(type, settings) {\n  return function () {\n    var segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    mediaType.lastGroup_ = null;\n    segmentLoader.abort();\n    segmentLoader.pause();\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n    if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (activeGroup.isMasterPlaylist) {\n      // track did not change, do nothing\n      if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n        return;\n      }\n\n      var mpc = settings.vhs.masterPlaylistController_;\n      var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n      if (mpc.media() === newPlaylist) {\n        return;\n      }\n\n      mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n      masterPlaylistLoader.pause();\n      mainSegmentLoader.resetEverything();\n      mpc.fastQualityChange_(newPlaylist);\n      return;\n    }\n\n    if (type === 'AUDIO') {\n      if (!activeGroup.playlistLoader) {\n        // when switching from demuxed audio/video to muxed audio/video (noted by no\n        // playlist loader for the audio group), we want to do a destructive reset of the\n        // main segment loader and not restart the audio loaders\n        mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n        // it should be stopped\n\n        mainSegmentLoader.resetEverything();\n        return;\n      } // although the segment loader is an audio segment loader, call the setAudio\n      // function to ensure it is prepared to re-append the init segment (or handle other\n      // config changes)\n\n\n      segmentLoader.setAudio(true);\n      mainSegmentLoader.setAudio(false);\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        logger_ = _settings$mediaTypes$.logger_,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n    var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n\n      if (audioOnlyMaster) {\n        mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n      }\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (audioOnlyMaster) {\n          logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n          properties.isMasterPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          var playlists = properties.playlists.filter(function (p) {\n            return p.excludeUntil !== Infinity;\n          });\n\n          if (!playlists.length) {\n            return;\n          }\n\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          \"default\": properties[\"default\"] && properties.autoselect\n        };\n\n        if (captionServices[newProps.instreamId]) {\n          newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n        }\n\n        if (newProps[\"default\"] === undefined) {\n          delete newProps[\"default\"];\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            \"default\": newProps[\"default\"],\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\nvar groupMatch = function groupMatch(list, media) {\n  for (var i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null; // set to variants to main media active group\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    var groupKeys = Object.keys(groups);\n\n    if (!variants) {\n      // find the masterPlaylistLoader media\n      // that is in a media group if we are dealing\n      // with audio only\n      if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n        for (var i = 0; i < groupKeys.length; i++) {\n          var groupPropertyList = groups[groupKeys[i]];\n\n          if (groupMatch(groupPropertyList, media)) {\n            variants = groupPropertyList;\n            break;\n          }\n        } // use the main group if it exists\n\n      } else if (groups.main) {\n        variants = groups.main; // only one group, use that one\n      } else if (groupKeys.length === 1) {\n        variants = groups[groupKeys[0]];\n      }\n    }\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null || !variants) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\nvar getActiveGroup = function getActiveGroup(type, _ref) {\n  var mediaTypes = _ref.mediaTypes;\n  return function () {\n    var activeTrack_ = mediaTypes[type].activeTrack();\n\n    if (!activeTrack_) {\n      return null;\n    }\n\n    return mediaTypes[type].activeGroup(activeTrack_);\n  };\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      vhs = settings.vhs,\n      _settings$segmentLoad3 = settings.segmentLoaders,\n      audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n      mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n  if (audioGroup) {\n    var groupId = (audioGroup.filter(function (group) {\n      return group[\"default\"];\n    })[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n  masterPlaylistLoader.on('mediachanging', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanging();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(\"MediaGroups[\" + type + \"]\")\n    };\n  });\n  return mediaTypes;\n};\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n  var currentPlaylist = _ref.currentPlaylist,\n      buffered = _ref.buffered,\n      currentTime = _ref.currentTime,\n      nextPlaylist = _ref.nextPlaylist,\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\n      bufferHighWaterLine = _ref.bufferHighWaterLine,\n      duration = _ref.duration,\n      experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n      log = _ref.log; // we have no other playlist to switch to\n\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n\n  var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\n\n  if (!currentPlaylist) {\n    log(sharedLogLine + \" as current playlist is not set\");\n    return true;\n  } // no need to switch if playlist is the same\n\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n\n  var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\n      return false;\n    }\n\n    log(sharedLogLine + \" as current playlist is live\");\n    return true;\n  }\n\n  var forwardBuffer = timeAheadOf(buffered, currentTime);\n  var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n    return true;\n  }\n\n  var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n    if (experimentalBufferBasedABR) {\n      logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n    }\n\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n\n  if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n    if (experimentalBufferBasedABR) {\n      _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n    }\n\n    log(_logLine);\n    return true;\n  }\n\n  log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n  return false;\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    var src = options.src,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externVhs = options.externVhs,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\n        experimentalBufferBasedABR = options.experimentalBufferBasedABR,\n        experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\n        captionServices = options.captionServices;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n\n    var maxPlaylistRetries = options.maxPlaylistRetries;\n\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n\n    Vhs$1 = externVhs;\n    _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n    _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.vhs_ = tech.vhs;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.maxPlaylistRetries = maxPlaylistRetries;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      maxPlaylistRetries: maxPlaylistRetries,\n      timeout: null\n    };\n\n    _this.on('error', _this.pauseLoading);\n\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new window$1.MediaSource();\n    _this.handleDurationChange_ = _this.handleDurationChange_.bind(_assertThisInitialized(_this));\n    _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(_assertThisInitialized(_this));\n    _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(_assertThisInitialized(_this));\n\n    _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n    _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n\n    _this.seekable_ = videojs.createTimeRanges();\n    _this.hasPlayed_ = false;\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter();\n    _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n    _this.inbandTextTracks_ = {};\n    _this.timelineChangeController_ = new TimelineChangeController();\n    var segmentLoaderSettings = {\n      vhs: _this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices: captionServices,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this.duration();\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_;\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys,\n      sourceUpdater: _this.sourceUpdater_,\n      timelineChangeController: _this.timelineChangeController_,\n      experimentalExactManifestTimings: options.experimentalExactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    if (_this.experimentalBufferBasedABR) {\n      _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n        return _this.startABRTimer_();\n      });\n\n      _this.tech_.on('pause', function () {\n        return _this.stopABRTimer_();\n      });\n\n      _this.tech_.on('play', function () {\n        return _this.startABRTimer_();\n      });\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_assertThisInitialized(_this), stat);\n    });\n    _this.logger_ = logger('MPC');\n    _this.triggeredFmp4Usage = false;\n\n    if (_this.tech_.preload() === 'none') {\n      _this.loadOnPlay_ = function () {\n        _this.loadOnPlay_ = null;\n\n        _this.masterPlaylistLoader_.load();\n      };\n\n      _this.tech_.one('play', _this.loadOnPlay_);\n    } else {\n      _this.masterPlaylistLoader_.load();\n    }\n\n    _this.timeToLoadedData__ = -1;\n    _this.mainAppendsToLoadedData__ = -1;\n    _this.audioAppendsToLoadedData__ = -1;\n    var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    _this.tech_.one(event, function () {\n      var timeToLoadedDataStart = Date.now();\n\n      _this.tech_.one('loadeddata', function () {\n        _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n        _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = MasterPlaylistController.prototype;\n\n  _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  };\n\n  _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  };\n\n  _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n    var main = this.mainAppendsToLoadedData_();\n    var audio = this.audioAppendsToLoadedData_();\n\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n\n    return main + audio;\n  };\n\n  _proto.timeToLoadedData_ = function timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @private\n   *\n   */\n  ;\n\n  _proto.checkABR_ = function checkABR_() {\n    var nextPlaylist = this.selectPlaylist();\n\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, 'abr');\n    }\n  };\n\n  _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n    var oldMedia = this.media();\n    var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    var newId = playlist.id || playlist.uri;\n\n    if (oldId && oldId !== newId) {\n      this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-rendition-change-\" + cause\n      });\n    }\n\n    this.masterPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.startABRTimer_ = function startABRTimer_() {\n    var _this2 = this;\n\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(function () {\n      return _this2.checkABR_();\n    }, 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.stopABRTimer_ = function stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n  ;\n\n  _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n    var master = this.master();\n    var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in masters\n    // playlist array, use that or an empty array.\n\n    if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n\n    var AUDIO = master.mediaGroups.AUDIO;\n    var groupKeys = Object.keys(AUDIO);\n    var track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n      for (var label in defaultGroup) {\n        if (defaultGroup[label][\"default\"]) {\n          track = {\n            label: label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n\n    var playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (var group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        var properties = AUDIO[group][track.label];\n\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (master.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (var i = 0; i < master.playlists.length; i++) {\n            var playlist = master.playlists[i];\n\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n\n    return playlists;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n    var _this3 = this;\n\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n\n      if (media.endList && _this3.tech_.preload() !== 'none') {\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n      }\n\n      setupMediaGroups({\n        sourceType: _this3.sourceType_,\n        segmentLoaders: {\n          AUDIO: _this3.audioSegmentLoader_,\n          SUBTITLES: _this3.subtitleSegmentLoader_,\n          main: _this3.mainSegmentLoader_\n        },\n        tech: _this3.tech_,\n        requestOptions: _this3.requestOptions_,\n        masterPlaylistLoader: _this3.masterPlaylistLoader_,\n        vhs: _this3.vhs_,\n        master: _this3.master(),\n        mediaTypes: _this3.mediaTypes_,\n        blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n      });\n\n      _this3.triggerPresenceUsage_(_this3.master(), media);\n\n      _this3.setupFirstPlay();\n\n      if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        _this3.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n          _this3.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\n      if (_this3.loadOnPlay_) {\n        _this3.tech_.off('play', _this3.loadOnPlay_);\n      }\n\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        _this3.excludeUnsupportedVariants_();\n\n        var selectedMedia;\n\n        if (_this3.enableLowInitialPlaylist) {\n          selectedMedia = _this3.selectInitialPlaylist();\n        }\n\n        if (!selectedMedia) {\n          selectedMedia = _this3.selectPlaylist();\n        }\n\n        if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n\n        _this3.initialMedia_ = selectedMedia;\n\n        _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n\n        var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n        if (!haveJsonSource) {\n          return;\n        }\n\n        updatedPlaylist = _this3.initialMedia_;\n      }\n\n      _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.masterPlaylistLoader_.on('error', function () {\n      _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n    });\n    this.masterPlaylistLoader_.on('mediachanging', function () {\n      _this3.mainSegmentLoader_.abort();\n\n      _this3.mainSegmentLoader_.pause();\n    });\n    this.masterPlaylistLoader_.on('mediachange', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n\n      _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n      _this3.mainSegmentLoader_.load();\n\n      _this3.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n\n      var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // blacklist it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        _this3.blacklistCurrentPlaylist({\n          message: 'Playlist no longer updating.',\n          reason: 'playlist-unchanged'\n        }); // useful for monitoring QoS\n\n\n        _this3.tech_.trigger('playliststuck');\n      }\n    });\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-disabled'\n      });\n    });\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n  ;\n\n  _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n    var mediaGroups = master.mediaGroups || {};\n    var defaultDemuxed = true;\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n    for (var mediaGroup in mediaGroups.AUDIO) {\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-demuxed'\n      });\n    }\n\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-webvtt'\n      });\n    }\n\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-aes'\n      });\n    }\n\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-alternate-audio'\n      });\n    }\n\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-playlist-cue-tags'\n      });\n    }\n  };\n\n  _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n    var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\n    var currentTime = this.tech_.currentTime();\n    var bufferLowWaterLine = this.bufferLowWaterLine();\n    var bufferHighWaterLine = this.bufferHighWaterLine();\n    var buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered: buffered,\n      currentTime: currentTime,\n      currentPlaylist: currentPlaylist,\n      nextPlaylist: nextPlaylist,\n      bufferLowWaterLine: bufferLowWaterLine,\n      bufferHighWaterLine: bufferHighWaterLine,\n      duration: this.duration(),\n      experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n    var _this4 = this;\n\n    if (!this.experimentalBufferBasedABR) {\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this4.selectPlaylist();\n\n        if (_this4.shouldSwitchToMedia_(nextPlaylist)) {\n          _this4.switchMedia_(nextPlaylist, 'bandwidthupdate');\n        }\n\n        _this4.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this4.trigger('progress');\n      });\n    }\n\n    this.mainSegmentLoader_.on('error', function () {\n      _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n    });\n    this.mainSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.mainSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', function () {\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'hls-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.audioSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', function () {\n      _this4.logger_('main segment loader ended');\n\n      _this4.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', function (event) {\n      // never try to early abort with the new ABR algorithm\n      if (_this4.experimentalBufferBasedABR) {\n        return;\n      }\n\n      _this4.delegateLoaders_('all', ['abort']);\n\n      _this4.blacklistCurrentPlaylist({\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\n    });\n\n    var updateCodecs = function updateCodecs() {\n      if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return _this4.tryToCreateSourceBuffers_();\n      }\n\n      var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n      if (!codecs) {\n        return;\n      }\n\n      _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', function () {\n      _this4.logger_('audioSegmentLoader ended');\n\n      _this4.onEndOfStream();\n    });\n  };\n\n  _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n  ;\n\n  _proto.load = function load() {\n    this.mainSegmentLoader_.load();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions without performing destructive actions, like\n   * removing already buffered content\n   *\n   * @private\n   * @deprecated\n   */\n  ;\n\n  _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    this.fastQualityChange_(media);\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n  ;\n\n  _proto.fastQualityChange_ = function fastQualityChange_(media) {\n    var _this5 = this;\n\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    if (media === this.masterPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(function () {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n      } else {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n  ;\n\n  _proto.play = function play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n\n    if (this.hasPlayed_) {\n      this.load();\n    }\n\n    var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n  ;\n\n  _proto.setupFirstPlay = function setupFirstPlay() {\n    var _this6 = this;\n\n    var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n\n    if (!media.endList) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', function () {\n          _this6.trigger('firstplay');\n\n          _this6.tech_.setCurrentTime(seekable.end(0));\n\n          _this6.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceOpen_ = function handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceEnded_ = function handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n\n    var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n    if (!cues || !cues.length) {\n      return;\n    }\n\n    var duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleDurationChange_ = function handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n  ;\n\n  _proto.onEndOfStream = function onEndOfStream() {\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n\n    if (!isEndOfStream) {\n      return;\n    }\n\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n  ;\n\n  _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n    var seekable = this.seekable();\n\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n\n    var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n\n    var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n\n    var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Blacklists a playlist when an error occurs for a set amount of time\n   * making it unavailable for selection by the rendition selection algorithm\n   * and then forces a new playlist (rendition) selection.\n   *\n   * @param {Object=} error an optional error that may include the playlist\n   * to blacklist\n   * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n   * playlist\n   */\n  ;\n\n  _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n    if (error === void 0) {\n      error = {};\n    } // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // blacklisted instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n\n\n    var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the master OR while we were disposing of the tech\n\n    if (!currentPlaylist) {\n      this.error = error;\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n\n      return;\n    }\n\n    currentPlaylist.playlistErrors_++;\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var enabledPlaylists = playlists.filter(isEnabled);\n    var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n    // forever\n\n    if (playlists.length === 1 && blacklistDuration !== Infinity) {\n      videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.masterPlaylistLoader_.load(isFinalRendition);\n    }\n\n    if (isFinalRendition) {\n      // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // blacklist. This allows other playlists to be attempted in case any have been\n      // fixed.\n      var reincluded = false;\n      playlists.forEach(function (playlist) {\n        // skip current playlist which is about to be blacklisted\n        if (playlist === currentPlaylist) {\n          return;\n        }\n\n        var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Blacklist this playlist\n\n\n    var excludeUntil;\n\n    if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + blacklistDuration * 1000;\n    }\n\n    currentPlaylist.excludeUntil = excludeUntil;\n\n    if (error.reason) {\n      currentPlaylist.lastExcludeReason_ = error.reason;\n    }\n\n    this.tech_.trigger('blacklistplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-blacklisted'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-rendition-blacklisted'\n    }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n    // Would be something like media().id !=== currentPlaylist.id and we  would need something\n    // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n    // from loading a new playlist on any blacklist.\n    // Select a new playlist\n\n    var nextPlaylist = this.selectPlaylist();\n\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n\n    var logFn = error.internal ? this.logger_ : videojs.log.warn;\n    var errorMessage = error.message ? ' ' + error.message : '';\n    logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n\n    if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n  ;\n\n  _proto.pauseLoading = function pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main/master loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n  ;\n\n  _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n    var _this7 = this;\n\n    var loaders = [];\n    var dontFilterPlaylist = filter === 'all';\n\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.masterPlaylistLoader_);\n    }\n\n    var mediaTypes = [];\n\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n\n    mediaTypes.forEach(function (mediaType) {\n      var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(function (name) {\n      var loader = _this7[name + \"SegmentLoader_\"];\n\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(function (loader) {\n      return fnNames.forEach(function (fnName) {\n        if (typeof loader[fnName] === 'function') {\n          loader[fnName]();\n        }\n      });\n    });\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    var buffered = findRange(this.tech_.buffered(), currentTime);\n\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n\n    if (!this.masterPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n  ;\n\n  _proto.duration = function duration() {\n    if (!this.masterPlaylistLoader_) {\n      return 0;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.seekable_;\n  };\n\n  _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n    var audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.masterPlaylistLoader_) {\n      return;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      return;\n    }\n\n    var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n\n    var master = this.masterPlaylistLoader_.master;\n    var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n    if (mainSeekable.length === 0) {\n      return;\n    }\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        return;\n      }\n\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n\n    var oldEnd;\n    var oldStart;\n\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n\n    this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n  ;\n\n  _proto.updateDuration = function updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n\n    if (isLive) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n\n      return;\n    }\n\n    var buffered = this.tech_.buffered();\n    var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the MasterPlaylistController and everything\n   * that it controls\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this8 = this;\n\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.masterPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      var groups = _this8.mediaTypes_[type].groups;\n\n      for (var id in groups) {\n        groups[id].forEach(function (group) {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the master playlist object if we have one\n   *\n   * @return {Object} the master playlist object that we parsed\n   */\n  ;\n\n  _proto.master = function master() {\n    return this.masterPlaylistLoader_.master;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n  ;\n\n  _proto.media = function media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\n  };\n\n  _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n    var _this9 = this;\n\n    var media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    }; // set \"main\" media equal to video\n\n    media.video = media.main;\n    var playlistCodecs = codecsForPlaylist(this.master(), this.media());\n    var codecs = {};\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n\n    if (media.main.isMuxed) {\n      codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n    }\n\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n\n    if (!codecs.audio && !codecs.video) {\n      this.blacklistCurrentPlaylist({\n        playlist: this.media(),\n        message: 'Could not determine codecs for playlist.',\n        blacklistDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n    var supportFunction = function supportFunction(isFmp4, codec) {\n      return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    };\n\n    var unsupportedCodecs = {};\n    var unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n\n    if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n      var audioGroup = this.media().attributes.AUDIO;\n      this.master().playlists.forEach(function (variant) {\n        var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n        if (variantAudioGroup === audioGroup && variant !== _this9.media()) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n    } // if we have any unsupported codecs blacklist this playlist.\n\n\n    if (Object.keys(unsupportedCodecs).length) {\n      var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n        if (acc) {\n          acc += ', ';\n        }\n\n        acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n        return acc;\n      }, '') + '.';\n      this.blacklistCurrentPlaylist({\n        playlist: this.media(),\n        internal: true,\n        message: message,\n        blacklistDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      var switchMessages = [];\n      ['video', 'audio'].forEach(function (type) {\n        var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n        }\n      });\n\n      if (switchMessages.length) {\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n          blacklistDuration: Infinity,\n          internal: true\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n  ;\n\n  _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n\n    var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n  ;\n\n  _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n    var _this10 = this;\n\n    var playlists = this.master().playlists;\n    var ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var codecs = codecsForPlaylist(_this10.master, variant);\n      var unsupported = [];\n\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(\"audio codec \" + codecs.audio);\n      }\n\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(\"video codec \" + codecs.video);\n      }\n\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(\"text codec \" + codecs.text);\n      }\n\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n\n        _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n      }\n    });\n  }\n  /**\n   * Blacklist playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current master playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n  ;\n\n  _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n    var _this11 = this;\n\n    var ids = [];\n    var playlists = this.master().playlists;\n    var codecs = unwrapCodecList(parseCodecs(codecString));\n    var codecCount_ = codecCount(codecs);\n    var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var blacklistReasons = []; // get codecs from the playlist for this variant\n\n      var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n      var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n\n      if (variantCodecCount !== codecCount_) {\n        blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n\n      if (!_this11.sourceUpdater_.canChangeType()) {\n        var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n        } // the audio codec cannot change\n\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n        }\n      }\n\n      if (blacklistReasons.length) {\n        variant.excludeUntil = Infinity;\n\n        _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n      }\n    });\n  };\n\n  _proto.updateAdCues_ = function updateAdCues_(media) {\n    var offset = 0;\n    var seekable = this.seekable();\n\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n  ;\n\n  _proto.goalBufferLength = function goalBufferLength() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.GOAL_BUFFER_LENGTH;\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n  ;\n\n  _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.BUFFER_LOW_WATER_LINE;\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n  };\n\n  _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  };\n\n  return MasterPlaylistController;\n}(videojs.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistID];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(vhsHandler, playlist, id) {\n  var mpc = vhsHandler.masterPlaylistController_,\n      smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution && resolution.width;\n    this.height = resolution && resolution.height;\n    this.bandwidth = playlist.attributes.BANDWIDTH;\n  }\n\n  this.codecs = codecsForPlaylist(mpc.master(), playlist);\n  this.playlist = playlist; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = function () {\n    var master = vhsHandler.masterPlaylistController_.master();\n    var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n    if (!playlists) {\n      return [];\n    }\n\n    return playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(vhsHandler, e, e.id);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = /*#__PURE__*/function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    this.masterPlaylistController_ = options.masterPlaylistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var playHandler = function playHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var mpc = this.masterPlaylistController_;\n    var loaderTypes = ['main', 'subtitle', 'audio'];\n    var loaderChecks = {};\n    loaderTypes.forEach(function (type) {\n      loaderChecks[type] = {\n        reset: function reset() {\n          return _this.resetSegmentDownloads_(type);\n        },\n        updateend: function updateend() {\n          return _this.checkSegmentDownloads_(type);\n        }\n      };\n      mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    var setSeekingHandlers = function setSeekingHandlers(fn) {\n      ['main', 'audio'].forEach(function (type) {\n        mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\n      });\n    };\n\n    this.seekingAppendCheck_ = function () {\n      if (_this.fixesBadSeeks_()) {\n        _this.consecutiveUpdates = 0;\n        _this.lastRecordedTime = _this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n\n    this.clearSeekingAppendCheck_ = function () {\n      return setSeekingHandlers('off');\n    };\n\n    this.watchForBadSeeking_ = function () {\n      _this.clearSeekingAppendCheck_();\n\n      setSeekingHandlers('on');\n    };\n\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.clearSeekingAppendCheck_();\n\n      _this.logger_('dispose');\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      _this.tech_.off('play', playHandler);\n\n      _this.tech_.off('seeking', _this.watchForBadSeeking_);\n\n      _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\n\n      loaderTypes.forEach(function (type) {\n        mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n        mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n        _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  var _proto = PlaybackWatcher.prototype;\n\n  _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n    this.checkCurrentTime_();\n\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n  ;\n\n  _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n    var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n    if (this[type + \"StalledDownloads_\"] > 0) {\n      this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n    }\n\n    this[type + \"StalledDownloads_\"] = 0;\n    this[type + \"Buffered_\"] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We blacklist the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n  ;\n\n  _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n    var mpc = this.masterPlaylistController_;\n    var loader = mpc[type + \"SegmentLoader_\"];\n    var buffered = loader.buffered_();\n    var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n    this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n\n    this[type + \"StalledDownloads_\"]++;\n    this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[type + \"StalledDownloads_\"] < 10) {\n      return;\n    }\n\n    this.logger_(type + \" loader stalled download exclusion\");\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: \"vhs-\" + type + \"-download-exclusion\"\n    });\n\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n\n    mpc.blacklistCurrentPlaylist({\n      message: \"Excessive \" + type + \" segment downloading detected.\"\n    }, Infinity);\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkCurrentTime_ = function checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\n   * designed to detect that we are stalled\n   *\n   * @private\n   */\n  ;\n\n  _proto.cancelTimer_ = function cancelTimer_() {\n    this.consecutiveUpdates = 0;\n\n    if (this.timer_) {\n      this.logger_('cancelTimer_');\n      clearTimeout(this.timer_);\n    }\n\n    this.timer_ = null;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n  ;\n\n  _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n    var seeking = this.tech_.seeking();\n\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n    var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    var seekTo;\n\n    if (isAfterSeekableRange) {\n      var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\n    var buffered = this.tech_.buffered();\n    var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    var media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    var bufferedToCheck = [audioBuffered, videoBuffered];\n\n    for (var i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n\n      var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n\n    var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n  ;\n\n  _proto.waiting_ = function waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n    var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n  ;\n\n  _proto.techWaiting_ = function techWaiting_() {\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n\n    if (this.tech_.seeking() || this.timer_ !== null) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var livePoint = seekable.end(seekable.length - 1);\n      this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-live-resync'\n      });\n      return true;\n    }\n\n    var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n    var buffered = this.tech_.buffered();\n    var videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime: currentTime\n    });\n\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-video-underflow'\n      });\n      return true;\n    }\n\n    var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      var difference = nextRange.start(0) - currentTime;\n      this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n      this.cancelTimer_();\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n    return false;\n  };\n\n  _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n    if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n      allowSeeksWithinUnsafeLiveWindow = false;\n    }\n\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n\n    var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    var isLive = !playlist.endList;\n\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\n    var videoBuffered = _ref.videoBuffered,\n        audioBuffered = _ref.audioBuffered,\n        currentTime = _ref.currentTime; // audio only content will not have video underflow :)\n\n    if (!videoBuffered) {\n      return;\n    }\n\n    var gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      var videoRange = findRange(videoBuffered, currentTime);\n      var audioRange = findRange(audioBuffered, currentTime);\n\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n\n    } else {\n      var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n\n    if (gap) {\n      this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n  ;\n\n  _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n    var buffered = this.tech_.buffered();\n    var currentTime = this.tech_.currentTime();\n    var nextRange = findNextRange(buffered, currentTime);\n    this.cancelTimer_();\n\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-gap-skip'\n    });\n  };\n\n  _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    var gaps = findGaps(buffered);\n\n    for (var i = 0; i < gaps.length; i++) {\n      var start = gaps.start(i);\n      var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }\n\n    return null;\n  };\n\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$4 = \"2.14.2\";\nvar version$3 = \"6.0.1\";\nvar version$2 = \"0.21.1\";\nvar version$1 = \"4.7.1\";\nvar version = \"3.1.3\";\nvar Vhs = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector: lastBandwidthSelector,\n  movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(function (prop) {\n  Object.defineProperty(Vhs, prop, {\n    get: function get() {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n      return Config[prop];\n    },\n    set: function set(value) {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nvar handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\n\nvar handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n  vhs.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var codecs = {};\n\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n\n  var videoContentType = getMimeForCodec(codecs.video);\n  var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\n\nvar getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n  return playlists.reduce(function (keySystemsArr, playlist) {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n\n    var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n      var keySystemOptions = playlist.contentProtection[keySystem];\n\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n\n      return keySystemsObj;\n    }, {});\n\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the master playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\n\nvar waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n  var player = _ref.player,\n      sourceKeySystems = _ref.sourceKeySystems,\n      audioMedia = _ref.audioMedia,\n      mainPlaylists = _ref.mainPlaylists;\n\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n\n  var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  var initializationFinishedPromises = [];\n  var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n    keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([// If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\n\nvar setupEmeOptions = function setupEmeOptions(_ref2) {\n  var player = _ref2.player,\n      sourceKeySystems = _ref2.sourceKeySystems,\n      media = _ref2.media,\n      audioMedia = _ref2.audioMedia;\n  var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n  if (!sourceOptions) {\n    return false;\n  }\n\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n\n  return true;\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window$1.localStorage) {\n    return null;\n  }\n\n  var storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window$1.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\n\nvar expandDataUri = function expandDataUri(dataUri) {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nVhs.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nVhs.isSupported = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar VhsHandler = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VhsHandler, _Component);\n\n  function VhsHandler(source, tech, options) {\n    var _this;\n\n    _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n    if (options.hls && Object.keys(options.hls).length) {\n      videojs.log.warn('Using hls options is deprecated. Please rename `hls` to `vhs` in your options object.');\n    } // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n\n    if (typeof options.initialBandwidth === 'number') {\n      _this.options_.bandwidth = options.initialBandwidth;\n    }\n\n    _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('vhs')) {\n        Object.defineProperty(_player, 'vhs', {\n          get: function get() {\n            videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'vhs-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('dash')) {\n        Object.defineProperty(_player, 'dash', {\n          get: function get() {\n            videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        _this.masterPlaylistController_.checkABR_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have mpc loaded.\n      if (this.tech_.error() && this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  var _proto = VhsHandler.prototype;\n\n  _proto.setOptions_ = function setOptions_() {\n    var _this2 = this; // defaults\n\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n    if (typeof this.options_.blacklistDuration !== 'number') {\n      this.options_.blacklistDuration = 5 * 60;\n    }\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        var storedObject = getVhsLocalStorage();\n\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-bandwidth-from-local-storage'\n          });\n        }\n\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\n      if (typeof _this2.source_[option] !== 'undefined') {\n        _this2.options_[option] = _this2.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n  ;\n\n  _proto.src = function src(_src, type) {\n    var _this3 = this; // do nothing if the src is falsey\n\n\n    if (!_src) {\n      return;\n    }\n\n    this.setOptions_(); // add master playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = function (time) {\n      _this3.tech_.setCurrentTime(time);\n    };\n\n    if (this.options_.smoothQualityChange) {\n      videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n    }\n\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n    var playbackWatcherOptions = videojs.mergeOptions({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: function seekable() {\n        return _this3.seekable();\n      },\n      media: function media() {\n        return _this3.masterPlaylistController_.media();\n      },\n      masterPlaylistController: this.masterPlaylistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.masterPlaylistController_.on('error', function () {\n      var player = videojs.players[_this3.tech_.options_.playerId];\n      var error = _this3.masterPlaylistController_.error;\n\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n\n      player.error(error);\n    });\n    var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n    this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get: function get() {\n          return this.masterPlaylistController_.selectPlaylist;\n        },\n        set: function set(selectPlaylist) {\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get: function get() {\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set: function set(throughput) {\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get: function get() {\n          var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          var networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          var tenMbpsAsBitsPerSecond = 10e6;\n\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n\n          return playerBandwidthEst;\n        },\n        set: function set(bandwidth) {\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get: function get() {\n          var invBandwidth = 1 / (this.bandwidth || 1);\n          var invThroughput;\n\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set: function set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: function get() {\n          return _this3.bandwidth || 0;\n        },\n        enumerable: true\n      },\n      mediaRequests: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequests_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n        },\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n        },\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n        },\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n        },\n        enumerable: true\n      },\n      mediaAppends: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaAppends_() || 0;\n        },\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      buffered: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.buffered());\n        },\n        enumerable: true\n      },\n      currentTime: {\n        get: function get() {\n          return _this3.tech_.currentTime();\n        },\n        enumerable: true\n      },\n      currentSource: {\n        get: function get() {\n          return _this3.tech_.currentSource_;\n        },\n        enumerable: true\n      },\n      currentTech: {\n        get: function get() {\n          return _this3.tech_.name_;\n        },\n        enumerable: true\n      },\n      duration: {\n        get: function get() {\n          return _this3.tech_.duration();\n        },\n        enumerable: true\n      },\n      master: {\n        get: function get() {\n          return _this3.playlists.master;\n        },\n        enumerable: true\n      },\n      playerDimensions: {\n        get: function get() {\n          return _this3.tech_.currentDimensions();\n        },\n        enumerable: true\n      },\n      seekable: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.seekable());\n        },\n        enumerable: true\n      },\n      timestamp: {\n        get: function get() {\n          return Date.now();\n        },\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: function get() {\n          return _this3.tech_.getVideoPlaybackQuality();\n        },\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n    this.tech_.on('bandwidthupdate', function () {\n      if (_this3.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: _this3.bandwidth,\n          throughput: Math.round(_this3.throughput)\n        });\n      }\n    });\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(_this3);\n    });\n    this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n      _this3.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.masterPlaylistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  };\n\n  _proto.createKeySessions_ = function createKeySessions_() {\n    var _this4 = this;\n\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.master.playlists\n    }).then(function () {\n      _this4.logger_('created EME key session');\n\n      _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n    })[\"catch\"](function (err) {\n      _this4.logger_('error while creating EME key session', err);\n\n      _this4.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  };\n\n  _proto.handleWaitingForKey_ = function handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n  ;\n\n  _proto.setupEme_ = function setupEme_() {\n    var _this5 = this;\n\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    var didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', function (e) {\n      if (e.status === 'output-restricted') {\n        _this5.masterPlaylistController_.blacklistCurrentPlaylist({\n          playlist: _this5.masterPlaylistController_.media(),\n          message: \"DRM keystatus changed to \" + e.status + \". Playlist will fail to play. Check for HDCP content.\",\n          blacklistDuration: Infinity\n        });\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.masterPlaylistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n  ;\n\n  _proto.setupQualityLevels_ = function setupQualityLevels_() {\n    var _this6 = this;\n\n    var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n\n    this.qualityLevels_ = player.qualityLevels();\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      handleVhsLoadedMetadata(_this6.qualityLevels_, _this6);\n    });\n    this.playlists.on('mediachange', function () {\n      handleVhsMediaChange(_this6.qualityLevels_, _this6.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  VhsHandler.version = function version$5() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  _proto.version = function version() {\n    return this.constructor.version();\n  };\n\n  _proto.canChangeType = function canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n  ;\n\n  _proto.play = function play() {\n    this.masterPlaylistController_.play();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    this.masterPlaylistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.duration = function duration() {\n    return this.masterPlaylistController_.duration();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.masterPlaylistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n\n    if (this.masterPlaylistController_) {\n      this.masterPlaylistController_.dispose();\n    }\n\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n\n    if (this.player_) {\n      delete this.player_.vhs;\n      delete this.player_.dash;\n      delete this.player_.hls;\n    }\n\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n    if (this.tech_) {\n      delete this.tech_.hls;\n    }\n\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.masterPlaylistController_.media(),\n      time: time,\n      callback: callback\n    });\n  } // the player must be playing before calling this\n  ;\n\n  _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n    if (pauseAfterSeek === void 0) {\n      pauseAfterSeek = true;\n    }\n\n    if (retryCount === void 0) {\n      retryCount = 2;\n    }\n\n    return seekToProgramTime({\n      programTime: programTime,\n      playlist: this.masterPlaylistController_.media(),\n      retryCount: retryCount,\n      pauseAfterSeek: pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback: callback\n    });\n  };\n\n  return VhsHandler;\n}(Component);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource: function canHandleSource(srcObj, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n\n    if (!videojs.hasOwnProperty('hls')) {\n      Object.defineProperty(tech, 'hls', {\n        get: function get() {\n          videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n          return tech.vhs;\n        },\n        configurable: true\n      });\n    }\n\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType: function canPlayType(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _videojs$mergeOptions = videojs.mergeOptions(videojs.options, options),\n        _videojs$mergeOptions2 = _videojs$mergeOptions.vhs;\n\n    _videojs$mergeOptions2 = _videojs$mergeOptions2 === void 0 ? {} : _videojs$mergeOptions2;\n    var _videojs$mergeOptions3 = _videojs$mergeOptions2.overrideNative,\n        overrideNative = _videojs$mergeOptions3 === void 0 ? !videojs.browser.IS_ANY_SAFARI : _videojs$mergeOptions3,\n        _videojs$mergeOptions4 = _videojs$mergeOptions.hls;\n    _videojs$mergeOptions4 = _videojs$mergeOptions4 === void 0 ? {} : _videojs$mergeOptions4;\n    var _videojs$mergeOptions5 = _videojs$mergeOptions4.overrideNative,\n        legacyOverrideNative = _videojs$mergeOptions5 === void 0 ? false : _videojs$mergeOptions5;\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || legacyOverrideNative || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\n\nvideojs.VhsHandler = VhsHandler;\nObject.defineProperty(videojs, 'HlsHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n    return VhsHandler;\n  },\n  configurable: true\n});\nvideojs.VhsSourceHandler = VhsSourceHandler;\nObject.defineProperty(videojs, 'HlsSourceHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n    return VhsSourceHandler;\n  },\n  configurable: true\n});\nvideojs.Vhs = Vhs;\nObject.defineProperty(videojs, 'Hls', {\n  get: function get() {\n    videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n    return Vhs;\n  },\n  configurable: true\n});\n\nif (!videojs.use) {\n  videojs.registerComponent('Hls', Vhs);\n  videojs.registerComponent('Vhs', Vhs);\n}\n\nvideojs.options.vhs = videojs.options.vhs || {};\nvideojs.options.hls = videojs.options.hls || {};\n\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  var registerPlugin = videojs.registerPlugin || videojs.plugin;\n  registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs;\n","/*! @name videojs-contrib-quality-levels @version 2.0.9 @license Apache-2.0 */\nimport videojs from 'video.js';\nimport document from 'global/document';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\n\nvar QualityLevel =\n/**\n * Creates a QualityLevel\n *\n * @param {Representation|Object} representation The representation of the quality level\n * @param {string}   representation.id        Unique id of the QualityLevel\n * @param {number=}  representation.width     Resolution width of the QualityLevel\n * @param {number=}  representation.height    Resolution height of the QualityLevel\n * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n */\nfunction QualityLevel(representation) {\n  var level = this; // eslint-disable-line\n\n  if (videojs.browser.IS_IE8) {\n    level = document.createElement('custom');\n\n    for (var prop in QualityLevel.prototype) {\n      if (prop !== 'constructor') {\n        level[prop] = QualityLevel.prototype[prop];\n      }\n    }\n  }\n\n  level.id = representation.id;\n  level.label = level.id;\n  level.width = representation.width;\n  level.height = representation.height;\n  level.bitrate = representation.bandwidth;\n  level.enabled_ = representation.enabled;\n  Object.defineProperty(level, 'enabled', {\n    /**\n     * Get whether the QualityLevel is enabled.\n     *\n     * @return {boolean} True if the QualityLevel is enabled.\n     */\n    get: function get() {\n      return level.enabled_();\n    },\n\n    /**\n     * Enable or disable the QualityLevel.\n     *\n     * @param {boolean} enable true to enable QualityLevel, false to disable.\n     */\n    set: function set(enable) {\n      level.enabled_(enable);\n    }\n  });\n  return level;\n};\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nvar QualityLevelList =\n/*#__PURE__*/\nfunction (_videojs$EventTarget) {\n  _inheritsLoose(QualityLevelList, _videojs$EventTarget);\n\n  function QualityLevelList() {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n\n    var list = _assertThisInitialized(_assertThisInitialized(_this)); // eslint-disable-line\n\n\n    if (videojs.browser.IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in QualityLevelList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = QualityLevelList.prototype[prop];\n        }\n      }\n    }\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get: function get() {\n        return list.levels_.length;\n      }\n    });\n    return list || _assertThisInitialized(_this);\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n\n  var _proto = QualityLevelList.prototype;\n\n  _proto.addQualityLevel = function addQualityLevel(representation) {\n    var qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n\n    var index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.levels_[index];\n        }\n      });\n    }\n\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel: qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  };\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n\n  _proto.removeQualityLevel = function removeQualityLevel(qualityLevel) {\n    var removed = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n\n        break;\n      }\n    }\n\n    if (removed) {\n      this.trigger({\n        qualityLevel: qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n\n    return removed;\n  };\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n\n  _proto.getQualityLevelById = function getQualityLevelById(id) {\n    for (var i = 0, l = this.length; i < l; i++) {\n      var level = this[i];\n\n      if (level.id === id) {\n        return level;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  };\n\n  return QualityLevelList;\n}(videojs.EventTarget);\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\n\nvar version = \"2.0.9\";\n\nvar registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var originalPluginFn = player.qualityLevels;\n  var qualityLevelList = new QualityLevelList();\n\n  var disposeHandler = function disposeHandler() {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n\n  player.on('dispose', disposeHandler);\n\n  player.qualityLevels = function () {\n    return qualityLevelList;\n  };\n\n  player.qualityLevels.VERSION = version;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */\n\n\nvar qualityLevels = function qualityLevels(options) {\n  return initPlugin(this, videojs.mergeOptions({}, options));\n}; // Register the plugin with video.js.\n\n\nregisterPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version;\n\nexport default qualityLevels;\n","import videojs from 'video.js';\n\nvar version = \"1.1.6\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar MenuItem = videojs.getComponent('MenuItem');\nvar Component = videojs.getComponent('Component');\n\nvar SourceMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(SourceMenuItem, _MenuItem);\n\n  function SourceMenuItem(player, options) {\n    options.selectable = true;\n    options.multiSelectable = false;\n    return _MenuItem.call(this, player, options) || this;\n  }\n\n  var _proto = SourceMenuItem.prototype;\n\n  _proto.handleClick = function handleClick() {\n    var selected = this.options_;\n    console.log(\"Changing quality to:\", selected.label);\n\n    _MenuItem.prototype.handleClick.call(this);\n\n    var levels = this.player().qualityLevels();\n\n    for (var i = 0; i < levels.length; i++) {\n      if (selected.index == levels.length) {\n        // If this is the Auto option, enable all renditions for adaptive selection\n        levels[i].enabled = true;\n      } else if (selected.index == i) {\n        levels[i].enabled = true;\n      } else {\n        levels[i].enabled = false;\n      }\n    }\n  };\n\n  _proto.update = function update() {\n    var selectedIndex = this.player().qualityLevels().selectedIndex;\n    this.selected(this.options_.index == selectedIndex);\n  };\n\n  return SourceMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('SourceMenuItem', SourceMenuItem);\n\nvar MenuButton = videojs.getComponent('MenuButton');\n\nvar SourceMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(SourceMenuButton, _MenuButton);\n\n  function SourceMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n    MenuButton.apply(_assertThisInitialized(_this), arguments);\n\n    var qualityLevels = _this.player().qualityLevels(); // Handle options: We accept an options.default value of ( high || low )\n    // This determines a bias to set initial resolution selection.\n\n\n    if (options && options[\"default\"]) {\n      if (options[\"default\"] == 'low') {\n        for (var i = 0; i < qualityLevels.length; i++) {\n          qualityLevels[i].enabled = i == 0;\n        }\n      } else if (options[\"default\"] = 'high') {\n        for (var i = 0; i < qualityLevels.length; i++) {\n          qualityLevels[i].enabled = i == qualityLevels.length - 1;\n        }\n      }\n    } // Bind update to qualityLevels changes\n\n\n    _this.player().qualityLevels().on(['change', 'addqualitylevel'], videojs.bind(_assertThisInitialized(_this), _this.update));\n\n    return _this;\n  }\n\n  var _proto = SourceMenuButton.prototype;\n\n  _proto.createEl = function createEl() {\n    return videojs.dom.createEl('div', {\n      className: 'vjs-http-source-selector vjs-menu-button vjs-menu-button-popup vjs-control vjs-button'\n    });\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MenuButton.prototype.buildCSSClass.call(this) + ' vjs-icon-cog';\n  };\n\n  _proto.update = function update() {\n    return MenuButton.prototype.update.call(this);\n  };\n\n  _proto.createItems = function createItems() {\n    var menuItems = [];\n    var levels = this.player().qualityLevels();\n    var labels = [];\n\n    for (var i = 0; i < levels.length; i++) {\n      var index = levels.length - (i + 1);\n      var selected = index === levels.selectedIndex; // Display height if height metadata is provided with the stream, else use bitrate\n\n      var label = \"\" + index;\n      var sortVal = index;\n\n      if (levels[index].height) {\n        label = levels[index].height + \"p\";\n        sortVal = parseInt(levels[index].height, 10);\n      } else if (levels[index].bitrate) {\n        label = Math.floor(levels[index].bitrate / 1e3) + \" kbps\";\n        sortVal = parseInt(levels[index].bitrate, 10);\n      } // Skip duplicate labels\n\n\n      if (labels.indexOf(label) >= 0) {\n        continue;\n      }\n\n      labels.push(label);\n      menuItems.push(new SourceMenuItem(this.player_, {\n        label: label,\n        index: index,\n        selected: selected,\n        sortVal: sortVal\n      }));\n    } // If there are multiple quality levels, offer an 'auto' option\n\n\n    if (levels.length > 1) {\n      menuItems.push(new SourceMenuItem(this.player_, {\n        label: 'Auto',\n        index: levels.length,\n        selected: false,\n        sortVal: 99999\n      }));\n    } // Sort menu items by their label name with Auto always first\n\n\n    menuItems.sort(function (a, b) {\n      if (a.options_.sortVal < b.options_.sortVal) {\n        return 1;\n      } else if (a.options_.sortVal > b.options_.sortVal) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n    return menuItems;\n  };\n\n  return SourceMenuButton;\n}(MenuButton);\n\nvar defaults = {}; // Cross-compatibility for Video.js 5 and 6.\n\nvar registerPlugin = videojs.registerPlugin || videojs.plugin; // const dom = videojs.dom || videojs;\n\n/**\n* Function to invoke when the player is ready.\n*\n* This is a great place for your plugin to initialize itself. When this\n* function is called, the player will have its DOM and child components\n* in place.\n*\n* @function onPlayerReady\n* @param    {Player} player\n*           A Video.js player object.\n*\n* @param    {Object} [options={}]\n*           A plain object containing options for the plugin.\n*/\n\nvar onPlayerReady = function onPlayerReady(player, options) {\n  player.addClass('vjs-http-source-selector');\n  console.log(\"videojs-http-source-selector initialized!\");\n  console.log(\"player.techName_:\" + player.techName_); //This plugin only supports level selection for HLS playback\n\n  if (player.techName_ != 'Html5') {\n    return false;\n  }\n  /**\n  *\n  * We have to wait for the manifest to load before we can scan renditions for resolutions/bitrates to populate selections\n  *\n  **/\n\n\n  player.on(['loadedmetadata'], function (e) {\n    var qualityLevels = player.qualityLevels();\n    videojs.log('loadmetadata event'); // hack for plugin idempodency... prevents duplicate menubuttons from being inserted into the player if multiple player.httpSourceSelector() functions called.\n\n    if (player.videojs_http_source_selector_initialized == 'undefined' || player.videojs_http_source_selector_initialized == true) {\n      console.log(\"player.videojs_http_source_selector_initialized == true\");\n    } else {\n      console.log(\"player.videojs_http_source_selector_initialized == false\");\n      player.videojs_http_source_selector_initialized = true;\n      var controlBar = player.controlBar,\n          fullscreenToggle = controlBar.getChild('fullscreenToggle').el();\n      controlBar.el().insertBefore(controlBar.addChild('SourceMenuButton').el(), fullscreenToggle);\n    }\n  });\n};\n/**\n* A video.js plugin.\n*\n* In the plugin function, the value of `this` is a video.js `Player`\n* instance. You cannot rely on the player being in a \"ready\" state here,\n* depending on how the plugin is invoked. This may or may not be important\n* to you; if not, remove the wait for \"ready\"!\n*\n* @function httpSourceSelector\n* @param    {Object} [options={}]\n*           An object of options left to the plugin author to define.\n*/\n\n\nvar httpSourceSelector = function httpSourceSelector(options) {\n  var _this = this;\n\n  this.ready(function () {\n    onPlayerReady(_this, videojs.mergeOptions(defaults, options)); //this.getChild('controlBar').addChild('SourceMenuButton', {});\n  });\n  videojs.registerComponent('SourceMenuButton', SourceMenuButton);\n  videojs.registerComponent('SourceMenuItem', SourceMenuItem);\n}; // Register the plugin with video.js.\n\n\nregisterPlugin('httpSourceSelector', httpSourceSelector); // Include the version number.\n\nhttpSourceSelector.VERSION = version;\n\nexport default httpSourceSelector;\n","import videojs from \"video.js\";\n\nimport \"video.js/dist/video-js.css\";\n\nimport \"videojs-contrib-quality-levels\";\nimport \"videojs-http-source-selector\";\n\nconst options = {\n  muted: true,\n  language: \"en\",\n  preload: \"auto\",\n  fluid: true,\n  html5: {\n    hls: {\n      overrideNative: true,\n      limitRenditionByPlayerDimensions: true,\n      useDevicePixelRatio: true\n      // bandwidth: 16777216,\n    },\n    nativeAudioTracks: false,\n    nativeVideoTracks: false,\n    useBandwidthFromLocalStorage: true\n  },\n  controlBar: {\n    pictureInPictureToggle: false\n  }\n};\n\nconst video = videojs(\"player\", options, () => {\n  let element = document.querySelector(\".demo\");\n  element.style.opacity = \"1\";\n});\nvideo.httpSourceSelector();\n"]}